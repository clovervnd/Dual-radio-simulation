cscope 15 $HOME/Desktop/Dual-radio-simulation/core/net/ipv6               0000292206
	@ipv6_debug.h

4 
	#DEBUG_SICSLOWPAN
 0

	)

5 
	#DEBUG_UIP6
 0

	)

6 
	#DEBUG_UIP_DS6
 0

	)

7 
	#DEBUG_UIP_DS6_NBR
 1

	)

8 
	#DEBUG_UIP_DS6_ROUTE
 0

	)

9 
	#DEBUG_UIP_ICMP6
 0

	)

10 
	#DEBUG_UIP_ND6
 0

	)

13 
	#ANA_SICSLOWPAN
 1

	)

14 
	#ANA_UIP6
 1

	)

15 
	#ANA_UIP_DS6
 1

	)

16 
	#ANA_UIP_DS6_NBR
 1

	)

17 
	#ANA_UIP_DS6_ROUTE
 1

	)

18 
	#ANA_UIP_ICMP6
 1

	)

19 
	#ANA_UIP_ND6
 1

	)

	@sicslowpan.c

61 
	~<°rög.h
>

63 
	~"c⁄tiki.h
"

64 
	~"dev/w©chdog.h
"

65 
	~"√t/ù/t˝ù.h
"

66 
	~"√t/ù/uù.h
"

67 
	~"√t/ùv6/uù-ds6.h
"

68 
	~"√t/rime/rime.h
"

69 
	~"√t/ùv6/sic¶ow∑n.h
"

70 
	~"√t/√t°ack.h
"

72 
	~<°dio.h
>

74 
	~"ùv6_debug.h
"

75 
	#DEBUG
 
DEBUG_SICSLOWPAN


	)

76 
	~"√t/ù/uù-debug.h
"

77 #i‡
DEBUG


79 
uöt8_t
 
	gp
;

80 
	~<°dio.h
>

81 
	#PRINTFI
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

82 
	#PRINTFO
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

84 
	#PRINTFI
(...)

	)

85 
	#PRINTFO
(...)

	)

89 #i‡
ANA_SICSLOWPAN


90 
	#ANA
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

92 
	#ANA
(...)

	)

95 #i‡
UIP_LOGGING


96 
	~<°dio.h
>

97 
uù_log
(*
msg
);

98 
	#UIP_LOG
(
m
Ë
	`uù_log
(m)

	)

100 
	#UIP_LOG
(
m
)

	)

103 #i‚de‡
SICSLOWPAN_COMPRESSION


104 #ifde‡
SICSLOWPAN_CONF_COMPRESSION


105 
	#SICSLOWPAN_COMPRESSION
 
SICSLOWPAN_CONF_COMPRESSION


	)

107 
	#SICSLOWPAN_COMPRESSION
 
SICSLOWPAN_COMPRESSION_IPV6


	)

111 
	#GET16
(
±r
,
ödex
Ë(((
uöt16_t
)(’å)[ödex] << 8)Ë| (’å)[(ödexË+ 1]))

	)

112 
	#SET16
(
±r
,
ödex
,
vÆue
) do { \

113 (
±r
)[
ödex
] = ((
vÆue
) >> 8) & 0xff; \

114 (
±r
)[
ödex
 + 1] = (
vÆue
) & 0xff; \

115 } 0)

	)

120 
	#PACKETBUF_FRAG_PTR
 (
∑ckëbuf_±r
)

	)

121 
	#PACKETBUF_FRAG_DISPATCH_SIZE
 0

	)

122 
	#PACKETBUF_FRAG_TAG
 2

	)

123 
	#PACKETBUF_FRAG_OFFSET
 4

	)

126 
	#PACKETBUF_IPHC_BUF
 ((
uöt8_t
 *)(
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
))

	)

128 
	#PACKETBUF_HC1_PTR
 (
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
)

	)

129 
	#PACKETBUF_HC1_DISPATCH
 0

	)

130 
	#PACKETBUF_HC1_ENCODING
 1

	)

131 
	#PACKETBUF_HC1_TTL
 2

	)

133 
	#PACKETBUF_HC1_HC_UDP_PTR
 (
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
)

	)

134 
	#PACKETBUF_HC1_HC_UDP_DISPATCH
 0

	)

135 
	#PACKETBUF_HC1_HC_UDP_HC1_ENCODING
 1

	)

136 
	#PACKETBUF_HC1_HC_UDP_UDP_ENCODING
 2

	)

137 
	#PACKETBUF_HC1_HC_UDP_TTL
 3

	)

138 
	#PACKETBUF_HC1_HC_UDP_PORTS
 4

	)

139 
	#PACKETBUF_HC1_HC_UDP_CHKSUM
 5

	)

146 
	#SICSLOWPAN_IP_BUF
(
buf
Ë((
uù_ù_hdr
 *)buf)

	)

147 
	#SICSLOWPAN_UDP_BUF
(
buf
Ë((
uù_udp_hdr
 *)&buf[
UIP_IPH_LEN
])

	)

149 
	#UIP_IP_BUF
 ((
uù_ù_hdr
 *)&
uù_buf
[
UIP_LLH_LEN
])

	)

150 
	#UIP_UDP_BUF
 ((
uù_udp_hdr
 *)&
uù_buf
[
UIP_LLIPH_LEN
])

	)

151 
	#UIP_TCP_BUF
 ((
uù_t˝_hdr
 *)&
uù_buf
[
UIP_LLIPH_LEN
])

	)

152 
	#UIP_ICMP_BUF
 ((
uù_icmp_hdr
 *)&
uù_buf
[
UIP_LLIPH_LEN
])

	)

159 #ifde‡
SICSLOWPAN_CONF_MAC_MAX_PAYLOAD


160 
	#MAC_MAX_PAYLOAD
 
SICSLOWPAN_CONF_MAC_MAX_PAYLOAD


	)

162 
	#MAC_MAX_PAYLOAD
 (127 - 2)

	)

168 #ifde‡
SICSLOWPAN_CONF_COMPRESSION_THRESHOLD


169 
	#COMPRESSION_THRESHOLD
 
SICSLOWPAN_CONF_COMPRESSION_THRESHOLD


	)

171 
	#COMPRESSION_THRESHOLD
 0

	)

186 
uöt8_t
 *
	g∑ckëbuf_±r
;

193 
uöt8_t
 
	g∑ckëbuf_hdr_Àn
;

201 
	g∑ckëbuf_∑ylﬂd_Àn
;

207 
uöt8_t
 
	guncomp_hdr_Àn
;

212 
	gœ°_tx_°©us
;

216 
	gœ°_rssi
;

222 #i‡
SICSLOWPAN_CONF_FRAG


223 
uöt16_t
 
	gmy_èg
;

229 #ifde‡
SICSLOWPAN_CONF_FRAGMENT_BUFFERS


230 
	#SICSLOWPAN_FRAGMENT_BUFFERS
 
SICSLOWPAN_CONF_FRAGMENT_BUFFERS


	)

232 
	#SICSLOWPAN_FRAGMENT_BUFFERS
 12

	)

240 #ifde‡
SICSLOWPAN_CONF_REASS_CONTEXTS


241 
	#SICSLOWPAN_REASS_CONTEXTS
 
SICSLOWPAN_CONF_REASS_CONTEXTS


	)

243 
	#SICSLOWPAN_REASS_CONTEXTS
 2

	)

247 #ifde‡
SICSLOWPAN_CONF_FRAGMENT_SIZE


248 
	#SICSLOWPAN_FRAGMENT_SIZE
 
SICSLOWPAN_CONF_FRAGMENT_SIZE


	)

250 
	#SICSLOWPAN_FRAGMENT_SIZE
 110

	)

254 
	#SICSLOWPAN_FIRST_FRAGMENT_SIZE
 (
SICSLOWPAN_FRAGMENT_SIZE
 + 38)

	)

257 
	ssic¶ow∑n_‰ag_öfo
 {

259 
lökaddr_t
 
	m£ndî
;

261 
lökaddr_t
 
	mª˚ivî
;

263 
uöt16_t
 
	mèg
;

265 
uöt16_t
 
	mÀn
;

267 
uöt16_t
 
	mªas£mbÀd_Àn
;

269 
timî
 
	mªass_timî
;

272 
uöt16_t
 
	mfú°_‰ag_Àn
;

275 
uöt8_t
 
	mfú°_‰ag
[
SICSLOWPAN_FIRST_FRAGMENT_SIZE
];

278 
sic¶ow∑n_‰ag_öfo
 
	g‰ag_öfo
[
SICSLOWPAN_REASS_CONTEXTS
];

280 
	ssic¶ow∑n_‰ag_buf
 {

282 
uöt8_t
 
	mödex
;

284 
uöt8_t
 
	moff£t
;

286 
uöt8_t
 
	mÀn
;

287 
uöt8_t
 
	md©a
[
SICSLOWPAN_FRAGMENT_SIZE
];

290 
sic¶ow∑n_‰ag_buf
 
	g‰ag_buf
[
SICSLOWPAN_FRAGMENT_BUFFERS
];

294 
	$˛ór_‰agmíts
(
uöt8_t
 
‰ag_öfo_ödex
)

296 
i
, 
˛ór_cou¡
;

297 
˛ór_cou¡
 = 0;

298 
‰ag_öfo
[
‰ag_öfo_ödex
].
Àn
 = 0;

299 
i
 = 0; i < 
SICSLOWPAN_FRAGMENT_BUFFERS
; i++) {

300 if(
‰ag_buf
[
i
].
Àn
 > 0 && føg_buf[i].
ödex
 =
‰ag_öfo_ödex
) {

302 
‰ag_buf
[
i
].
Àn
 = 0;

303 
˛ór_cou¡
++;

306  
˛ór_cou¡
;

307 
	}
}

310 
	$timeout_‰agmíts
(
nŸ_c⁄ãxt
)

312 
i
;

313 
cou¡
 = 0;

314 
i
 = 0; i < 
SICSLOWPAN_REASS_CONTEXTS
; i++) {

315 if(
‰ag_öfo
[
i
].
Àn
 > 0 && i !
nŸ_c⁄ãxt
 &&

316 
	`timî_expúed
(&
‰ag_öfo
[
i
].
ªass_timî
)) {

318 
cou¡
 +
	`˛ór_‰agmíts
(
i
);

321  
cou¡
;

322 
	}
}

325 
	$°‹e_‰agmít
(
uöt8_t
 
ödex
, uöt8_à
off£t
)

327 
i
;

328 
i
 = 0; i < 
SICSLOWPAN_FRAGMENT_BUFFERS
; i++) {

329 if(
‰ag_buf
[
i
].
Àn
 == 0) {

331 
‰ag_buf
[
i
].
off£t
 = offset;

332 
‰ag_buf
[
i
].
Àn
 = 
	`∑ckëbuf_d©Æí
(Ë- 
∑ckëbuf_hdr_Àn
;

333 
‰ag_buf
[
i
].
ödex
 = index;

334 
	`mem˝y
(
‰ag_buf
[
i
].
d©a
, 
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
,

335 
	`∑ckëbuf_d©Æí
(Ë- 
∑ckëbuf_hdr_Àn
);

337 
	`PRINTF
("Føgsize: %d\n", 
‰ag_buf
[
i
].
Àn
);

339  
‰ag_buf
[
i
].
Àn
;

344 
	}
}

347 
öt8_t


348 
	$add_‰agmít
(
uöt16_t
 
èg
, uöt16_à
‰ag_size
, 
uöt8_t
 
off£t
)

350 
i
;

351 
Àn
;

352 
öt8_t
 
found
 = -1;

354 if(
off£t
 == 0) {

356 
i
 = 0; i < 
SICSLOWPAN_REASS_CONTEXTS
; i++) {

358 if(
‰ag_öfo
[
i
].
Àn
 > 0 && 
	`timî_expúed
(&‰ag_öfo[i].
ªass_timî
)) {

359 
	`˛ór_‰agmíts
(
i
);

363 if(
found
 < 0 && 
‰ag_öfo
[
i
].
Àn
 == 0) {

366 
found
 = 
i
;

370 if(
found
 < 0) {

371 
	`PRINTF
("*** FaûedÅÿ°‹ê√w føgmíà£ssi⁄ -Åag: %d\n", 
èg
);

376 
‰ag_öfo
[
found
].
Àn
 = 
‰ag_size
;

377 
‰ag_öfo
[
found
].
èg
 =Åag;

378 
	`lökaddr_c›y
(&
‰ag_öfo
[
found
].
£ndî
,

379 
	`∑ckëbuf_addr
(
PACKETBUF_ADDR_SENDER
));

380 
	`timî_£t
(&
‰ag_öfo
[
found
].
ªass_timî
, 
SICSLOWPAN_REASS_MAXAGE
 * 
CLOCK_SECOND
 / 16);

383  
found
;

387 
i
 = 0; i < 
SICSLOWPAN_REASS_CONTEXTS
; i++) {

388 if(
‰ag_öfo
[
i
].
èg
 =èg && føg_öfo[i].
Àn
 > 0 &&

389 
	`lökaddr_cmp
(&
‰ag_öfo
[
i
].
£ndî
, 
	`∑ckëbuf_addr
(
PACKETBUF_ADDR_SENDER
))) {

391 
found
 = 
i
;

396 if(
found
 < 0) {

398 
	`PRINTF
("*** FaûedÅÿ°‹êN-‰agmíà- couldÇŸ föd sessi⁄ -Åag: %d off£t: %d\n", 
èg
, 
off£t
);

403 
Àn
 = 
	`°‹e_‰agmít
(
i
, 
off£t
);

404 if(
Àn
 < 0 && 
	`timeout_‰agmíts
(
i
) > 0) {

405 
Àn
 = 
	`°‹e_‰agmít
(
i
, 
off£t
);

407 if(
Àn
 > 0) {

408 
‰ag_öfo
[
i
].
ªas£mbÀd_Àn
 +
Àn
;

409  
i
;

413 
	`PRINTF
("*** FaûedÅÿ°‹ê‰agmíà-ÖackëÑós£mbly wû»ÁûÅag:%dÜ\n", 
‰ag_öfo
[
i
].
èg
);

416 
	}
}

421 
	$c›y_‰ags2uù
(
c⁄ãxt
)

423 
i
;

426 
	`mem˝y
((
uöt8_t
 *)
UIP_IP_BUF
, (uöt8_à*)
‰ag_öfo
[
c⁄ãxt
].
fú°_‰ag
,

427 
‰ag_öfo
[
c⁄ãxt
].
fú°_‰ag_Àn
);

428 
i
 = 0; i < 
SICSLOWPAN_FRAGMENT_BUFFERS
; i++) {

430 if(
‰ag_buf
[
i
].
Àn
 > 0 && føg_buf[i].
ödex
 =
c⁄ãxt
) {

431 
	`mem˝y
((
uöt8_t
 *)
UIP_IP_BUF
 + (
uöt16_t
)(
‰ag_buf
[
i
].
off£t
 << 3),

432 (
uöt8_t
 *)
‰ag_buf
[
i
].
d©a
, føg_buf[i].
Àn
);

436 
	`˛ór_‰agmíts
(
c⁄ãxt
);

437 
	}
}

445 
rime_¢if„r
 *
	gˇŒback
 = 
NULL
;

448 
	$rime_¢if„r_add
(
rime_¢if„r
 *
s
)

450 
ˇŒback
 = 
s
;

451 
	}
}

454 
	$rime_¢if„r_ªmove
(
rime_¢if„r
 *
s
)

456 
ˇŒback
 = 
NULL
;

457 
	}
}

460 
	$£t_∑ckë_©ås
()

462 
c
 = 0;

464 
	`∑ckëbuf_£t_©å
(
PACKETBUF_ATTR_NETWORK_ID
, 
UIP_IP_BUF
->
¥Ÿo
);

467 if(
UIP_IP_BUF
->
¥Ÿo
 =
UIP_PROTO_UDP
) {

468 
c
 = 
UIP_UDP_BUF
->
§˝‹t
;

469 if(
UIP_UDP_BUF
->
de°p‹t
 < 
c
) {

470 
c
 = 
UIP_UDP_BUF
->
de°p‹t
;

472 } if(
UIP_IP_BUF
->
¥Ÿo
 =
UIP_PROTO_TCP
) {

473 
c
 = 
UIP_TCP_BUF
->
§˝‹t
;

474 if(
UIP_TCP_BUF
->
de°p‹t
 < 
c
) {

475 
c
 = 
UIP_TCP_BUF
->
de°p‹t
;

477 } if(
UIP_IP_BUF
->
¥Ÿo
 =
UIP_PROTO_ICMP6
) {

478 
c
 = 
UIP_ICMP_BUF
->
ty≥
 << 8 | UIP_ICMP_BUF->
icode
;

481 
	`∑ckëbuf_£t_©å
(
PACKETBUF_ATTR_CHANNEL
, 
c
);

487 
	}
}

491 #i‡
SICSLOWPAN_COMPRESSION
 =
SICSLOWPAN_COMPRESSION_HC06


497 #i‡
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
 > 0

498 
sic¶ow∑n_addr_c⁄ãxt


499 
	gaddr_c⁄ãxts
[
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
];

503 
sic¶ow∑n_addr_c⁄ãxt
 *
	gc⁄ãxt
;

506 
uöt8_t
 *
	ghc06_±r
;

515 c⁄° 
uöt8_t
 
	gunc_Œc⁄f
[] = {0x0f,0x28,0x22,0x20};

522 c⁄° 
uöt8_t
 
	gunc_˘xc⁄f
[] = {0x00,0x88,0x82,0x80};

529 c⁄° 
uöt8_t
 
	gunc_mxc⁄f
[] = {0x0f, 0x25, 0x23, 0x21};

532 c⁄° 
uöt8_t
 
	gŒ¥efix
[] = {0xfe, 0x80};

535 c⁄° 
uöt8_t
 
	gâl_vÆues
[] = {0, 1, 64, 255};

542 
sic¶ow∑n_addr_c⁄ãxt
*

543 
	$addr_c⁄ãxt_lookup_by_¥efix
(
uù_ùaddr_t
 *
ùaddr
)

546 #i‡
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
 > 0

547 
i
;

548 
i
 = 0; i < 
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
; i++) {

549 if((
addr_c⁄ãxts
[
i
].
u£d
 == 1) &&

550 
	`uù_ùaddr_¥efixcmp
(&
addr_c⁄ãxts
[
i
].
¥efix
, 
ùaddr
, 64)) {

551  &
addr_c⁄ãxts
[
i
];

555  
NULL
;

556 
	}
}

559 
sic¶ow∑n_addr_c⁄ãxt
*

560 
	$addr_c⁄ãxt_lookup_by_numbî
(
uöt8_t
 
numbî
)

563 #i‡
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
 > 0

564 
i
;

565 
i
 = 0; i < 
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
; i++) {

566 if((
addr_c⁄ãxts
[
i
].
u£d
 == 1) &&

567 
addr_c⁄ãxts
[
i
].
numbî
 ==Çumber) {

568  &
addr_c⁄ãxts
[
i
];

572  
NULL
;

573 
	}
}

575 
uöt8_t


576 
	$com¥ess_addr_64
(
uöt8_t
 
bôpos
, 
uù_ùaddr_t
 *
ùaddr
, 
uù_Œaddr_t
 *
Œaddr
)

578 if(
	`uù_is_addr_mac_addr_ba£d
(
ùaddr
, 
Œaddr
)) {

579  3 << 
bôpos
;

580 } if(
	`sic¶ow∑n_is_iid_16_bô_com¥esßbÀ
(
ùaddr
)) {

582 
	`mem˝y
(
hc06_±r
, &
ùaddr
->
u16
[7], 2);

583 
hc06_±r
 += 2;

584  2 << 
bôpos
;

587 
	`mem˝y
(
hc06_±r
, &
ùaddr
->
u16
[4], 8);

588 
hc06_±r
 += 8;

589  1 << 
bôpos
;

591 
	}
}

601 
	$uncom¥ess_addr
(
uù_ùaddr_t
 *
ùaddr
, 
uöt8_t
 c⁄° 
¥efix
[],

602 
uöt8_t
 
¥ef_po°_cou¡
, 
uù_Œaddr_t
 *
Œaddr
)

604 
uöt8_t
 
¥efcou¡
 = 
¥ef_po°_cou¡
 >> 4;

605 
uöt8_t
 
po°cou¡
 = 
¥ef_po°_cou¡
 & 0x0f;

607 
¥efcou¡
 =Örefcount == 15 ? 16 :Örefcount;

608 
po°cou¡
 =Öostcount == 15 ? 16 :Öostcount;

610 
	`PRINTF
("Uncom¥essög %d + %d => ", 
¥efcou¡
, 
po°cou¡
);

612 if(
¥efcou¡
 > 0) {

613 
	`mem˝y
(
ùaddr
, 
¥efix
, 
¥efcou¡
);

615 if(
¥efcou¡
 + 
po°cou¡
 < 16) {

616 
	`mem£t
(&
ùaddr
->
u8
[
¥efcou¡
], 0, 16 - (¥efcou¡ + 
po°cou¡
));

618 if(
po°cou¡
 > 0) {

619 
	`mem˝y
(&
ùaddr
->
u8
[16 - 
po°cou¡
], 
hc06_±r
,Öostcount);

620 if(
po°cou¡
 =2 && 
¥efcou¡
 < 11) {

622 
ùaddr
->
u8
[11] = 0xff;

623 
ùaddr
->
u8
[12] = 0xfe;

625 
hc06_±r
 +
po°cou¡
;

626 } i‡(
¥efcou¡
 > 0) {

628 
	`uù_ds6_£t_addr_iid
(
ùaddr
, 
Œaddr
);

631 
	`PRINT6ADDR
(
ùaddr
);

632 
	`PRINTF
("\n");

633 
	}
}

671 
	$com¥ess_hdr_ùhc
(
lökaddr_t
 *
lök_de°addr
)

673 
uöt8_t
 
tmp
, 
ùhc0
, 
ùhc1
;

674 #i‡
DEBUG


675 { 
uöt16_t
 
ndx
;

676 
	`PRINTF
("bef‹êcom¥essi⁄ (%d): ", 
UIP_IP_BUF
->
Àn
[1]);

677 
ndx
 = 0;Çdx < 
UIP_IP_BUF
->
Àn
[1] + 40;Çdx++) {

678 
uöt8_t
 
d©a
 = ((uöt8_à*Ë(
UIP_IP_BUF
))[
ndx
];

679 
	`PRINTF
("%02x", 
d©a
);

681 
	`PRINTF
("\n");

685 
hc06_±r
 = 
∑ckëbuf_±r
 + 2;

693 
ùhc0
 = 
SICSLOWPAN_DISPATCH_IPHC
;

694 
ùhc1
 = 0;

695 
PACKETBUF_IPHC_BUF
[2] = 0;

707 if(
	`addr_c⁄ãxt_lookup_by_¥efix
(&
UIP_IP_BUF
->
de°ùaddr
Ë!
NULL
 ||

708 
	`addr_c⁄ãxt_lookup_by_¥efix
(&
UIP_IP_BUF
->
§cùaddr
Ë!
NULL
) {

710 
	`PRINTF
("IPHC: compressing dest or src ipaddr - setting CID\n");

711 
ùhc1
 |
SICSLOWPAN_IPHC_CID
;

712 
hc06_±r
++;

724 
tmp
 = (
UIP_IP_BUF
->
vtc
 << 4Ë| (UIP_IP_BUF->
tcÊow
 >> 4);

725 
tmp
 = ((tmp & 0x03) << 6) | (tmp >> 2);

727 if(((
UIP_IP_BUF
->
tcÊow
 & 0x0F) == 0) &&

728 (
UIP_IP_BUF
->
Êow
 == 0)) {

730 
ùhc0
 |
SICSLOWPAN_IPHC_FL_C
;

731 if(((
UIP_IP_BUF
->
vtc
 & 0x0F) == 0) &&

732 ((
UIP_IP_BUF
->
tcÊow
 & 0xF0) == 0)) {

734 
ùhc0
 |
SICSLOWPAN_IPHC_TC_C
;

737 *
hc06_±r
 = 
tmp
;

738 
hc06_±r
 += 1;

742 if(((
UIP_IP_BUF
->
vtc
 & 0x0F) == 0) &&

743 ((
UIP_IP_BUF
->
tcÊow
 & 0xF0) == 0)) {

745 
ùhc0
 |
SICSLOWPAN_IPHC_TC_C
;

746 *
hc06_±r
 = (
tmp
 & 0xc0) |

747 (
UIP_IP_BUF
->
tcÊow
 & 0x0F);

748 
	`mem˝y
(
hc06_±r
 + 1, &
UIP_IP_BUF
->
Êow
, 2);

749 
hc06_±r
 += 3;

752 
	`mem˝y
(
hc06_±r
, &
UIP_IP_BUF
->
vtc
, 4);

754 *
hc06_±r
 = 
tmp
;

755 
hc06_±r
 += 4;

762 #i‡
UIP_CONF_UDP
 || 
UIP_CONF_ROUTER


763 if(
UIP_IP_BUF
->
¥Ÿo
 =
UIP_PROTO_UDP
) {

764 
ùhc0
 |
SICSLOWPAN_IPHC_NH_C
;

768 i‡((
ùhc0
 & 
SICSLOWPAN_IPHC_NH_C
) == 0) {

769 *
hc06_±r
 = 
UIP_IP_BUF
->
¥Ÿo
;

770 
hc06_±r
 += 1;

780 
UIP_IP_BUF
->
âl
) {

782 
ùhc0
 |
SICSLOWPAN_IPHC_TTL_1
;

785 
ùhc0
 |
SICSLOWPAN_IPHC_TTL_64
;

788 
ùhc0
 |
SICSLOWPAN_IPHC_TTL_255
;

791 *
hc06_±r
 = 
UIP_IP_BUF
->
âl
;

792 
hc06_±r
 += 1;

797 if(
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)) {

798 
	`PRINTF
("IPHC: compressing unspecified - setting SAC\n");

799 
ùhc1
 |
SICSLOWPAN_IPHC_SAC
;

800 
ùhc1
 |
SICSLOWPAN_IPHC_SAM_00
;

801 } if((
c⁄ãxt
 = 
	`addr_c⁄ãxt_lookup_by_¥efix
(&
UIP_IP_BUF
->
§cùaddr
))

802 !
NULL
) {

804 
	`PRINTF
("IPHC: compressing src with context - setting CID & SAC ctx: %d\n",

805 
c⁄ãxt
->
numbî
);

806 
ùhc1
 |
SICSLOWPAN_IPHC_CID
 | 
SICSLOWPAN_IPHC_SAC
;

807 
PACKETBUF_IPHC_BUF
[2] |
c⁄ãxt
->
numbî
 << 4;

810 
ùhc1
 |
	`com¥ess_addr_64
(
SICSLOWPAN_IPHC_SAM_BIT
,

811 &
UIP_IP_BUF
->
§cùaddr
, &
uù_Œaddr
);

813 } if(
	`uù_is_addr_lökloˇl
(&
UIP_IP_BUF
->
§cùaddr
) &&

814 
UIP_IP_BUF
->
de°ùaddr
.
u16
[1] == 0 &&

815 
UIP_IP_BUF
->
de°ùaddr
.
u16
[2] == 0 &&

816 
UIP_IP_BUF
->
de°ùaddr
.
u16
[3] == 0) {

817 
ùhc1
 |
	`com¥ess_addr_64
(
SICSLOWPAN_IPHC_SAM_BIT
,

818 &
UIP_IP_BUF
->
§cùaddr
, &
uù_Œaddr
);

821 
ùhc1
 |
SICSLOWPAN_IPHC_SAM_00
;

822 
	`mem˝y
(
hc06_±r
, &
UIP_IP_BUF
->
§cùaddr
.
u16
[0], 16);

823 
hc06_±r
 += 16;

827 if(
	`uù_is_addr_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
)) {

829 
ùhc1
 |
SICSLOWPAN_IPHC_M
;

830 if(
	`sic¶ow∑n_is_mˇ°_addr_com¥esßbÀ8
(&
UIP_IP_BUF
->
de°ùaddr
)) {

831 
ùhc1
 |
SICSLOWPAN_IPHC_DAM_11
;

833 *
hc06_±r
 = 
UIP_IP_BUF
->
de°ùaddr
.
u8
[15];

834 
hc06_±r
 += 1;

835 } if(
	`sic¶ow∑n_is_mˇ°_addr_com¥esßbÀ32
(&
UIP_IP_BUF
->
de°ùaddr
)) {

836 
ùhc1
 |
SICSLOWPAN_IPHC_DAM_10
;

838 *
hc06_±r
 = 
UIP_IP_BUF
->
de°ùaddr
.
u8
[1];

839 
	`mem˝y
(
hc06_±r
 + 1, &
UIP_IP_BUF
->
de°ùaddr
.
u8
[13], 3);

840 
hc06_±r
 += 4;

841 } if(
	`sic¶ow∑n_is_mˇ°_addr_com¥esßbÀ48
(&
UIP_IP_BUF
->
de°ùaddr
)) {

842 
ùhc1
 |
SICSLOWPAN_IPHC_DAM_01
;

844 *
hc06_±r
 = 
UIP_IP_BUF
->
de°ùaddr
.
u8
[1];

845 
	`mem˝y
(
hc06_±r
 + 1, &
UIP_IP_BUF
->
de°ùaddr
.
u8
[11], 5);

846 
hc06_±r
 += 6;

848 
ùhc1
 |
SICSLOWPAN_IPHC_DAM_00
;

850 
	`mem˝y
(
hc06_±r
, &
UIP_IP_BUF
->
de°ùaddr
.
u8
[0], 16);

851 
hc06_±r
 += 16;

855 if((
c⁄ãxt
 = 
	`addr_c⁄ãxt_lookup_by_¥efix
(&
UIP_IP_BUF
->
de°ùaddr
)Ë!
NULL
) {

857 
ùhc1
 |
SICSLOWPAN_IPHC_DAC
;

858 
PACKETBUF_IPHC_BUF
[2] |
c⁄ãxt
->
numbî
;

861 
ùhc1
 |
	`com¥ess_addr_64
(
SICSLOWPAN_IPHC_DAM_BIT
,

862 &
UIP_IP_BUF
->
de°ùaddr
,

863 (
uù_Œaddr_t
 *)
lök_de°addr
);

865 } if(
	`uù_is_addr_lökloˇl
(&
UIP_IP_BUF
->
de°ùaddr
) &&

866 
UIP_IP_BUF
->
de°ùaddr
.
u16
[1] == 0 &&

867 
UIP_IP_BUF
->
de°ùaddr
.
u16
[2] == 0 &&

868 
UIP_IP_BUF
->
de°ùaddr
.
u16
[3] == 0) {

869 
ùhc1
 |
	`com¥ess_addr_64
(
SICSLOWPAN_IPHC_DAM_BIT
,

870 &
UIP_IP_BUF
->
de°ùaddr
, (
uù_Œaddr_t
 *)
lök_de°addr
);

873 
ùhc1
 |
SICSLOWPAN_IPHC_DAM_00
;

874 
	`mem˝y
(
hc06_±r
, &
UIP_IP_BUF
->
de°ùaddr
.
u16
[0], 16);

875 
hc06_±r
 += 16;

879 
uncomp_hdr_Àn
 = 
UIP_IPH_LEN
;

881 #i‡
UIP_CONF_UDP
 || 
UIP_CONF_ROUTER


883 if(
UIP_IP_BUF
->
¥Ÿo
 =
UIP_PROTO_UDP
) {

884 
	`PRINTF
("IPHC: Uncompressed UDPÖorts on send side: %x, %x\n",

885 
	`UIP_HTONS
(
UIP_UDP_BUF
->
§˝‹t
), UIP_HTONS(UIP_UDP_BUF->
de°p‹t
));

887 if(((
	`UIP_HTONS
(
UIP_UDP_BUF
->
§˝‹t
Ë& 0xfff0Ë=
SICSLOWPAN_UDP_4_BIT_PORT_MIN
) &&

888 ((
	`UIP_HTONS
(
UIP_UDP_BUF
->
de°p‹t
Ë& 0xfff0Ë=
SICSLOWPAN_UDP_4_BIT_PORT_MIN
)) {

890 *
hc06_±r
 = 
SICSLOWPAN_NHC_UDP_CS_P_11
;

891 
	`PRINTF
("IPHC:Ñemove 12 b of both source & dest withÖrefix 0xFOB\n");

892 *(
hc06_±r
 + 1) =

893 (
uöt8_t
)((
	`UIP_HTONS
(
UIP_UDP_BUF
->
§˝‹t
) -

894 
SICSLOWPAN_UDP_4_BIT_PORT_MIN
) << 4) +

895 (
uöt8_t
)((
	`UIP_HTONS
(
UIP_UDP_BUF
->
de°p‹t
) -

896 
SICSLOWPAN_UDP_4_BIT_PORT_MIN
));

897 
hc06_±r
 += 2;

898 } if((
	`UIP_HTONS
(
UIP_UDP_BUF
->
de°p‹t
Ë& 0xff00Ë=
SICSLOWPAN_UDP_8_BIT_PORT_MIN
) {

900 *
hc06_±r
 = 
SICSLOWPAN_NHC_UDP_CS_P_01
;

901 
	`PRINTF
("IPHC:Üeave source,Ñemove 8 bits of dest withÖrefix 0xF0\n");

902 
	`mem˝y
(
hc06_±r
 + 1, &
UIP_UDP_BUF
->
§˝‹t
, 2);

903 *(
hc06_±r
 + 3) =

904 (
uöt8_t
)((
	`UIP_HTONS
(
UIP_UDP_BUF
->
de°p‹t
) -

905 
SICSLOWPAN_UDP_8_BIT_PORT_MIN
));

906 
hc06_±r
 += 4;

907 } if((
	`UIP_HTONS
(
UIP_UDP_BUF
->
§˝‹t
Ë& 0xff00Ë=
SICSLOWPAN_UDP_8_BIT_PORT_MIN
) {

909 *
hc06_±r
 = 
SICSLOWPAN_NHC_UDP_CS_P_10
;

910 
	`PRINTF
("IPHC:Ñemovê8 bô†o‡sour˚ wôhÖªfix 0xF0,Üóvêde°. hch: %i\n", *
hc06_±r
);

911 *(
hc06_±r
 + 1) =

912 (
uöt8_t
)((
	`UIP_HTONS
(
UIP_UDP_BUF
->
§˝‹t
) -

913 
SICSLOWPAN_UDP_8_BIT_PORT_MIN
));

914 
	`mem˝y
(
hc06_±r
 + 2, &
UIP_UDP_BUF
->
de°p‹t
, 2);

915 
hc06_±r
 += 4;

918 *
hc06_±r
 = 
SICSLOWPAN_NHC_UDP_CS_P_00
;

919 
	`PRINTF
("IPHC: cannot compress headers\n");

920 
	`mem˝y
(
hc06_±r
 + 1, &
UIP_UDP_BUF
->
§˝‹t
, 4);

921 
hc06_±r
 += 5;

925 
	`mem˝y
(
hc06_±r
, &
UIP_UDP_BUF
->
udpchksum
, 2);

926 
hc06_±r
 += 2;

928 
uncomp_hdr_Àn
 +
UIP_UDPH_LEN
;

933 
PACKETBUF_IPHC_BUF
[0] = 
ùhc0
;

934 
PACKETBUF_IPHC_BUF
[1] = 
ùhc1
;

936 
∑ckëbuf_hdr_Àn
 = 
hc06_±r
 - 
∑ckëbuf_±r
;

938 
	}
}

958 
	$uncom¥ess_hdr_ùhc
(
uöt8_t
 *
buf
, 
uöt16_t
 
ù_Àn
)

960 
uöt8_t
 
tmp
, 
ùhc0
, 
ùhc1
;

962 
hc06_±r
 = 
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
 + 2;

964 
ùhc0
 = 
PACKETBUF_IPHC_BUF
[0];

965 
ùhc1
 = 
PACKETBUF_IPHC_BUF
[1];

968 if(
ùhc1
 & 
SICSLOWPAN_IPHC_CID
) {

969 
	`PRINTF
("IPHC: CID flag set - increase header with one\n");

970 
hc06_±r
++;

974 if((
ùhc0
 & 
SICSLOWPAN_IPHC_FL_C
) == 0) {

976 if((
ùhc0
 & 
SICSLOWPAN_IPHC_TC_C
) == 0) {

978 
	`mem˝y
(&
	`SICSLOWPAN_IP_BUF
(
buf
)->
tcÊow
, 
hc06_±r
 + 1, 3);

979 
tmp
 = *
hc06_±r
;

980 
hc06_±r
 += 4;

983 
	`SICSLOWPAN_IP_BUF
(
buf
)->
vtc
 = 0x60 | ((
tmp
 >> 2) & 0x0f);

985 
	`SICSLOWPAN_IP_BUF
(
buf
)->
tcÊow
 = ((
tmp
 >> 2) & 0x30) | (tmp << 6) |

986 (
	`SICSLOWPAN_IP_BUF
(
buf
)->
tcÊow
 & 0x0f);

989 
	`SICSLOWPAN_IP_BUF
(
buf
)->
vtc
 = 0x60;

991 
	`SICSLOWPAN_IP_BUF
(
buf
)->
tcÊow
 = (*
hc06_±r
 & 0x0F) |

992 ((*
hc06_±r
 >> 2) & 0x30);

993 
	`mem˝y
(&
	`SICSLOWPAN_IP_BUF
(
buf
)->
Êow
, 
hc06_±r
 + 1, 2);

994 
hc06_±r
 += 3;

999 if((
ùhc0
 & 
SICSLOWPAN_IPHC_TC_C
) == 0) {

1001 
	`SICSLOWPAN_IP_BUF
(
buf
)->
vtc
 = 0x60 | ((*
hc06_±r
 >> 2) & 0x0f);

1002 
	`SICSLOWPAN_IP_BUF
(
buf
)->
tcÊow
 = ((*
hc06_±r
 << 6) & 0xC0) | ((*hc06_ptr >> 2) & 0x30);

1003 
	`SICSLOWPAN_IP_BUF
(
buf
)->
Êow
 = 0;

1004 
hc06_±r
 += 1;

1007 
	`SICSLOWPAN_IP_BUF
(
buf
)->
vtc
 = 0x60;

1008 
	`SICSLOWPAN_IP_BUF
(
buf
)->
tcÊow
 = 0;

1009 
	`SICSLOWPAN_IP_BUF
(
buf
)->
Êow
 = 0;

1014 if((
ùhc0
 & 
SICSLOWPAN_IPHC_NH_C
) == 0) {

1016 
	`SICSLOWPAN_IP_BUF
(
buf
)->
¥Ÿo
 = *
hc06_±r
;

1017 
	`PRINTF
("IPHC:Çexàhódî i∆öe: %d\n", 
	`SICSLOWPAN_IP_BUF
(
buf
)->
¥Ÿo
);

1018 
hc06_±r
 += 1;

1022 if((
ùhc0
 & 0x03Ë!
SICSLOWPAN_IPHC_TTL_I
) {

1023 
	`SICSLOWPAN_IP_BUF
(
buf
)->
âl
 = 
âl_vÆues
[
ùhc0
 & 0x03];

1025 
	`SICSLOWPAN_IP_BUF
(
buf
)->
âl
 = *
hc06_±r
;

1026 
hc06_±r
 += 1;

1030 
tmp
 = ((
ùhc1
 & 
SICSLOWPAN_IPHC_SAM_11
Ë>> 
SICSLOWPAN_IPHC_SAM_BIT
) & 0x03;

1033 if(
ùhc1
 & 
SICSLOWPAN_IPHC_SAC
) {

1034 
uöt8_t
 
sci
 = (
ùhc1
 & 
SICSLOWPAN_IPHC_CID
) ?

1035 
PACKETBUF_IPHC_BUF
[2] >> 4 : 0;

1038 i‡(
tmp
 != 0) {

1039 
c⁄ãxt
 = 
	`addr_c⁄ãxt_lookup_by_numbî
(
sci
);

1040 if(
c⁄ãxt
 =
NULL
) {

1041 
	`PRINTF
("sicslowpan uncompress_hdr:Érror contextÇot found\n");

1046 
	`uncom¥ess_addr
(&
	`SICSLOWPAN_IP_BUF
(
buf
)->
§cùaddr
,

1047 
tmp
 !0 ? 
c⁄ãxt
->
¥efix
 : 
NULL
, 
unc_˘xc⁄f
[tmp],

1048 (
uù_Œaddr_t
 *)
	`∑ckëbuf_addr
(
PACKETBUF_ADDR_SENDER
));

1051 
	`uncom¥ess_addr
(&
	`SICSLOWPAN_IP_BUF
(
buf
)->
§cùaddr
, 
Œ¥efix
, 
unc_Œc⁄f
[
tmp
],

1052 (
uù_Œaddr_t
 *)
	`∑ckëbuf_addr
(
PACKETBUF_ADDR_SENDER
));

1057 
tmp
 = ((
ùhc1
 & 
SICSLOWPAN_IPHC_DAM_11
Ë>> 
SICSLOWPAN_IPHC_DAM_BIT
) & 0x03;

1060 if(
ùhc1
 & 
SICSLOWPAN_IPHC_M
) {

1062 if(
ùhc1
 & 
SICSLOWPAN_IPHC_DAC
) {

1070 
uöt8_t
 
¥efix
[] = {0xff, 0x02};

1071 if(
tmp
 > 0 &&Åmp < 3) {

1072 
¥efix
[1] = *
hc06_±r
;

1073 
hc06_±r
++;

1076 
	`uncom¥ess_addr
(&
	`SICSLOWPAN_IP_BUF
(
buf
)->
de°ùaddr
, 
¥efix
,

1077 
unc_mxc⁄f
[
tmp
], 
NULL
);

1082 if(
ùhc1
 & 
SICSLOWPAN_IPHC_DAC
) {

1083 
uöt8_t
 
dci
 = (
ùhc1
 & 
SICSLOWPAN_IPHC_CID
Ë? 
PACKETBUF_IPHC_BUF
[2] & 0x0f : 0;

1084 
c⁄ãxt
 = 
	`addr_c⁄ãxt_lookup_by_numbî
(
dci
);

1087 if(
c⁄ãxt
 =
NULL
) {

1088 
	`PRINTF
("sicslowpan uncompress_hdr:Érror contextÇot found\n");

1091 
	`uncom¥ess_addr
(&
	`SICSLOWPAN_IP_BUF
(
buf
)->
de°ùaddr
, 
c⁄ãxt
->
¥efix
,

1092 
unc_˘xc⁄f
[
tmp
],

1093 (
uù_Œaddr_t
 *)
	`∑ckëbuf_addr
(
PACKETBUF_ADDR_RECEIVER
));

1096 
	`uncom¥ess_addr
(&
	`SICSLOWPAN_IP_BUF
(
buf
)->
de°ùaddr
, 
Œ¥efix
,

1097 
unc_Œc⁄f
[
tmp
],

1098 (
uù_Œaddr_t
 *)
	`∑ckëbuf_addr
(
PACKETBUF_ADDR_RECEIVER
));

1101 
uncomp_hdr_Àn
 +
UIP_IPH_LEN
;

1104 if((
ùhc0
 & 
SICSLOWPAN_IPHC_NH_C
)) {

1106 if((*
hc06_±r
 & 
SICSLOWPAN_NHC_UDP_MASK
Ë=
SICSLOWPAN_NHC_UDP_ID
) {

1107 
uöt8_t
 
checksum_com¥es£d
;

1108 
	`SICSLOWPAN_IP_BUF
(
buf
)->
¥Ÿo
 = 
UIP_PROTO_UDP
;

1109 
checksum_com¥es£d
 = *
hc06_±r
 & 
SICSLOWPAN_NHC_UDP_CHECKSUMC
;

1110 
	`PRINTF
("IPHC: Incomög hódî vÆue: %i\n", *
hc06_±r
);

1111 *
hc06_±r
 & 
SICSLOWPAN_NHC_UDP_CS_P_11
) {

1112 
SICSLOWPAN_NHC_UDP_CS_P_00
:

1114 
	`mem˝y
(&
	`SICSLOWPAN_UDP_BUF
(
buf
)->
§˝‹t
, 
hc06_±r
 + 1, 2);

1115 
	`mem˝y
(&
	`SICSLOWPAN_UDP_BUF
(
buf
)->
de°p‹t
, 
hc06_±r
 + 3, 2);

1116 
	`PRINTF
("IPHC: Uncompressed UDPÖorts (ptr+5): %x, %x\n",

1117 
	`UIP_HTONS
(
	`SICSLOWPAN_UDP_BUF
(
buf
)->
§˝‹t
),

1118 
	`UIP_HTONS
(
	`SICSLOWPAN_UDP_BUF
(
buf
)->
de°p‹t
));

1119 
hc06_±r
 += 5;

1122 
SICSLOWPAN_NHC_UDP_CS_P_01
:

1124 
	`PRINTF
("IPHC: Decompressing destination\n");

1125 
	`mem˝y
(&
	`SICSLOWPAN_UDP_BUF
(
buf
)->
§˝‹t
, 
hc06_±r
 + 1, 2);

1126 
	`SICSLOWPAN_UDP_BUF
(
buf
)->
de°p‹t
 = 
	`UIP_HTONS
(
SICSLOWPAN_UDP_8_BIT_PORT_MIN
 + (*(
hc06_±r
 + 3)));

1127 
	`PRINTF
("IPHC: Uncompressed UDPÖorts (ptr+4): %x, %x\n",

1128 
	`UIP_HTONS
(
	`SICSLOWPAN_UDP_BUF
(
buf
)->
§˝‹t
), UIP_HTONS(SICSLOWPAN_UDP_BUF(buf)->
de°p‹t
));

1129 
hc06_±r
 += 4;

1132 
SICSLOWPAN_NHC_UDP_CS_P_10
:

1134 
	`PRINTF
("IPHC: Decompressing source\n");

1135 
	`SICSLOWPAN_UDP_BUF
(
buf
)->
§˝‹t
 = 
	`UIP_HTONS
(
SICSLOWPAN_UDP_8_BIT_PORT_MIN
 +

1136 (*(
hc06_±r
 + 1)));

1137 
	`mem˝y
(&
	`SICSLOWPAN_UDP_BUF
(
buf
)->
de°p‹t
, 
hc06_±r
 + 2, 2);

1138 
	`PRINTF
("IPHC: Uncompressed UDPÖorts (ptr+4): %x, %x\n",

1139 
	`UIP_HTONS
(
	`SICSLOWPAN_UDP_BUF
(
buf
)->
§˝‹t
), UIP_HTONS(SICSLOWPAN_UDP_BUF(buf)->
de°p‹t
));

1140 
hc06_±r
 += 4;

1143 
SICSLOWPAN_NHC_UDP_CS_P_11
:

1145 
	`SICSLOWPAN_UDP_BUF
(
buf
)->
§˝‹t
 = 
	`UIP_HTONS
(
SICSLOWPAN_UDP_4_BIT_PORT_MIN
 +

1146 (*(
hc06_±r
 + 1) >> 4));

1147 
	`SICSLOWPAN_UDP_BUF
(
buf
)->
de°p‹t
 = 
	`UIP_HTONS
(
SICSLOWPAN_UDP_4_BIT_PORT_MIN
 +

1148 ((*(
hc06_±r
 + 1)) & 0x0F));

1149 
	`PRINTF
("IPHC: Uncompressed UDPÖorts (ptr+2): %x, %x\n",

1150 
	`UIP_HTONS
(
	`SICSLOWPAN_UDP_BUF
(
buf
)->
§˝‹t
), UIP_HTONS(SICSLOWPAN_UDP_BUF(buf)->
de°p‹t
));

1151 
hc06_±r
 += 2;

1155 
	`PRINTF
("sicslowpan uncompress_hdr:Érror unsupported UDP compression\n");

1158 if(!
checksum_com¥es£d
) {

1159 
	`mem˝y
(&
	`SICSLOWPAN_UDP_BUF
(
buf
)->
udpchksum
, 
hc06_±r
, 2);

1160 
hc06_±r
 += 2;

1161 
	`PRINTF
("IPHC: sicslowpan uncompress_hdr: checksum included\n");

1163 
	`PRINTF
("IPHC: sicslowpan uncompress_hdr: checksum *NOT* included\n");

1165 
uncomp_hdr_Àn
 +
UIP_UDPH_LEN
;

1169 
∑ckëbuf_hdr_Àn
 = 
hc06_±r
 - 
∑ckëbuf_±r
;

1172 if(
ù_Àn
 == 0) {

1173 
Àn
 = 
	`∑ckëbuf_d©Æí
(Ë- 
∑ckëbuf_hdr_Àn
 + 
uncomp_hdr_Àn
 - 
UIP_IPH_LEN
;

1175 
	`SICSLOWPAN_IP_BUF
(
buf
)->
Àn
[0] =Üen >> 8;

1176 
	`SICSLOWPAN_IP_BUF
(
buf
)->
Àn
[1] =Üen & 0x00FF;

1179 
	`SICSLOWPAN_IP_BUF
(
buf
)->
Àn
[0] = (
ù_Àn
 - 
UIP_IPH_LEN
) >> 8;

1180 
	`SICSLOWPAN_IP_BUF
(
buf
)->
Àn
[1] = (
ù_Àn
 - 
UIP_IPH_LEN
) & 0x00FF;

1184 if(
	`SICSLOWPAN_IP_BUF
(
buf
)->
¥Ÿo
 =
UIP_PROTO_UDP
) {

1185 
	`mem˝y
(&
	`SICSLOWPAN_UDP_BUF
(
buf
)->
ud∂í
, &
	`SICSLOWPAN_IP_BUF
(buf)->
Àn
[0], 2);

1189 
	}
}

1210 
	$com¥ess_hdr_ùv6
(
lökaddr_t
 *
lök_de°addr
)

1212 *
∑ckëbuf_±r
 = 
SICSLOWPAN_DISPATCH_IPV6
;

1213 
∑ckëbuf_hdr_Àn
 +
SICSLOWPAN_IPV6_HDR_LEN
;

1214 
	`mem˝y
(
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
, 
UIP_IP_BUF
, 
UIP_IPH_LEN
);

1215 
∑ckëbuf_hdr_Àn
 +
UIP_IPH_LEN
;

1216 
uncomp_hdr_Àn
 +
UIP_IPH_LEN
;

1218 
	}
}

1229 
	$∑ckë_£¡
(*
±r
, 
°©us
, 
å™smissi⁄s
)

1231 
	`uù_ds6_lök_√ighb‹_ˇŒback
(
°©us
, 
å™smissi⁄s
);

1233 if(
ˇŒback
 !
NULL
) {

1234 
ˇŒback
->
	`ouçut_ˇŒback
(
°©us
);

1236 
œ°_tx_°©us
 = 
°©us
;

1237 
	}
}

1245 
	$£nd_∑ckë
(
lökaddr_t
 *
de°
)

1251 
	`∑ckëbuf_£t_addr
(
PACKETBUF_ADDR_RECEIVER
, 
de°
);

1253 #i‡
NETSTACK_CONF_BRIDGE_MODE


1255 
	`∑ckëbuf_£t_addr
(
PACKETBUF_ADDR_SENDER
,(*)&
uù_Œaddr
);

1266 
NETSTACK_LLSEC
.
	`£nd
(&
∑ckë_£¡
, 
NULL
);

1270 
	`w©chdog_≥riodic
();

1271 
	}
}

1282 
uöt8_t


1283 
	$ouçut
(c⁄° 
uù_Œaddr_t
 *
loˇlde°
)

1285 
‰amî_hdæí
;

1286 
max_∑ylﬂd
;

1289 
lökaddr_t
 
de°
;

1291 #i‡
SICSLOWPAN_CONF_FRAG


1293 
uöt16_t
 
¥o˚s£d_ù_out_Àn
;

1297 
uncomp_hdr_Àn
 = 0;

1298 
∑ckëbuf_hdr_Àn
 = 0;

1301 
	`∑ckëbuf_˛ór
();

1302 
∑ckëbuf_±r
 = 
	`∑ckëbuf_d©≠å
();

1304 if(
ˇŒback
) {

1307 
	`£t_∑ckë_©ås
();

1310 #i‡
PACKETBUF_WITH_PACKET_TYPE


1311 
	#TCP_FIN
 0x01

	)

1312 
	#TCP_ACK
 0x10

	)

1313 
	#TCP_CTL
 0x3f

	)

1315 if(
UIP_IP_BUF
->
¥Ÿo
 =
UIP_PROTO_TCP
 &&

1316 (
UIP_TCP_BUF
->
Êags
 & 
TCP_FIN
) == 0 &&

1317 (
UIP_TCP_BUF
->
Êags
 & 
TCP_CTL
Ë!
TCP_ACK
) {

1318 
	`∑ckëbuf_£t_©å
(
PACKETBUF_ATTR_PACKET_TYPE
,

1319 
PACKETBUF_ATTR_PACKET_TYPE_STREAM
);

1320 } if(
UIP_IP_BUF
->
¥Ÿo
 =
UIP_PROTO_TCP
 &&

1321 (
UIP_TCP_BUF
->
Êags
 & 
TCP_FIN
) == TCP_FIN) {

1322 
	`∑ckëbuf_£t_©å
(
PACKETBUF_ATTR_PACKET_TYPE
,

1323 
PACKETBUF_ATTR_PACKET_TYPE_STREAM_END
);

1332 if(
loˇlde°
 =
NULL
) {

1333 
	`lökaddr_c›y
(&
de°
, &
lökaddr_nuŒ
);

1335 
	`lökaddr_c›y
(&
de°
, (c⁄° 
lökaddr_t
 *)
loˇlde°
);

1338 
	`PRINTFO
("sic¶ow∑¿ouçut: sídögÖackëÜí %d\n", 
uù_Àn
);

1340 if(
uù_Àn
 >
COMPRESSION_THRESHOLD
) {

1342 #i‡
SICSLOWPAN_COMPRESSION
 =
SICSLOWPAN_COMPRESSION_IPV6


1343 
	`com¥ess_hdr_ùv6
(&
de°
);

1345 #i‡
SICSLOWPAN_COMPRESSION
 =
SICSLOWPAN_COMPRESSION_HC06


1346 
	`com¥ess_hdr_ùhc
(&
de°
);

1349 
	`com¥ess_hdr_ùv6
(&
de°
);

1351 
	`PRINTFO
("sic¶ow∑¿ouçut: hódî o‡À¿%d\n", 
∑ckëbuf_hdr_Àn
);

1356 
	#USE_FRAMER_HDRLEN
 1

	)

1357 #i‡
USE_FRAMER_HDRLEN


1358 
	`∑ckëbuf_£t_addr
(
PACKETBUF_ADDR_RECEIVER
, &
de°
);

1359 
‰amî_hdæí
 = 
NETSTACK_FRAMER
.
	`Àngth
();

1360 if(
‰amî_hdæí
 < 0) {

1362 
‰amî_hdæí
 = 21;

1365 
‰amî_hdæí
 = 21;

1368 
max_∑ylﬂd
 = 
MAC_MAX_PAYLOAD
 - 
‰amî_hdæí
;

1369 if(()
uù_Àn
 - ()
uncomp_hdr_Àn
 > 
max_∑ylﬂd
 - ()
∑ckëbuf_hdr_Àn
) {

1370 #i‡
SICSLOWPAN_CONF_FRAG


1371 
queuebuf
 *
q
;

1372 
uöt16_t
 
‰ag_èg
;

1381 
e°im©ed_‰agmíts
 = (()
uù_Àn
Ë/ (
max_∑ylﬂd
 - 
SICSLOWPAN_FRAGN_HDR_LEN
) + 1;

1382 
‰ìbuf
 = 
	`queuebuf_num‰ì
() - 1;

1383 
	`PRINTFO
("uù_Àn: %d, føgmíts: %d, fªêbufs: %d\n", 
uù_Àn
, 
e°im©ed_‰agmíts
, 
‰ìbuf
);

1384 if(
‰ìbuf
 < 
e°im©ed_‰agmíts
) {

1385 
	`PRINTFO
("DroppingÖacket,ÇotÉnough free bufs\n");

1389 
	`PRINTFO
("Føgmíèti⁄ sídögÖackëÜí %d\n", 
uù_Àn
);

1392 
	`PRINTFO
("sicslowpan output: 1rst fragment ");

1395 
œ°_tx_°©us
 = 
MAC_TX_OK
;

1398 
	`memmove
(
∑ckëbuf_±r
 + 
SICSLOWPAN_FRAG1_HDR_LEN
,Öackëbuf_±r, 
∑ckëbuf_hdr_Àn
);

1406 
	`SET16
(
PACKETBUF_FRAG_PTR
, 
PACKETBUF_FRAG_DISPATCH_SIZE
,

1407 ((
SICSLOWPAN_DISPATCH_FRAG1
 << 8Ë| 
uù_Àn
));

1408 
‰ag_èg
 = 
my_èg
++;

1409 
	`SET16
(
PACKETBUF_FRAG_PTR
, 
PACKETBUF_FRAG_TAG
, 
‰ag_èg
);

1412 
∑ckëbuf_hdr_Àn
 +
SICSLOWPAN_FRAG1_HDR_LEN
;

1413 
∑ckëbuf_∑ylﬂd_Àn
 = (
max_∑ylﬂd
 - 
∑ckëbuf_hdr_Àn
) & 0xfffffff8;

1414 
	`PRINTFO
("÷í %d,Åag %d)\n", 
∑ckëbuf_∑ylﬂd_Àn
, 
‰ag_èg
);

1415 
	`mem˝y
(
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
,

1416 (
uöt8_t
 *)
UIP_IP_BUF
 + 
uncomp_hdr_Àn
, 
∑ckëbuf_∑ylﬂd_Àn
);

1417 
	`∑ckëbuf_£t_d©Æí
(
∑ckëbuf_∑ylﬂd_Àn
 + 
∑ckëbuf_hdr_Àn
);

1418 
q
 = 
	`queuebuf_√w_‰om_∑ckëbuf
();

1419 if(
q
 =
NULL
) {

1420 
	`PRINTFO
("couldÇotállocate queuebuf for first fragment, droppingÖacket\n");

1423 
	`£nd_∑ckë
(&
de°
);

1424 
	`queuebuf_to_∑ckëbuf
(
q
);

1425 
	`queuebuf_‰ì
(
q
);

1426 
q
 = 
NULL
;

1429 if((
œ°_tx_°©us
 =
MAC_TX_COLLISION
) ||

1430 (
œ°_tx_°©us
 =
MAC_TX_ERR
) ||

1431 (
œ°_tx_°©us
 =
MAC_TX_ERR_FATAL
)) {

1432 
	`PRINTFO
("error in fragmentÅx, dropping subsequent fragments.\n");

1437 
¥o˚s£d_ù_out_Àn
 = 
∑ckëbuf_∑ylﬂd_Àn
 + 
uncomp_hdr_Àn
;

1444 
∑ckëbuf_hdr_Àn
 = 
SICSLOWPAN_FRAGN_HDR_LEN
;

1447 
	`SET16
(
PACKETBUF_FRAG_PTR
, 
PACKETBUF_FRAG_DISPATCH_SIZE
,

1448 ((
SICSLOWPAN_DISPATCH_FRAGN
 << 8Ë| 
uù_Àn
));

1449 
∑ckëbuf_∑ylﬂd_Àn
 = (
max_∑ylﬂd
 - 
∑ckëbuf_hdr_Àn
) & 0xfffffff8;

1450 
¥o˚s£d_ù_out_Àn
 < 
uù_Àn
) {

1451 
	`PRINTFO
("sicslowpan output: fragment ");

1452 
PACKETBUF_FRAG_PTR
[
PACKETBUF_FRAG_OFFSET
] = 
¥o˚s£d_ù_out_Àn
 >> 3;

1455 if(
uù_Àn
 - 
¥o˚s£d_ù_out_Àn
 < 
∑ckëbuf_∑ylﬂd_Àn
) {

1457 
∑ckëbuf_∑ylﬂd_Àn
 = 
uù_Àn
 - 
¥o˚s£d_ù_out_Àn
;

1459 
	`PRINTFO
("(offset %d,Üen %d,Åag %d)\n",

1460 
¥o˚s£d_ù_out_Àn
 >> 3, 
∑ckëbuf_∑ylﬂd_Àn
, 
‰ag_èg
);

1461 
	`mem˝y
(
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
,

1462 (
uöt8_t
 *)
UIP_IP_BUF
 + 
¥o˚s£d_ù_out_Àn
, 
∑ckëbuf_∑ylﬂd_Àn
);

1463 
	`∑ckëbuf_£t_d©Æí
(
∑ckëbuf_∑ylﬂd_Àn
 + 
∑ckëbuf_hdr_Àn
);

1464 
q
 = 
	`queuebuf_√w_‰om_∑ckëbuf
();

1465 if(
q
 =
NULL
) {

1466 
	`PRINTFO
("couldÇotállocate queuebuf, dropping fragment\n");

1469 
	`£nd_∑ckë
(&
de°
);

1470 
	`queuebuf_to_∑ckëbuf
(
q
);

1471 
	`queuebuf_‰ì
(
q
);

1472 
q
 = 
NULL
;

1473 
¥o˚s£d_ù_out_Àn
 +
∑ckëbuf_∑ylﬂd_Àn
;

1476 if((
œ°_tx_°©us
 =
MAC_TX_COLLISION
) ||

1477 (
œ°_tx_°©us
 =
MAC_TX_ERR
) ||

1478 (
œ°_tx_°©us
 =
MAC_TX_ERR_FATAL
)) {

1479 
	`PRINTFO
("error in fragmentÅx, dropping subsequent fragments.\n");

1484 
	`PRINTFO
("sicslowpan output: PacketÅooÜargeÅo be sent without fragmentation support; droppingÖacket\n");

1493 
	`mem˝y
(
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
, (
uöt8_t
 *)
UIP_IP_BUF
 + 
uncomp_hdr_Àn
,

1494 
uù_Àn
 - 
uncomp_hdr_Àn
);

1495 
	`∑ckëbuf_£t_d©Æí
(
uù_Àn
 - 
uncomp_hdr_Àn
 + 
∑ckëbuf_hdr_Àn
);

1496 
	`£nd_∑ckë
(&
de°
);

1499 
	}
}

1514 
	$öput
()

1517 
uöt16_t
 
‰ag_size
 = 0;

1519 
uöt8_t
 
‰ag_off£t
 = 0;

1520 
uöt8_t
 *
buf„r
;

1522 #i‡
SICSLOWPAN_CONF_FRAG


1523 
uöt8_t
 
is_‰agmít
 = 0;

1524 
öt8_t
 
‰ag_c⁄ãxt
 = 0;

1527 
uöt16_t
 
‰ag_èg
 = 0;

1528 
uöt8_t
 
fú°_‰agmít
 = 0, 
œ°_‰agmít
 = 0;

1531 
	`PRINTF
("Sicslowpan Input\n");

1533 
uncomp_hdr_Àn
 = 0;

1534 
∑ckëbuf_hdr_Àn
 = 0;

1537 
∑ckëbuf_±r
 = 
	`∑ckëbuf_d©≠å
();

1540 
buf„r
 = (
uöt8_t
 *)
UIP_IP_BUF
;

1544 
œ°_rssi
 = (sig√d )
	`∑ckëbuf_©å
(
PACKETBUF_ATTR_RSSI
);

1546 #i‡
SICSLOWPAN_CONF_FRAG


1552 (
	`GET16
(
PACKETBUF_FRAG_PTR
, 
PACKETBUF_FRAG_DISPATCH_SIZE
) & 0xf800) >> 8) {

1553 
SICSLOWPAN_DISPATCH_FRAG1
:

1554 
	`PRINTFI
("sicslowpan input: FRAG1 ");

1555 
‰ag_off£t
 = 0;

1557 
‰ag_size
 = 
	`GET16
(
PACKETBUF_FRAG_PTR
, 
PACKETBUF_FRAG_DISPATCH_SIZE
) & 0x07ff;

1559 
‰ag_èg
 = 
	`GET16
(
PACKETBUF_FRAG_PTR
, 
PACKETBUF_FRAG_TAG
);

1560 
	`PRINTFI
("size %d,Åag %d, offset %d)\n",

1561 
‰ag_size
, 
‰ag_èg
, 
‰ag_off£t
);

1562 
∑ckëbuf_hdr_Àn
 +
SICSLOWPAN_FRAG1_HDR_LEN
;

1564 
fú°_‰agmít
 = 1;

1565 
is_‰agmít
 = 1;

1568 
‰ag_c⁄ãxt
 = 
	`add_‰agmít
(
‰ag_èg
, 
‰ag_size
, 
‰ag_off£t
);

1570 if(
‰ag_c⁄ãxt
 == -1) {

1574 
buf„r
 = 
‰ag_öfo
[
‰ag_c⁄ãxt
].
fú°_‰ag
;

1577 
SICSLOWPAN_DISPATCH_FRAGN
:

1582 
	`PRINTFI
("sicslowpan input: FRAGN ");

1583 
‰ag_off£t
 = 
PACKETBUF_FRAG_PTR
[
PACKETBUF_FRAG_OFFSET
];

1584 
‰ag_èg
 = 
	`GET16
(
PACKETBUF_FRAG_PTR
, 
PACKETBUF_FRAG_TAG
);

1585 
‰ag_size
 = 
	`GET16
(
PACKETBUF_FRAG_PTR
, 
PACKETBUF_FRAG_DISPATCH_SIZE
) & 0x07ff;

1586 
	`PRINTFI
("size %d,Åag %d, offset %d)\n",

1587 
‰ag_size
, 
‰ag_èg
, 
‰ag_off£t
);

1588 
∑ckëbuf_hdr_Àn
 +
SICSLOWPAN_FRAGN_HDR_LEN
;

1592 
	`PRINTFI
("last_fragment?:Öacketbuf_payload_len %d frag_size %d\n",

1593 
	`∑ckëbuf_d©Æí
(Ë- 
∑ckëbuf_hdr_Àn
, 
‰ag_size
);

1597 
‰ag_c⁄ãxt
 = 
	`add_‰agmít
(
‰ag_èg
, 
‰ag_size
, 
‰ag_off£t
);

1599 if(
‰ag_c⁄ãxt
 == -1) {

1605 
buf„r
 = 
NULL
;

1607 if(
‰ag_öfo
[
‰ag_c⁄ãxt
].
ªas£mbÀd_Àn
 >
‰ag_size
) {

1608 
œ°_‰agmít
 = 1;

1610 
is_‰agmít
 = 1;

1616 if(
is_‰agmít
 && !
fú°_‰agmít
) {

1618 
c›y∑ylﬂd
;

1623 #i‡
SICSLOWPAN_COMPRESSION
 =
SICSLOWPAN_COMPRESSION_HC06


1624 if((
PACKETBUF_HC1_PTR
[
PACKETBUF_HC1_DISPATCH
] & 0xe0Ë=
SICSLOWPAN_DISPATCH_IPHC
) {

1625 
	`PRINTFI
("sicslowpan input: IPHC\n");

1626 
	`uncom¥ess_hdr_ùhc
(
buf„r
, 
‰ag_size
);

1629 
PACKETBUF_HC1_PTR
[
PACKETBUF_HC1_DISPATCH
]) {

1630 
SICSLOWPAN_DISPATCH_IPV6
:

1631 
	`PRINTFI
("sicslowpan input: IPV6\n");

1632 
∑ckëbuf_hdr_Àn
 +
SICSLOWPAN_IPV6_HDR_LEN
;

1635 
	`mem˝y
(
buf„r
, 
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
, 
UIP_IPH_LEN
);

1638 
∑ckëbuf_hdr_Àn
 +
UIP_IPH_LEN
;

1639 
uncomp_hdr_Àn
 +
UIP_IPH_LEN
;

1643 
	`PRINTFI
("sicslowpan input: unknown dispatch: %u\n",

1644 
PACKETBUF_HC1_PTR
[
PACKETBUF_HC1_DISPATCH
]);

1649 #i‡
SICSLOWPAN_CONF_FRAG


1650 
c›y∑ylﬂd
:

1659 if(
	`∑ckëbuf_d©Æí
(Ë< 
∑ckëbuf_hdr_Àn
) {

1660 
	`PRINTF
("SICSLOWPAN:Öacket dropped dueÅo header >ÅotalÖacket\n");

1663 
∑ckëbuf_∑ylﬂd_Àn
 = 
	`∑ckëbuf_d©Æí
(Ë- 
∑ckëbuf_hdr_Àn
;

1667 
ªq_size
 = 
UIP_LLH_LEN
 + 
uncomp_hdr_Àn
 + (
uöt16_t
)(
‰ag_off£t
 << 3)

1668 + 
∑ckëbuf_∑ylﬂd_Àn
;

1669 if(
ªq_size
 > (
uù_buf
)) {

1670 
	`PRINTF
(

1672 
UIP_LLH_LEN
, 
uncomp_hdr_Àn
, (
uöt16_t
)(
‰ag_off£t
 << 3),

1673 
∑ckëbuf_∑ylﬂd_Àn
, 
ªq_size
, ()(
uù_buf
));

1680 if(
buf„r
 !
NULL
) {

1681 
	`mem˝y
((
uöt8_t
 *)
buf„r
 + 
uncomp_hdr_Àn
, 
∑ckëbuf_±r
 + 
∑ckëbuf_hdr_Àn
, 
∑ckëbuf_∑ylﬂd_Àn
);

1686 #i‡
SICSLOWPAN_CONF_FRAG


1687 if(
‰ag_size
 > 0) {

1689 if(
fú°_‰agmít
 != 0) {

1690 
‰ag_öfo
[
‰ag_c⁄ãxt
].
ªas£mbÀd_Àn
 = 
uncomp_hdr_Àn
 + 
∑ckëbuf_∑ylﬂd_Àn
;

1691 
‰ag_öfo
[
‰ag_c⁄ãxt
].
fú°_‰ag_Àn
 = 
uncomp_hdr_Àn
 + 
∑ckëbuf_∑ylﬂd_Àn
;

1695 if(
œ°_‰agmít
 != 0) {

1696 
‰ag_öfo
[
‰ag_c⁄ãxt
].
ªas£mbÀd_Àn
 = 
‰ag_size
;

1698 
	`c›y_‰ags2uù
(
‰ag_c⁄ãxt
);

1706 if(!
is_‰agmít
 || 
œ°_‰agmít
) {

1708 if(
is_‰agmít
 !0 && 
œ°_‰agmít
 != 0) {

1709 
uù_Àn
 = 
‰ag_size
;

1711 
uù_Àn
 = 
∑ckëbuf_∑ylﬂd_Àn
 + 
uncomp_hdr_Àn
;

1714 
uù_Àn
 = 
∑ckëbuf_∑ylﬂd_Àn
 + 
uncomp_hdr_Àn
;

1716 
	`PRINTFI
("sicslowpan input: IPÖacketÑeady (length %d)\n",

1717 
uù_Àn
);

1719 #i‡
DEBUG


1721 
uöt16_t
 
ndx
;

1722 
	`PRINTF
("a·î decom¥essi⁄ %u:", 
UIP_IP_BUF
->
Àn
[1]);

1723 
ndx
 = 0;Çdx < 
UIP_IP_BUF
->
Àn
[1] + 40;Çdx++) {

1724 
uöt8_t
 
d©a
 = ((uöt8_à*Ë(
UIP_IP_BUF
))[
ndx
];

1725 
	`PRINTF
("%02x", 
d©a
);

1727 
	`PRINTF
("\n");

1732 if(
ˇŒback
) {

1733 
	`PRINTF
("SICSLOWPAN CALLBACK IS CALLED\n");

1734 
	`£t_∑ckë_©ås
();

1735 
ˇŒback
->
	`öput_ˇŒback
();

1738 
	`t˝ù_öput
();

1739 #i‡
SICSLOWPAN_CONF_FRAG


1742 
	}
}

1749 
	$sic¶ow∑n_öô
()

1756 
	`t˝ù_£t_ouçutfunc
(
ouçut
);

1758 #i‡
SICSLOWPAN_COMPRESSION
 =
SICSLOWPAN_COMPRESSION_HC06


1764 #i‡
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
 > 0

1765 
addr_c⁄ãxts
[0].
u£d
 = 1;

1766 
addr_c⁄ãxts
[0].
numbî
 = 0;

1767 #ifde‡
SICSLOWPAN_CONF_ADDR_CONTEXT_0


1768 
SICSLOWPAN_CONF_ADDR_CONTEXT_0
;

1770 
addr_c⁄ãxts
[0].
¥efix
[0] = 
UIP_DS6_DEFAULT_PREFIX_0
;

1771 
addr_c⁄ãxts
[0].
¥efix
[1] = 
UIP_DS6_DEFAULT_PREFIX_1
;

1775 #i‡
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
 > 1

1777 
i
;

1778 
i
 = 1; i < 
SICSLOWPAN_CONF_MAX_ADDR_CONTEXTS
; i++) {

1779 #ifde‡
SICSLOWPAN_CONF_ADDR_CONTEXT_1


1780 i‡(
i
==1) {

1781 
addr_c⁄ãxts
[1].
u£d
 = 1;

1782 
addr_c⁄ãxts
[1].
numbî
 = 1;

1783 
SICSLOWPAN_CONF_ADDR_CONTEXT_1
;

1784 #ifde‡
SICSLOWPAN_CONF_ADDR_CONTEXT_2


1785 } i‡(
i
==2) {

1786 
addr_c⁄ãxts
[2].
u£d
 = 1;

1787 
addr_c⁄ãxts
[2].
numbî
 = 2;

1788 
SICSLOWPAN_CONF_ADDR_CONTEXT_2
;

1791 
addr_c⁄ãxts
[
i
].
u£d
 = 0;

1794 
addr_c⁄ãxts
[
i
].
u£d
 = 0;

1801 
	}
}

1804 
	$sic¶ow∑n_gë_œ°_rssi
()

1806  
œ°_rssi
;

1807 
	}
}

1809 c⁄° 
√tw‹k_drivî
 
	gsic¶ow∑n_drivî
 = {

1811 
sic¶ow∑n_öô
,

1812 
öput


	@sicslowpan.h

49 #i‚de‡
SICSLOWPAN_H_


50 
	#SICSLOWPAN_H_


	)

52 
	~"√t/ù/uù.h
"

53 
	~"√t/mac/mac.h
"

60 
	#SICSLOWPAN_UDP_4_BIT_PORT_MIN
 0xF0B0

	)

61 
	#SICSLOWPAN_UDP_4_BIT_PORT_MAX
 0xF0BF

	)

62 
	#SICSLOWPAN_UDP_8_BIT_PORT_MIN
 0xF000

	)

63 
	#SICSLOWPAN_UDP_8_BIT_PORT_MAX
 0xF0FF

	)

71 
	#SICSLOWPAN_COMPRESSION_IPV6
 0

	)

72 
	#SICSLOWPAN_COMPRESSION_HC1
 1

	)

73 
	#SICSLOWPAN_COMPRESSION_HC06
 2

	)

80 
	#SICSLOWPAN_DISPATCH_IPV6
 0x41

	)

81 
	#SICSLOWPAN_DISPATCH_HC1
 0x42

	)

82 
	#SICSLOWPAN_DISPATCH_IPHC
 0x60

	)

83 
	#SICSLOWPAN_DISPATCH_FRAG1
 0xc0

	)

84 
	#SICSLOWPAN_DISPATCH_FRAGN
 0xe0

	)

90 
	#SICSLOWPAN_HC1_NH_UDP
 0x02

	)

91 
	#SICSLOWPAN_HC1_NH_TCP
 0x06

	)

92 
	#SICSLOWPAN_HC1_NH_ICMP6
 0x04

	)

98 
	#SICSLOWPAN_HC_UDP_ALL_C
 0xE0

	)

109 
	#SICSLOWPAN_IPHC_FL_C
 0x10

	)

110 
	#SICSLOWPAN_IPHC_TC_C
 0x08

	)

111 
	#SICSLOWPAN_IPHC_NH_C
 0x04

	)

112 
	#SICSLOWPAN_IPHC_TTL_1
 0x01

	)

113 
	#SICSLOWPAN_IPHC_TTL_64
 0x02

	)

114 
	#SICSLOWPAN_IPHC_TTL_255
 0x03

	)

115 
	#SICSLOWPAN_IPHC_TTL_I
 0x00

	)

119 
	#SICSLOWPAN_IPHC_CID
 0x80

	)

121 
	#SICSLOWPAN_IPHC_SAC
 0x40

	)

122 
	#SICSLOWPAN_IPHC_SAM_00
 0x00

	)

123 
	#SICSLOWPAN_IPHC_SAM_01
 0x10

	)

124 
	#SICSLOWPAN_IPHC_SAM_10
 0x20

	)

125 
	#SICSLOWPAN_IPHC_SAM_11
 0x30

	)

127 
	#SICSLOWPAN_IPHC_SAM_BIT
 4

	)

129 
	#SICSLOWPAN_IPHC_M
 0x08

	)

130 
	#SICSLOWPAN_IPHC_DAC
 0x04

	)

131 
	#SICSLOWPAN_IPHC_DAM_00
 0x00

	)

132 
	#SICSLOWPAN_IPHC_DAM_01
 0x01

	)

133 
	#SICSLOWPAN_IPHC_DAM_10
 0x02

	)

134 
	#SICSLOWPAN_IPHC_DAM_11
 0x03

	)

136 
	#SICSLOWPAN_IPHC_DAM_BIT
 0

	)

139 
	#SICSLOWPAN_IPHC_ADDR_CONTEXT_LL
 0

	)

141 
	#SICSLOWPAN_IPHC_MCAST_RANGE
 0xA0

	)

145 
	#SICSLOWPAN_NHC_MASK
 0xF0

	)

146 
	#SICSLOWPAN_NHC_EXT_HDR
 0xE0

	)

156 
	#SICSLOWPAN_NHC_UDP_MASK
 0xF8

	)

157 
	#SICSLOWPAN_NHC_UDP_ID
 0xF0

	)

158 
	#SICSLOWPAN_NHC_UDP_CHECKSUMC
 0x04

	)

159 
	#SICSLOWPAN_NHC_UDP_CHECKSUMI
 0x00

	)

161 
	#SICSLOWPAN_NHC_UDP_CS_P_00
 0xF0

	)

162 
	#SICSLOWPAN_NHC_UDP_CS_P_01
 0xF1

	)

163 
	#SICSLOWPAN_NHC_UDP_CS_P_10
 0xF2

	)

164 
	#SICSLOWPAN_NHC_UDP_CS_P_11
 0xF3

	)

173 
	#SICSLOWPAN_IPV6_HDR_LEN
 1

	)

174 
	#SICSLOWPAN_HC1_HDR_LEN
 3

	)

175 
	#SICSLOWPAN_HC1_HC_UDP_HDR_LEN
 7

	)

176 
	#SICSLOWPAN_FRAG1_HDR_LEN
 4

	)

177 
	#SICSLOWPAN_FRAGN_HDR_LEN
 5

	)

222 
	ssic¶ow∑n_addr_c⁄ãxt
 {

223 
uöt8_t
 
	mu£d
;

224 
uöt8_t
 
	mnumbî
;

225 
uöt8_t
 
	m¥efix
[8];

240 
	#sic¶ow∑n_is_iid_16_bô_com¥esßbÀ
(
a
) \

241 ((((
a
)->
u16
[4]) == 0) && \

242 (((
a
)->
u8
[10]) == 0)&& \

243 (((
a
)->
u8
[11]) == 0xff)&& \

244 (((
a
)->
u8
[12]) == 0xfe)&& \

245 (((
a
)->
u8
[13]Ë=0))

	)

254 
	#sic¶ow∑n_is_mˇ°_addr_decom¥esßbÀ
(
a
) \

255 (((*
a
 & 0x01) == 0) && \

256 ((*(
a
 + 1Ë=0x01Ë|| (*◊ + 1Ë=0x02)))

	)

264 
	#sic¶ow∑n_is_mˇ°_addr_com¥esßbÀ
(
a
) \

265 ((((
a
)->
u16
[1]) == 0) && \

266 (((
a
)->
u16
[2]) == 0) && \

267 (((
a
)->
u16
[3]) == 0) && \

268 (((
a
)->
u16
[4]) == 0) && \

269 (((
a
)->
u16
[5]) == 0) && \

270 (((
a
)->
u16
[6]) == 0) && \

271 (((
a
)->
u8
[14]) == 0) && \

272 ((((
a
)->
u8
[15]Ë=1Ë|| ((◊)->u8[15]Ë=2)))

	)

275 
	#sic¶ow∑n_is_mˇ°_addr_com¥esßbÀ48
(
a
) \

276 ((((
a
)->
u16
[1]) == 0) && \

277 (((
a
)->
u16
[2]) == 0) && \

278 (((
a
)->
u16
[3]) == 0) && \

279 (((
a
)->
u16
[4]) == 0) && \

280 (((
a
)->
u8
[10]Ë=0))

	)

283 
	#sic¶ow∑n_is_mˇ°_addr_com¥esßbÀ32
(
a
) \

284 ((((
a
)->
u16
[1]) == 0) && \

285 (((
a
)->
u16
[2]) == 0) && \

286 (((
a
)->
u16
[3]) == 0) && \

287 (((
a
)->
u16
[4]) == 0) && \

288 (((
a
)->
u16
[5]) == 0) && \

289 (((
a
)->
u8
[12]Ë=0))

	)

292 
	#sic¶ow∑n_is_mˇ°_addr_com¥esßbÀ8
(
a
) \

293 ((((
a
)->
u8
[1]) == 2) && \

294 (((
a
)->
u16
[1]) == 0) && \

295 (((
a
)->
u16
[2]) == 0) && \

296 (((
a
)->
u16
[3]) == 0) && \

297 (((
a
)->
u16
[4]) == 0) && \

298 (((
a
)->
u16
[5]) == 0) && \

299 (((
a
)->
u16
[6]) == 0) && \

300 (((
a
)->
u8
[14]Ë=0))

	)

309 
	ssic¶ow∑n_nh_com¥ess‹
 {

310 (* 
	mis_com¥esßbÀ
)(
uöt8_t
 
	m√xt_hódî
);

314 (* 
	mcom¥ess
)(
uöt8_t
 *
	mcom¥es£d
, uöt8_à*
	muncom¥es£d_Àn
);

318 (* 
	muncom¥ess
)(
uöt8_t
 *
	mcom¥es£d
, uöt8_à*
	mlow∑nbuf
, uöt8_à*
	muncom¥es£d_Àn
);

322 
sic¶ow∑n_gë_œ°_rssi
();

324 c⁄° 
√tw‹k_drivî
 
sic¶ow∑n_drivî
;

	@uip-ds6-nbr.c

46 
	~<°rög.h
>

47 
	~<°dlib.h
>

48 
	~<°ddef.h
>

49 
	~"lib/li°.h
"

50 
	~"√t/lökaddr.h
"

51 
	~"√t/∑ckëbuf.h
"

52 
	~"√t/ùv6/uù-ds6-nbr.h
"

54 
	~"ùv6_debug.h
"

55 
	#DEBUG
 
DEBUG_UIP_DS6_NBR


	)

56 
	~"√t/ù/uù-debug.h
"

59 #i‡
ANA_UIP_DS6_NBR


60 
	#ANA
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

62 
	#ANA
(...)

	)

65 #ifde‡
UIP_CONF_DS6_NEIGHBOR_STATE_CHANGED


66 
	#NEIGHBOR_STATE_CHANGED
(
n
Ë
	`UIP_CONF_DS6_NEIGHBOR_STATE_CHANGED
“)

	)

67 
NEIGHBOR_STATE_CHANGED
(
uù_ds6_nbr_t
 *
n
);

69 
	#NEIGHBOR_STATE_CHANGED
(
n
)

	)

72 #ifde‡
UIP_CONF_DS6_LINK_NEIGHBOR_CALLBACK


73 
	#LINK_NEIGHBOR_CALLBACK
(
addr
, 
°©us
, 
numtx
Ë
	`UIP_CONF_DS6_LINK_NEIGHBOR_CALLBACK
◊ddr, sètus,Çumtx)

	)

74 
LINK_NEIGHBOR_CALLBACK
(c⁄° 
lökaddr_t
 *
addr
, 
°©us
, 
numtx
);

76 
	#LINK_NEIGHBOR_CALLBACK
(
addr
, 
°©us
, 
numtx
)

	)

79 
NBR_TABLE_GLOBAL
(
uù_ds6_nbr_t
, 
ds6_√ighb‹s
);

82 #i‡
DUAL_RADIO


83 #i‡
ADDR_MAP


84 
uù_ds6_Ã_addrm≠_t
 
	gds6_Ã_addrm≠
[
NBR_TABLE_MAX_NEIGHBORS
];

90 
	$uù_ds6_√ighb‹s_öô
()

92 
	`nbr_èbÀ_ªgi°î
(
ds6_√ighb‹s
, (
nbr_èbÀ_ˇŒback
 *)
uù_ds6_nbr_rm
);

93 
	}
}

95 
uù_ds6_nbr_t
 *

96 
	$uù_ds6_nbr_add
(c⁄° 
uù_ùaddr_t
 *
ùaddr
, c⁄° 
uù_Œaddr_t
 *
Œaddr
,

97 
uöt8_t
 
i§ouãr
, uöt8_à
°©e
, 
nbr_èbÀ_ªas⁄_t
 
ªas⁄
,

98 *
d©a
)

100 
uù_ds6_nbr_t
 *
nbr
 = 
	`nbr_èbÀ_add_Œaddr
(
ds6_√ighb‹s
, (
lökaddr_t
*)
Œaddr


101 , 
ªas⁄
, 
d©a
);

103 #i‡
DUAL_RADIO


104 #i‡
ADDR_MAP


105 
i
,
j
;

106 
	`PRINTF
("NeighborsáddedÅoÜr/lladdrÅable: \n");

107 
j
=
	`Œaddr_m≠_add_Ã
(
ds6_Ã_addrm≠
, (
lökaddr_t
*)
Œaddr
);

108 
	`PRINTF
("Suc˚ss?? %d\n",
j
);

109 
i
=0;i<10;i++) {

110 
	`PRINTF
("ADDR_MAP # %d",
i
);

111 
	`PRINTF
(" ");

112 
	`PRINTLLADDR
(&
ds6_Ã_addrm≠
[
i
].
Œaddr
);

113 
	`PRINTF
("\n");

118 if(
nbr
) {

119 
	`uù_ùaddr_c›y
(&
nbr
->
ùaddr
, ipaddr);

120 #i‡
UIP_ND6_SEND_NA
 || 
UIP_ND6_SEND_RA
 || !
UIP_CONF_ROUTER


121 
nbr
->
i§ouãr
 = isrouter;

123 
nbr
->
°©e
 = state;

124 #i‡
UIP_CONF_IPV6_QUEUE_PKT


125 
	`uù_∑ckëqueue_√w
(&
nbr
->
∑ckëh™dÀ
);

127 #i‡
UIP_ND6_SEND_NA


129 
	`°imî_£t
(&
nbr
->
ªachabÀ
, 0);

130 
	`°imî_£t
(&
nbr
->
£ndns
, 0);

131 
nbr
->
nscou¡
 = 0;

133 
	`PRINTF
("AddingÇeighbor with ipáddr ");

134 
	`PRINT6ADDR
(
ùaddr
);

135 
	`PRINTF
("Üinkáddr ");

136 
	`PRINTLLADDR
(
Œaddr
);

137 
	`PRINTF
(" sèã %u\n", 
°©e
);

138 
	`NEIGHBOR_STATE_CHANGED
(
nbr
);

139  
nbr
;

141 
	`PRINTF
("uip_ds6_nbr_add drop ipáddr ");

142 
	`PRINT6ADDR
(
ùaddr
);

143 
	`PRINTF
("Üökádd∏(%pË", 
Œaddr
);

144 
	`PRINTLLADDR
(
Œaddr
);

145 
	`PRINTF
(" sèã %u\n", 
°©e
);

146  
NULL
;

148 
	}
}

152 
	$uù_ds6_nbr_rm
(
uù_ds6_nbr_t
 *
nbr
)

154 if(
nbr
 !
NULL
) {

155 #i‡
UIP_CONF_IPV6_QUEUE_PKT


156 
	`uù_∑ckëqueue_‰ì
(&
nbr
->
∑ckëh™dÀ
);

160 #i‡
DUAL_RADIO


161 #i‡
ADDR_MAP


162 
	`Œaddr_m≠_rm_Ã
(
ds6_Ã_addrm≠
,(
lökaddr_t
 *)
	`uù_ds6_nbr_gë_Œ
(
nbr
));

167 
	`NEIGHBOR_STATE_CHANGED
(
nbr
);

168  
	`nbr_èbÀ_ªmove
(
ds6_√ighb‹s
, 
nbr
);

171 
	}
}

174 c⁄° 
uù_ùaddr_t
 *

175 
	$uù_ds6_nbr_gë_ùaddr
(c⁄° 
uù_ds6_nbr_t
 *
nbr
)

177  (
nbr
 !
NULL
Ë? &nbr->
ùaddr
 : NULL;

178 
	}
}

181 c⁄° 
uù_Œaddr_t
 *

182 
	$uù_ds6_nbr_gë_Œ
(c⁄° 
uù_ds6_nbr_t
 *
nbr
)

184  (c⁄° 
uù_Œaddr_t
 *)
	`nbr_èbÀ_gë_Œaddr
(
ds6_√ighb‹s
, 
nbr
);

185 
	}
}

188 
	$uù_ds6_nbr_num
()

190 
uù_ds6_nbr_t
 *
nbr
;

191 
num
;

193 
num
 = 0;

194 
nbr
 = 
	`nbr_èbÀ_hód
(
ds6_√ighb‹s
);

195 
nbr
 !
NULL
;

196 
nbr
 = 
	`nbr_èbÀ_√xt
(
ds6_√ighb‹s
,Çbr)) {

197 
num
++;

199  
num
;

200 
	}
}

202 
uù_ds6_nbr_t
 *

203 
	$uù_ds6_nbr_lookup
(c⁄° 
uù_ùaddr_t
 *
ùaddr
)

205 
uù_ds6_nbr_t
 *
nbr
 = 
	`nbr_èbÀ_hód
(
ds6_√ighb‹s
);

206 if(
ùaddr
 !
NULL
) {

207 
nbr
 !
NULL
) {

208 if(
	`uù_ùaddr_cmp
(&
nbr
->
ùaddr
, ipaddr)) {

209  
nbr
;

211 
nbr
 = 
	`nbr_èbÀ_√xt
(
ds6_√ighb‹s
,Çbr);

214  
NULL
;

215 
	}
}

217 
uù_ds6_nbr_t
 *

218 
	$uù_ds6_nbr_Œ_lookup
(c⁄° 
uù_Œaddr_t
 *
Œaddr
)

220  
	`nbr_èbÀ_gë_‰om_Œaddr
(
ds6_√ighb‹s
, (
lökaddr_t
*)
Œaddr
);

221 
	}
}

224 
uù_ùaddr_t
 *

225 
	$uù_ds6_nbr_ùaddr_‰om_Œaddr
(c⁄° 
uù_Œaddr_t
 *
Œaddr
)

227 
uù_ds6_nbr_t
 *
nbr
 = 
	`uù_ds6_nbr_Œ_lookup
(
Œaddr
);

228  
nbr
 ? &nbr->
ùaddr
 : 
NULL
;

229 
	}
}

232 c⁄° 
uù_Œaddr_t
 *

233 
	$uù_ds6_nbr_Œaddr_‰om_ùaddr
(c⁄° 
uù_ùaddr_t
 *
ùaddr
)

235 
uù_ds6_nbr_t
 *
nbr
 = 
	`uù_ds6_nbr_lookup
(
ùaddr
);

236  
nbr
 ? 
	`uù_ds6_nbr_gë_Œ
“brË: 
NULL
;

237 
	}
}

240 
	$uù_ds6_lök_√ighb‹_ˇŒback
(
°©us
, 
numtx
)

242 c⁄° 
lökaddr_t
 *
de°
 = 
	`∑ckëbuf_addr
(
PACKETBUF_ADDR_RECEIVER
);

243 if(
	`lökaddr_cmp
(
de°
, &
lökaddr_nuŒ
)) {

247 
	`LINK_NEIGHBOR_CALLBACK
(
de°
, 
°©us
, 
numtx
);

249 #i‡
UIP_DS6_LL_NUD


265 if(
°©us
 =
MAC_TX_OK
) {

266 
uù_ds6_nbr_t
 *
nbr
;

267 
nbr
 = 
	`uù_ds6_nbr_Œ_lookup
((
uù_Œaddr_t
 *)
de°
);

268 if(
nbr
 !
NULL
 &&Çbr->
°©e
 !
NBR_INCOMPLETE
) {

269 
nbr
->
°©e
 = 
NBR_REACHABLE
;

270 
	`°imî_£t
(&
nbr
->
ªachabÀ
, 
UIP_ND6_REACHABLE_TIME
 / 1000);

271 
	`PRINTF
("uip-ds6-neighbor :ÑeceivedáÜinkÜayer ACK : ");

272 
	`PRINTLLADDR
((
uù_Œaddr_t
 *)
de°
);

273 
	`PRINTF
(" isÑeachable.\n");

278 
	}
}

279 #i‡
UIP_ND6_SEND_NA


283 
	$uù_ds6_√ighb‹_≥riodic
()

285 
uù_ds6_nbr_t
 *
nbr
 = 
	`nbr_èbÀ_hód
(
ds6_√ighb‹s
);

286 
nbr
 !
NULL
) {

287 
nbr
->
°©e
) {

288 
NBR_REACHABLE
:

289 if(
	`°imî_expúed
(&
nbr
->
ªachabÀ
)) {

290 #i‡
UIP_CONF_IPV6_RPL


297 if(
	`uù_ds6_de‰t_lookup
(&
nbr
->
ùaddr
Ë!
NULL
) {

298 
	`PRINTF
("REACHABLE: defrt movingÅo DELAY (");

299 
	`PRINT6ADDR
(&
nbr
->
ùaddr
);

300 
	`PRINTF
(")\n");

301 
nbr
->
°©e
 = 
NBR_DELAY
;

302 
	`°imî_£t
(&
nbr
->
ªachabÀ
, 
UIP_ND6_DELAY_FIRST_PROBE_TIME
);

303 
nbr
->
nscou¡
 = 0;

305 
	`PRINTF
("REACHABLE: movingÅo STALE (");

306 
	`PRINT6ADDR
(&
nbr
->
ùaddr
);

307 
	`PRINTF
(")\n");

308 
nbr
->
°©e
 = 
NBR_STALE
;

311 
	`PRINTF
("REACHABLE: movingÅo STALE (");

312 
	`PRINT6ADDR
(&
nbr
->
ùaddr
);

313 
	`PRINTF
(")\n");

314 
nbr
->
°©e
 = 
NBR_STALE
;

318 
NBR_INCOMPLETE
:

319 if(
nbr
->
nscou¡
 >
UIP_ND6_MAX_MULTICAST_SOLICIT
) {

320 
	`uù_ds6_nbr_rm
(
nbr
);

321 } if(
	`°imî_expúed
(&
nbr
->
£ndns
Ë&& (
uù_Àn
 == 0)) {

322 
nbr
->
nscou¡
++;

323 
	`PRINTF
("NBR_INCOMPLETE: NS %u\n", 
nbr
->
nscou¡
);

324 
	`uù_nd6_ns_ouçut
(
NULL
, NULL, &
nbr
->
ùaddr
);

325 
	`°imî_£t
(&
nbr
->
£ndns
, 
uù_ds6_if
.
ªå™s_timî
 / 1000);

328 
NBR_DELAY
:

329 if(
	`°imî_expúed
(&
nbr
->
ªachabÀ
)) {

330 
nbr
->
°©e
 = 
NBR_PROBE
;

331 
nbr
->
nscou¡
 = 0;

332 
	`PRINTF
("DELAY: movingÅo PROBE\n");

333 
	`°imî_£t
(&
nbr
->
£ndns
, 0);

336 
NBR_PROBE
:

337 if(
nbr
->
nscou¡
 >
UIP_ND6_MAX_UNICAST_SOLICIT
) {

338 
uù_ds6_de‰t_t
 *
locde‰t
;

339 
	`PRINTF
("PROBE END\n");

340 if((
locde‰t
 = 
	`uù_ds6_de‰t_lookup
(&
nbr
->
ùaddr
)Ë!
NULL
) {

341 i‡(!
locde‰t
->
isöföôe
) {

342 
	`uù_ds6_de‰t_rm
(
locde‰t
);

345 
	`uù_ds6_nbr_rm
(
nbr
);

346 } if(
	`°imî_expúed
(&
nbr
->
£ndns
Ë&& (
uù_Àn
 == 0)) {

347 
nbr
->
nscou¡
++;

348 
	`PRINTF
("PROBE: NS %u\n", 
nbr
->
nscou¡
);

349 
	`uù_nd6_ns_ouçut
(
NULL
, &
nbr
->
ùaddr
, &nbr->ipaddr);

350 
	`°imî_£t
(&
nbr
->
£ndns
, 
uù_ds6_if
.
ªå™s_timî
 / 1000);

356 
nbr
 = 
	`nbr_èbÀ_√xt
(
ds6_√ighb‹s
,Çbr);

358 
	}
}

360 
uù_ds6_nbr_t
 *

361 
	$uù_ds6_gë_Àa°_li„time_√ighb‹
()

363 
uù_ds6_nbr_t
 *
nbr
 = 
	`nbr_èbÀ_hód
(
ds6_√ighb‹s
);

364 
uù_ds6_nbr_t
 *
nbr_expúög
 = 
NULL
;

365 
nbr
 !
NULL
) {

366 if(
nbr_expúög
 !
NULL
) {

367 
˛ock_time_t
 
cuº
 = 
	`°imî_ªmaöög
(&
nbr
->
ªachabÀ
);

368 if(
cuº
 < 
	`°imî_ªmaöög
(&
nbr
->
ªachabÀ
)) {

369 
nbr_expúög
 = 
nbr
;

372 
nbr_expúög
 = 
nbr
;

374 
nbr
 = 
	`nbr_èbÀ_√xt
(
ds6_√ighb‹s
,Çbr);

376  
nbr_expúög
;

377 
	}
}

	@uip-ds6-nbr.h

46 #i‚de‡
UIP_DS6_NEIGHBOR_H_


47 
	#UIP_DS6_NEIGHBOR_H_


	)

49 
	~"√t/ù/uù.h
"

50 
	~"√t/nbr-èbÀ.h
"

51 
	~"sys/°imî.h
"

52 
	~"√t/ùv6/uù-ds6.h
"

53 
	~"√t/nbr-èbÀ.h
"

55 #i‡
UIP_CONF_IPV6_QUEUE_PKT


56 
	~"√t/ù/uù-∑ckëqueue.h
"

61 
	#NBR_INCOMPLETE
 0

	)

62 
	#NBR_REACHABLE
 1

	)

63 
	#NBR_STALE
 2

	)

64 
	#NBR_DELAY
 3

	)

65 
	#NBR_PROBE
 4

	)

67 
NBR_TABLE_DECLARE
(
ds6_√ighb‹s
);

72 
	suù_ds6_nbr
 {

73 
uù_ùaddr_t
 
	mùaddr
;

74 
uöt8_t
 
	mi§ouãr
;

75 
uöt8_t
 
	m°©e
;

76 
uöt16_t
 
	mlök_mëric
;

77 #i‡
UIP_ND6_SEND_NA
 || 
UIP_ND6_SEND_RA


78 
°imî
 
	mªachabÀ
;

79 
°imî
 
	m£ndns
;

80 
uöt8_t
 
	mnscou¡
;

82 #i‡
UIP_CONF_IPV6_QUEUE_PKT


83 
uù_∑ckëqueue_h™dÀ
 
	m∑ckëh™dÀ
;

84 
	#UIP_DS6_NBR_PACKET_LIFETIME
 
CLOCK_SECOND
 * 4

	)

86 } 
	tuù_ds6_nbr_t
;

88 
uù_ds6_√ighb‹s_öô
();

91 
uù_ds6_nbr_t
 *
uù_ds6_nbr_add
(c⁄° 
uù_ùaddr_t
 *
ùaddr
,

92 c⁄° 
uù_Œaddr_t
 *
Œaddr
,

93 
uöt8_t
 
i§ouãr
, uöt8_à
°©e
,

94 
nbr_èbÀ_ªas⁄_t
 
ªas⁄
, *
d©a
);

95 
uù_ds6_nbr_rm
(
uù_ds6_nbr_t
 *
nbr
);

96 c⁄° 
uù_Œaddr_t
 *
uù_ds6_nbr_gë_Œ
(c⁄° 
uù_ds6_nbr_t
 *
nbr
);

97 c⁄° 
uù_ùaddr_t
 *
uù_ds6_nbr_gë_ùaddr
(c⁄° 
uù_ds6_nbr_t
 *
nbr
);

98 
uù_ds6_nbr_t
 *
uù_ds6_nbr_lookup
(c⁄° 
uù_ùaddr_t
 *
ùaddr
);

99 
uù_ds6_nbr_t
 *
uù_ds6_nbr_Œ_lookup
(c⁄° 
uù_Œaddr_t
 *
Œaddr
);

100 
uù_ùaddr_t
 *
uù_ds6_nbr_ùaddr_‰om_Œaddr
(c⁄° 
uù_Œaddr_t
 *
Œaddr
);

101 c⁄° 
uù_Œaddr_t
 *
uù_ds6_nbr_Œaddr_‰om_ùaddr
(c⁄° 
uù_ùaddr_t
 *
ùaddr
);

102 
uù_ds6_lök_√ighb‹_ˇŒback
(
°©us
, 
numtx
);

103 
uù_ds6_√ighb‹_≥riodic
();

104 
uù_ds6_nbr_num
();

115 
uù_ds6_nbr_t
 *
uù_ds6_gë_Àa°_li„time_√ighb‹
();

	@uip-ds6-route.c

41 
	~"√t/ùv6/uù-ds6.h
"

42 
	~"√t/ù/uù.h
"

44 
	~"lib/li°.h
"

45 
	~"lib/memb.h
"

46 
	~"√t/nbr-èbÀ.h
"

48 
	~<°rög.h
>

51 #ifde‡
NETSTACK_CONF_ROUTING_NEIGHBOR_ADDED_CALLBACK


52 
NETSTACK_CONF_ROUTING_NEIGHBOR_ADDED_CALLBACK
(c⁄° 
lökaddr_t
 *
addr
);

56 #ifde‡
NETSTACK_CONF_ROUTING_NEIGHBOR_REMOVED_CALLBACK


57 
NETSTACK_CONF_ROUTING_NEIGHBOR_REMOVED_CALLBACK
(c⁄° 
lökaddr_t
 *
addr
);

65 
NBR_TABLE_GLOBAL
(
uù_ds6_rouã_√ighb‹_rouãs
, 
nbr_rouãs
);

66 
MEMB
(
√ighb‹rouãmemb
, 
uù_ds6_rouã_√ighb‹_rouã
, 
UIP_DS6_ROUTE_NB
);

71 
LIST
(
rouãli°
);

72 
MEMB
(
rouãmemb
, 
uù_ds6_rouã_t
, 
UIP_DS6_ROUTE_NB
);

76 
LIST
(
deÁu…rouãæi°
);

77 
MEMB
(
deÁu…rouãrmemb
, 
uù_ds6_de‰t_t
, 
UIP_DS6_DEFRT_NB
);

79 #i‡
UIP_DS6_NOTIFICATIONS


80 
LIST
(
nŸifiˇti⁄li°
);

83 
	gnum_rouãs
 = 0;

85 
	~"ùv6_debug.h
"

86 #unde‡
DEBUG


87 
	#DEBUG
 
DEBUG_UIP_DS6_ROUTE


	)

88 
	~"√t/ù/uù-debug.h
"

91 #i‡
ANA_UIP_DS6_ROUTE


92 
	#ANA
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

94 
	#ANA
(...)

	)

97 
rm_rouãli°_ˇŒback
(
nbr_èbÀ_ôem_t
 *
±r
);

99 #i‡
DEBUG
 !
DEBUG_NONE


101 
	$as£π_nbr_rouãs_li°_ß√
()

103 
uù_ds6_rouã_t
 *
r
;

104 
cou¡
;

107 
r
 = 
	`uù_ds6_rouã_hód
(),

108 
cou¡
 = 0;

109 
r
 !
NULL
 &&

110 
cou¡
 < 
UIP_DS6_ROUTE_NB
 * 2;

111 
r
 = 
	`uù_ds6_rouã_√xt
(r),

112 
cou¡
++);

114 if(
cou¡
 > 
UIP_DS6_ROUTE_NB
) {

115 
	`¥ötf
("uip-ds6-route.c:ássert_nbr_routes_list_saneÑouteÜist is in infiniteÜoop\n");

120 if(
cou¡
 < 
num_rouãs
) {

121 
	`¥ötf
("uip-ds6-route.c:ássert_nbr_routes_list_saneÅoo fewÉntries onÑouteÜist: should be %d, is %d, max %d\n",

122 
num_rouãs
, 
cou¡
, 
UIP_CONF_MAX_ROUTES
);

124 
	}
}

127 #i‡
UIP_DS6_NOTIFICATIONS


129 
	$ˇŒ_rouã_ˇŒback
(
evít
, 
uù_ùaddr_t
 *
rouã
,

130 
uù_ùaddr_t
 *
√xth›
)

132 
num
;

133 
uù_ds6_nŸifiˇti⁄
 *
n
;

134 
n
 = 
	`li°_hód
(
nŸifiˇti⁄li°
);

135 
n
 !
NULL
;

136 
n
 = 
	`li°_ôem_√xt
(n)) {

137 if(
evít
 =
UIP_DS6_NOTIFICATION_DEFRT_ADD
 ||

138 
evít
 =
UIP_DS6_NOTIFICATION_DEFRT_RM
) {

139 
num
 = 
	`li°_Àngth
(
deÁu…rouãæi°
);

141 
num
 = 
num_rouãs
;

143 
n
->
	`ˇŒback
(
evít
, 
rouã
, 
√xth›
, 
num
);

145 
	}
}

148 
	$uù_ds6_nŸifiˇti⁄_add
(
uù_ds6_nŸifiˇti⁄
 *
n
,

149 
uù_ds6_nŸifiˇti⁄_ˇŒback
 
c
)

151 if(
n
 !
NULL
 && 
c
 != NULL) {

152 
n
->
ˇŒback
 = 
c
;

153 
	`li°_add
(
nŸifiˇti⁄li°
, 
n
);

155 
	}
}

158 
	$uù_ds6_nŸifiˇti⁄_rm
(
uù_ds6_nŸifiˇti⁄
 *
n
)

160 
	`li°_ªmove
(
nŸifiˇti⁄li°
, 
n
);

161 
	}
}

165 
	$uù_ds6_rouã_öô
()

167 
	`memb_öô
(&
rouãmemb
);

168 
	`li°_öô
(
rouãli°
);

169 
	`nbr_èbÀ_ªgi°î
(
nbr_rouãs
,

170 (
nbr_èbÀ_ˇŒback
 *)
rm_rouãli°_ˇŒback
);

172 
	`memb_öô
(&
deÁu…rouãrmemb
);

173 
	`li°_öô
(
deÁu…rouãæi°
);

175 #i‡
UIP_DS6_NOTIFICATIONS


176 
	`li°_öô
(
nŸifiˇti⁄li°
);

178 
	}
}

180 
uù_Œaddr_t
 *

181 
	$uù_ds6_rouã_√xth›_Œaddr
(
uù_ds6_rouã_t
 *
rouã
)

183 if(
rouã
 !
NULL
) {

184  (
uù_Œaddr_t
 *)
	`nbr_èbÀ_gë_Œaddr
(
nbr_rouãs
,

185 
rouã
->
√ighb‹_rouãs
);

187  
NULL
;

189 
	}
}

191 
uù_ùaddr_t
 *

192 
	$uù_ds6_rouã_√xth›
(
uù_ds6_rouã_t
 *
rouã
)

194 if(
rouã
 !
NULL
) {

195  
	`uù_ds6_nbr_ùaddr_‰om_Œaddr
(
	`uù_ds6_rouã_√xth›_Œaddr
(
rouã
));

197  
NULL
;

199 
	}
}

201 
uù_ds6_rouã_t
 *

202 
	$uù_ds6_rouã_hód
()

204  
	`li°_hód
(
rouãli°
);

205 
	}
}

207 
uù_ds6_rouã_t
 *

208 
	$uù_ds6_rouã_√xt
(
uù_ds6_rouã_t
 *
r
)

210 if(
r
 !
NULL
) {

211 
uù_ds6_rouã_t
 *
n
 = 
	`li°_ôem_√xt
(
r
);

212  
n
;

214  
NULL
;

215 
	}
}

218 
	$uù_ds6_rouã_is_√xth›
(c⁄° 
uù_ùaddr_t
 *
ùaddr
)

220 c⁄° 
uù_Œaddr_t
 *
Œaddr
;

221 
Œaddr
 = 
	`uù_ds6_nbr_Œaddr_‰om_ùaddr
(
ùaddr
);

223 if(
Œaddr
 =
NULL
) {

227  
	`nbr_èbÀ_gë_‰om_Œaddr
(
nbr_rouãs
, (
lökaddr_t
 *)
Œaddr
Ë!
NULL
;

228 
	}
}

231 
	$uù_ds6_rouã_num_rouãs
()

233  
num_rouãs
;

234 
	}
}

236 
uù_ds6_rouã_t
 *

237 
	$uù_ds6_rouã_lookup
(
uù_ùaddr_t
 *
addr
)

239 
uù_ds6_rouã_t
 *
r
;

240 
uù_ds6_rouã_t
 *
found_rouã
;

241 
uöt8_t
 
l⁄ge°m©ch
;

243 
	`PRINTF
("uip-ds6-route: Looking upÑoute for ");

244 
	`PRINT6ADDR
(
addr
);

245 
	`PRINTF
("\n");

248 
found_rouã
 = 
NULL
;

249 
l⁄ge°m©ch
 = 0;

250 
r
 = 
	`uù_ds6_rouã_hód
();

251 
r
 !
NULL
;

252 
r
 = 
	`uù_ds6_rouã_√xt
(r)) {

253 if(
r
->
Àngth
 >
l⁄ge°m©ch
 &&

254 
	`uù_ùaddr_¥efixcmp
(
addr
, &
r
->
ùaddr
,Ñ->
Àngth
)) {

255 
l⁄ge°m©ch
 = 
r
->
Àngth
;

256 
found_rouã
 = 
r
;

258 if(
l⁄ge°m©ch
 == 128) {

264 if(
found_rouã
 !
NULL
) {

265 
	`PRINTF
("uip-ds6-route: FoundÑoute: ");

266 
	`PRINT6ADDR
(
addr
);

267 
	`PRINTF
(" via ");

268 
	`PRINT6ADDR
(
	`uù_ds6_rouã_√xth›
(
found_rouã
));

269 
	`PRINTF
("\n");

271 
	`PRINTF
("uip-ds6-route: NoÑoute found\n");

274 if(
found_rouã
 !
NULL
 && found_rouã !
	`li°_hód
(
rouãli°
)) {

280 
	`li°_ªmove
(
rouãli°
, 
found_rouã
);

281 
	`li°_push
(
rouãli°
, 
found_rouã
);

284  
found_rouã
;

285 
	}
}

287 
uù_ds6_rouã_t
 *

288 
	$uù_ds6_rouã_add
(
uù_ùaddr_t
 *
ùaddr
, 
uöt8_t
 
Àngth
,

289 
uù_ùaddr_t
 *
√xth›
)

291 
uù_ds6_rouã_t
 *
r
;

292 
uù_ds6_rouã_√ighb‹_rouã
 *
nbº
;

294 #i‡
DEBUG
 !
DEBUG_NONE


295 
	`as£π_nbr_rouãs_li°_ß√
();

299 c⁄° 
uù_Œaddr_t
 *
√xth›_Œaddr
 = 
	`uù_ds6_nbr_Œaddr_‰om_ùaddr
(
√xth›
);

300 if(
√xth›_Œaddr
 =
NULL
) {

301 
	`PRINTF
("uip_ds6_route_add:ÇeighborÜink-localáddress unknown for ");

302 
	`PRINT6ADDR
(
√xth›
);

303 
	`PRINTF
("\n");

304  
NULL
;

310 
r
 = 
	`uù_ds6_rouã_lookup
(
ùaddr
);

311 if(
r
 !
NULL
) {

312 
uù_ùaddr_t
 *
cuºít_√xth›
;

313 
cuºít_√xth›
 = 
	`uù_ds6_rouã_√xth›
(
r
);

314 if(
cuºít_√xth›
 !
NULL
 && 
	`uù_ùaddr_cmp
(
√xth›
, current_nexthop)) {

316  
r
;

318 
	`PRINTF
("uip_ds6_route_add: oldÑoute for ");

319 
	`PRINT6ADDR
(
ùaddr
);

320 
	`PRINTF
(" found, deleting it\n");

322 
	`uù_ds6_rouã_rm
(
r
);

325 
uù_ds6_rouã_√ighb‹_rouãs
 *
rouãs
;

330 if(
	`uù_ds6_rouã_num_rouãs
(Ë=
UIP_DS6_ROUTE_NB
) {

331 
uù_ds6_rouã_t
 *
ﬁde°
;

332 
ﬁde°
 = 
NULL
;

333 #i‡
UIP_DS6_ROUTE_REMOVE_LEAST_RECENTLY_USED


336 
ﬁde°
 = 
	`li°_èû
(
rouãli°
);

338 if(
ﬁde°
 =
NULL
) {

339  
NULL
;

341 
	`PRINTF
("uip_ds6_route_add: droppingÑouteÅo ");

342 
	`PRINT6ADDR
(&
ﬁde°
->
ùaddr
);

343 
	`PRINTF
("\n");

344 
	`uù_ds6_rouã_rm
(
ﬁde°
);

356 
rouãs
 = 
	`nbr_èbÀ_gë_‰om_Œaddr
(
nbr_rouãs
,

357 (
lökaddr_t
 *)
√xth›_Œaddr
);

359 if(
rouãs
 =
NULL
) {

365 
rouãs
 = 
	`nbr_èbÀ_add_Œaddr
(
nbr_rouãs
,

366 (
lökaddr_t
 *)
√xth›_Œaddr
,

367 
NBR_TABLE_REASON_ROUTE
, 
NULL
);

368 if(
rouãs
 =
NULL
) {

371 
	`PRINTF
("uip_ds6_route_add: couldÇotállocateÇeighborÅableÉntry\n");

372  
NULL
;

374 
	`LIST_STRUCT_INIT
(
rouãs
, 
rouã_li°
);

375 #ifde‡
NETSTACK_CONF_ROUTING_NEIGHBOR_ADDED_CALLBACK


376 
	`NETSTACK_CONF_ROUTING_NEIGHBOR_ADDED_CALLBACK
((c⁄° 
lökaddr_t
 *)
√xth›_Œaddr
);

381 
r
 = 
	`memb_Æloc
(&
rouãmemb
);

383 if(
r
 =
NULL
) {

386 
	`PRINTF
("uip_ds6_route_add: couldÇotállocateÑoute\n");

387  
NULL
;

392 
	`li°_push
(
rouãli°
, 
r
);

394 
nbº
 = 
	`memb_Æloc
(&
√ighb‹rouãmemb
);

395 if(
nbº
 =
NULL
) {

398 
	`PRINTF
("uip_ds6_route_add: couldÇotállocateÇeighborÑouteÜistÉntry\n");

399 
	`memb_‰ì
(&
rouãmemb
, 
r
);

400  
NULL
;

403 
nbº
->
rouã
 = 
r
;

405 
	`li°_add
(
rouãs
->
rouã_li°
, 
nbº
);

406 
r
->
√ighb‹_rouãs
 = 
rouãs
;

407 
num_rouãs
++;

409 
	`PRINTF
("uù_ds6_rouã_addÇum %d\n", 
num_rouãs
);

412 
	`nbr_èbÀ_lock
(
nbr_rouãs
, 
rouãs
);

415 
	`uù_ùaddr_c›y
(&(
r
->
ùaddr
), ipaddr);

416 
r
->
Àngth
 =Üength;

418 #ifde‡
UIP_DS6_ROUTE_STATE_TYPE


419 
	`mem£t
(&
r
->
°©e
, 0, (
UIP_DS6_ROUTE_STATE_TYPE
));

422 
	`PRINTF
("uip_ds6_route_add:áddingÑoute: ");

423 
	`PRINT6ADDR
(
ùaddr
);

424 
	`PRINTF
(" via ");

425 
	`PRINT6ADDR
(
√xth›
);

426 
	`PRINTF
("\n");

427 
	`ANNOTATE
("#L %u 1;blue\n", 
√xth›
->
u8
[(
uù_ùaddr_t
) - 1]);

429 #i‡
UIP_DS6_NOTIFICATIONS


430 
	`ˇŒ_rouã_ˇŒback
(
UIP_DS6_NOTIFICATION_ROUTE_ADD
, 
ùaddr
, 
√xth›
);

433 #i‡
DEBUG
 !
DEBUG_NONE


434 
	`as£π_nbr_rouãs_li°_ß√
();

436  
r
;

437 
	}
}

441 
	$uù_ds6_rouã_rm
(
uù_ds6_rouã_t
 *
rouã
)

443 
uù_ds6_rouã_√ighb‹_rouã
 *
√ighb‹_rouã
;

444 #i‡
DEBUG
 !
DEBUG_NONE


445 
	`as£π_nbr_rouãs_li°_ß√
();

447 if(
rouã
 !
NULL
 &&Ñouã->
√ighb‹_rouãs
 != NULL) {

449 
	`PRINTF
("uip_ds6_route_rm:ÑemovingÑoute: ");

450 
	`PRINT6ADDR
(&
rouã
->
ùaddr
);

451 
	`PRINTF
("\n");

454 
	`li°_ªmove
(
rouãli°
, 
rouã
);

457 
√ighb‹_rouã
 = 
	`li°_hód
(
rouã
->
√ighb‹_rouãs
->
rouã_li°
);

458 
√ighb‹_rouã
 !
NULL
 &&Çeighb‹_rouã->
rouã
 !=Ñoute;

459 
√ighb‹_rouã
 = 
	`li°_ôem_√xt
(neighbor_route));

461 if(
√ighb‹_rouã
 =
NULL
) {

462 
	`PRINTF
("uip_ds6_route_rm:Çeighbor_route was NULL for ");

463 
	`uù_debug_ùaddr_¥öt
(&
rouã
->
ùaddr
);

464 
	`PRINTF
("\n");

466 
	`li°_ªmove
(
rouã
->
√ighb‹_rouãs
->
rouã_li°
, 
√ighb‹_rouã
);

467 if(
	`li°_hód
(
rouã
->
√ighb‹_rouãs
->
rouã_li°
Ë=
NULL
) {

470 #i‡(
DEBUG
Ë& 
DEBUG_ANNOTATE


471 
uù_ùaddr_t
 *
√xth›
 = 
	`uù_ds6_rouã_√xth›
(
rouã
);

472 if(
√xth›
 !
NULL
) {

473 
	`ANNOTATE
("#L %u 0\n", 
√xth›
->
u8
[(
uù_ùaddr_t
) - 1]);

476 
	`PRINTF
("uip_ds6_route_rm:ÑemovingÇeighborÅoo\n");

477 
	`nbr_èbÀ_ªmove
(
nbr_rouãs
, 
rouã
->
√ighb‹_rouãs
->
rouã_li°
);

478 #ifde‡
NETSTACK_CONF_ROUTING_NEIGHBOR_REMOVED_CALLBACK


479 
	`NETSTACK_CONF_ROUTING_NEIGHBOR_REMOVED_CALLBACK
(

480 (c⁄° 
lökaddr_t
 *)
	`nbr_èbÀ_gë_Œaddr
(
nbr_rouãs
, 
rouã
->
√ighb‹_rouãs
->
rouã_li°
));

483 
	`memb_‰ì
(&
rouãmemb
, 
rouã
);

484 
	`memb_‰ì
(&
√ighb‹rouãmemb
, 
√ighb‹_rouã
);

486 
num_rouãs
--;

488 
	`PRINTF
("uù_ds6_rouã_rmÇum %d\n", 
num_rouãs
);

490 #i‡
UIP_DS6_NOTIFICATIONS


491 
	`ˇŒ_rouã_ˇŒback
(
UIP_DS6_NOTIFICATION_ROUTE_RM
,

492 &
rouã
->
ùaddr
, 
	`uù_ds6_rouã_√xth›
(route));

496 #i‡
DEBUG
 !
DEBUG_NONE


497 
	`as£π_nbr_rouãs_li°_ß√
();

500 
	}
}

503 
	$rm_rouãli°
(
uù_ds6_rouã_√ighb‹_rouãs
 *
rouãs
)

505 #i‡
DEBUG
 !
DEBUG_NONE


506 
	`as£π_nbr_rouãs_li°_ß√
();

508 
	`PRINTF
("uip_ds6_route_rm_routelist\n");

509 if(
rouãs
 !
NULL
 &&Ñouãs->
rouã_li°
 != NULL) {

510 
uù_ds6_rouã_√ighb‹_rouã
 *
r
;

511 
r
 = 
	`li°_hód
(
rouãs
->
rouã_li°
);

512 
r
 !
NULL
) {

513 
	`uù_ds6_rouã_rm
(
r
->
rouã
);

514 
r
 = 
	`li°_hód
(
rouãs
->
rouã_li°
);

516 
	`nbr_èbÀ_ªmove
(
nbr_rouãs
, 
rouãs
);

518 #i‡
DEBUG
 !
DEBUG_NONE


519 
	`as£π_nbr_rouãs_li°_ß√
();

521 
	}
}

524 
	$rm_rouãli°_ˇŒback
(
nbr_èbÀ_ôem_t
 *
±r
)

526 
	`rm_rouãli°
((
uù_ds6_rouã_√ighb‹_rouãs
 *)
±r
);

527 
	}
}

530 
	$uù_ds6_rouã_rm_by_√xth›
(
uù_ùaddr_t
 *
√xth›
)

533 c⁄° 
uù_Œaddr_t
 *
√xth›_Œaddr
;

534 
uù_ds6_rouã_√ighb‹_rouãs
 *
rouãs
;

536 
√xth›_Œaddr
 = 
	`uù_ds6_nbr_Œaddr_‰om_ùaddr
(
√xth›
);

537 
rouãs
 = 
	`nbr_èbÀ_gë_‰om_Œaddr
(
nbr_rouãs
,

538 (
lökaddr_t
 *)
√xth›_Œaddr
);

539 
	`rm_rouãli°
(
rouãs
);

540 
	}
}

542 
uù_ds6_de‰t_t
 *

543 
	$uù_ds6_de‰t_add
(
uù_ùaddr_t
 *
ùaddr
, 
öãrvÆ
)

545 
uù_ds6_de‰t_t
 *
d
;

547 #i‡
DEBUG
 !
DEBUG_NONE


548 
	`as£π_nbr_rouãs_li°_ß√
();

551 
	`PRINTF
("uip_ds6_defrt_add\n");

552 
d
 = 
	`uù_ds6_de‰t_lookup
(
ùaddr
);

553 if(
d
 =
NULL
) {

554 
d
 = 
	`memb_Æloc
(&
deÁu…rouãrmemb
);

555 if(
d
 =
NULL
) {

556 
	`PRINTF
("uip_ds6_defrt_add: couldÇotádd defaultÑouteÅo ");

557 
	`PRINT6ADDR
(
ùaddr
);

558 
	`PRINTF
(", out of memory\n");

559  
NULL
;

561 
	`PRINTF
("uip_ds6_defrt_add:ádding defaultÑouteÅo ");

562 
	`PRINT6ADDR
(
ùaddr
);

563 
	`PRINTF
("\n");

566 
	`li°_push
(
deÁu…rouãæi°
, 
d
);

569 
	`uù_ùaddr_c›y
(&
d
->
ùaddr
, ipaddr);

570 if(
öãrvÆ
 != 0) {

571 
	`°imî_£t
(&
d
->
li„time
, 
öãrvÆ
);

572 
d
->
isöföôe
 = 0;

574 
d
->
isöföôe
 = 1;

577 
	`ANNOTATE
("#L %u 1\n", 
ùaddr
->
u8
[(
uù_ùaddr_t
) - 1]);

579 #i‡
UIP_DS6_NOTIFICATIONS


580 
	`ˇŒ_rouã_ˇŒback
(
UIP_DS6_NOTIFICATION_DEFRT_ADD
, 
ùaddr
, ipaddr);

583 #i‡
DEBUG
 !
DEBUG_NONE


584 
	`as£π_nbr_rouãs_li°_ß√
();

587  
d
;

588 
	}
}

591 
	$uù_ds6_de‰t_rm
(
uù_ds6_de‰t_t
 *
de‰t
)

593 
uù_ds6_de‰t_t
 *
d
;

595 #i‡
DEBUG
 !
DEBUG_NONE


596 
	`as£π_nbr_rouãs_li°_ß√
();

600 
d
 = 
	`li°_hód
(
deÁu…rouãæi°
);

601 
d
 !
NULL
;

602 
d
 = 
	`li°_ôem_√xt
(d)) {

603 if(
d
 =
de‰t
) {

604 
	`PRINTF
("Removing defaultÑoute\n");

605 
	`li°_ªmove
(
deÁu…rouãæi°
, 
de‰t
);

606 
	`memb_‰ì
(&
deÁu…rouãrmemb
, 
de‰t
);

607 
	`ANNOTATE
("#L %u 0\n", 
de‰t
->
ùaddr
.
u8
[(
uù_ùaddr_t
) - 1]);

608 #i‡
UIP_DS6_NOTIFICATIONS


609 
	`ˇŒ_rouã_ˇŒback
(
UIP_DS6_NOTIFICATION_DEFRT_RM
,

610 &
de‰t
->
ùaddr
, &defrt->ipaddr);

615 #i‡
DEBUG
 !
DEBUG_NONE


616 
	`as£π_nbr_rouãs_li°_ß√
();

619 
	}
}

621 
uù_ds6_de‰t_t
 *

622 
	$uù_ds6_de‰t_lookup
(
uù_ùaddr_t
 *
ùaddr
)

624 
uù_ds6_de‰t_t
 *
d
;

625 
d
 = 
	`li°_hód
(
deÁu…rouãæi°
);

626 
d
 !
NULL
;

627 
d
 = 
	`li°_ôem_√xt
(d)) {

628 if(
	`uù_ùaddr_cmp
(&
d
->
ùaddr
, ipaddr)) {

629  
d
;

632  
NULL
;

633 
	}
}

635 
uù_ùaddr_t
 *

636 
	$uù_ds6_de‰t_choo£
()

638 
uù_ds6_de‰t_t
 *
d
;

639 
uù_ds6_nbr_t
 *
be°nbr
;

640 
uù_ùaddr_t
 *
addr
;

642 
addr
 = 
NULL
;

643 
d
 = 
	`li°_hód
(
deÁu…rouãæi°
);

644 
d
 !
NULL
;

645 
d
 = 
	`li°_ôem_√xt
(d)) {

646 
	`PRINTF
("Defrt, IPáddress ");

647 
	`PRINT6ADDR
(&
d
->
ùaddr
);

648 
	`PRINTF
("\n");

649 
be°nbr
 = 
	`uù_ds6_nbr_lookup
(&
d
->
ùaddr
);

650 if(
be°nbr
 !
NULL
 && be°nbr->
°©e
 !
NBR_INCOMPLETE
) {

651 
	`PRINTF
("Defrt found, IPáddress ");

652 
	`PRINT6ADDR
(&
d
->
ùaddr
);

653 
	`PRINTF
("\n");

654  &
d
->
ùaddr
;

656 
addr
 = &
d
->
ùaddr
;

657 
	`PRINTF
("Defrt INCOMPLETE found, IPáddress ");

658 
	`PRINT6ADDR
(&
d
->
ùaddr
);

659 
	`PRINTF
("\n");

662  
addr
;

663 
	}
}

666 
	$uù_ds6_de‰t_≥riodic
()

668 
uù_ds6_de‰t_t
 *
d
;

669 
d
 = 
	`li°_hód
(
deÁu…rouãæi°
);

670 
d
 !
NULL
) {

671 if(!
d
->
isöföôe
 &&

672 
	`°imî_expúed
(&
d
->
li„time
)) {

673 
	`PRINTF
("uip_ds6_defrt_periodic: defrtÜifetimeÉxpired\n");

674 
	`uù_ds6_de‰t_rm
(
d
);

675 
d
 = 
	`li°_hód
(
deÁu…rouãæi°
);

677 
d
 = 
	`li°_ôem_√xt
(d);

680 
	}
}

	@uip-ds6-route.h

40 #i‚de‡
UIP_DS6_ROUTE_H


41 
	#UIP_DS6_ROUTE_H


	)

43 
	~"√t/ù/uù.h
"

44 
	~"√t/nbr-èbÀ.h
"

45 
	~"sys/°imî.h
"

46 
	~"lib/li°.h
"

48 
NBR_TABLE_DECLARE
(
nbr_rouãs
);

50 
uù_ds6_rouã_öô
();

52 #i‚de‡
UIP_CONF_UIP_DS6_NOTIFICATIONS


53 
	#UIP_DS6_NOTIFICATIONS
 1

	)

55 
	#UIP_DS6_NOTIFICATIONS
 
UIP_CONF_UIP_DS6_NOTIFICATIONS


	)

58 #i‡
UIP_DS6_NOTIFICATIONS


63 
	#UIP_DS6_NOTIFICATION_DEFRT_ADD
 0

	)

64 
	#UIP_DS6_NOTIFICATION_DEFRT_RM
 1

	)

65 
	#UIP_DS6_NOTIFICATION_ROUTE_ADD
 2

	)

66 
	#UIP_DS6_NOTIFICATION_ROUTE_RM
 3

	)

68 (* 
	tuù_ds6_nŸifiˇti⁄_ˇŒback
)(
	tevít
,

69 
	tuù_ùaddr_t
 *
	trouã
,

70 
	tuù_ùaddr_t
 *
	t√xth›
,

71 
	tnum_rouãs
);

72 
	suù_ds6_nŸifiˇti⁄
 {

73 
uù_ds6_nŸifiˇti⁄
 *
√xt
;

74 
uù_ds6_nŸifiˇti⁄_ˇŒback
 
ˇŒback
;

77 
	`uù_ds6_nŸifiˇti⁄_add
(
uù_ds6_nŸifiˇti⁄
 *
n
,

78 
uù_ds6_nŸifiˇti⁄_ˇŒback
 
c
);

80 
	`uù_ds6_nŸifiˇti⁄_rm
(
uù_ds6_nŸifiˇti⁄
 *
n
);

85 #i‚de‡
UIP_CONF_MAX_ROUTES


86 #ifde‡
UIP_CONF_DS6_ROUTE_NBU


87 
	#UIP_DS6_ROUTE_NB
 
UIP_CONF_DS6_ROUTE_NBU


	)

89 
	#UIP_DS6_ROUTE_NB
 4

	)

92 
	#UIP_DS6_ROUTE_NB
 
UIP_CONF_MAX_ROUTES


	)

97 #i‚de‡
UIP_DS6_ROUTE_STATE_TYPE


98 
	#UIP_DS6_ROUTE_STATE_TYPE
 
Ωl_rouã_íåy_t


	)

100 
	#RPL_ROUTE_ENTRY_NOPATH_RECEIVED
 0x01

	)

101 
	#RPL_ROUTE_ENTRY_DAO_PENDING
 0x02

	)

102 
	#RPL_ROUTE_ENTRY_DAO_NACK
 0x04

	)

104 
	#RPL_ROUTE_IS_NOPATH_RECEIVED
(
rouã
) \

105 (((
rouã
)->
°©e
.
°©e_Êags
 & 
RPL_ROUTE_ENTRY_NOPATH_RECEIVED
Ë!0)

	)

106 
	#RPL_ROUTE_SET_NOPATH_RECEIVED
(
rouã
) do { \

107 (
rouã
)->
°©e
.
°©e_Êags
 |
RPL_ROUTE_ENTRY_NOPATH_RECEIVED
; \

108 
	}
} 0)

	)

109 
	#RPL_ROUTE_CLEAR_NOPATH_RECEIVED
(
rouã
) do { \

110 (
rouã
)->
°©e
.
°©e_Êags
 &~
RPL_ROUTE_ENTRY_NOPATH_RECEIVED
; \

111 } 0)

	)

113 
	#RPL_ROUTE_IS_DAO_PENDING
(
rouã
) \

114 ((
rouã
->
°©e
.
°©e_Êags
 & 
RPL_ROUTE_ENTRY_DAO_PENDING
Ë!0)

	)

115 
	#RPL_ROUTE_SET_DAO_PENDING
(
rouã
) do { \

116 (
rouã
)->
°©e
.
°©e_Êags
 |
RPL_ROUTE_ENTRY_DAO_PENDING
; \

117 } 0)

	)

118 
	#RPL_ROUTE_CLEAR_DAO_PENDING
(
rouã
) do { \

119 (
rouã
)->
°©e
.
°©e_Êags
 &~
RPL_ROUTE_ENTRY_DAO_PENDING
; \

120 } 0)

	)

122 
	#RPL_ROUTE_IS_DAO_NACKED
(
rouã
) \

123 ((
rouã
->
°©e
.
°©e_Êags
 & 
RPL_ROUTE_ENTRY_DAO_NACK
Ë!0)

	)

124 
	#RPL_ROUTE_SET_DAO_NACKED
(
rouã
) do { \

125 (
rouã
)->
°©e
.
°©e_Êags
 |
RPL_ROUTE_ENTRY_DAO_NACK
; \

126 } 0)

	)

127 
	#RPL_ROUTE_CLEAR_DAO_NACKED
(
rouã
) do { \

128 (
rouã
)->
°©e
.
°©e_Êags
 &~
RPL_ROUTE_ENTRY_DAO_NACK
; \

129 } 0)

	)

131 
	#RPL_ROUTE_CLEAR_DAO
(
rouã
) do { \

132 (
rouã
)->
°©e
.
°©e_Êags
 &~(
RPL_ROUTE_ENTRY_DAO_NACK
|
RPL_ROUTE_ENTRY_DAO_PENDING
); \

133 } 0)

	)

135 
	gΩl_dag
;

136 
	sΩl_rouã_íåy
 {

137 
uöt32_t
 
	mli„time
;

138 
Ωl_dag
 *
	mdag
;

139 
uöt8_t
 
	mdao_£qno_out
;

140 
uöt8_t
 
	mdao_£qno_ö
;

141 
uöt8_t
 
	m°©e_Êags
;

142 } 
	tΩl_rouã_íåy_t
;

147 
	suù_ds6_rouã_√ighb‹_rouãs
 {

148 
LIST_STRUCT
(
rouã_li°
);

152 
	suù_ds6_rouã
 {

153 
uù_ds6_rouã
 *
	m√xt
;

159 
uù_ds6_rouã_√ighb‹_rouãs
 *
	m√ighb‹_rouãs
;

160 
uù_ùaddr_t
 
	mùaddr
;

161 #ifde‡
UIP_DS6_ROUTE_STATE_TYPE


162 
UIP_DS6_ROUTE_STATE_TYPE
 
	m°©e
;

164 
uöt8_t
 
	mÀngth
;

165 } 
	tuù_ds6_rouã_t
;

169 
	suù_ds6_rouã_√ighb‹_rouã
 {

170 
uù_ds6_rouã_√ighb‹_rouã
 *
	m√xt
;

171 
uù_ds6_rouã
 *
	mrouã
;

175 
	suù_ds6_de‰t
 {

176 
uù_ds6_de‰t
 *
	m√xt
;

177 
uù_ùaddr_t
 
	mùaddr
;

178 
°imî
 
	mli„time
;

179 
uöt8_t
 
	misöföôe
;

180 } 
	tuù_ds6_de‰t_t
;

184 
uù_ds6_de‰t_t
 *
uù_ds6_de‰t_add
(
uù_ùaddr_t
 *
ùaddr
,

185 
öãrvÆ
);

186 
uù_ds6_de‰t_rm
(
uù_ds6_de‰t_t
 *
de‰t
);

187 
uù_ds6_de‰t_t
 *
uù_ds6_de‰t_lookup
(
uù_ùaddr_t
 *
ùaddr
);

188 
uù_ùaddr_t
 *
uù_ds6_de‰t_choo£
();

190 
uù_ds6_de‰t_≥riodic
();

196 
uù_ds6_rouã_t
 *
uù_ds6_rouã_lookup
(
uù_ùaddr_t
 *
de°ùaddr
);

197 
uù_ds6_rouã_t
 *
uù_ds6_rouã_add
(
uù_ùaddr_t
 *
ùaddr
, 
uöt8_t
 
Àngth
,

198 
uù_ùaddr_t
 *
√xt_h›
);

199 
uù_ds6_rouã_rm
(
uù_ds6_rouã_t
 *
rouã
);

200 
uù_ds6_rouã_rm_by_√xth›
(
uù_ùaddr_t
 *
√xth›
);

202 
uù_ùaddr_t
 *
uù_ds6_rouã_√xth›
(
uù_ds6_rouã_t
 *);

203 
uù_ds6_rouã_num_rouãs
();

204 
uù_ds6_rouã_t
 *
uù_ds6_rouã_hód
();

205 
uù_ds6_rouã_t
 *
uù_ds6_rouã_√xt
(uip_ds6_route_t *);

206 
uù_ds6_rouã_is_√xth›
(c⁄° 
uù_ùaddr_t
 *
ùaddr
);

	@uip-ds6.c

45 
	~<°rög.h
>

46 
	~<°dlib.h
>

47 
	~<°ddef.h
>

48 
	~"lib/øndom.h
"

49 
	~"√t/ùv6/uù-nd6.h
"

50 
	~"√t/ùv6/uù-ds6.h
"

51 
	~"√t/ù/uù-∑ckëqueue.h
"

53 
	~"ùv6_debug.h
"

54 
	#DEBUG
 
DEBUG_UIP_DS6


	)

55 
	~"√t/ù/uù-debug.h
"

58 #i‡
ANA_UIP_DS6


59 
	#ANA
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

61 
	#ANA
(...)

	)

64 #i‡
DUAL_RADIO


65 #ifde‡
ZOLERTIA_Z1


66 
	~"../∂©f‹m/z1/duÆ_ødio.h
"

68 
	~"../∂©f‹m/cooja/duÆ_c⁄f.h
"

73 
ëimî
 
	guù_ds6_timî_≥riodic
;

75 #i‡
UIP_CONF_ROUTER


76 
°imî
 
	guù_ds6_timî_ø
;

77 #i‡
UIP_ND6_SEND_RA


78 
uöt8_t
 
	gøcou¡
;

79 
uöt16_t
 
	gønd_time
;

82 
ëimî
 
	guù_ds6_timî_rs
;

83 
uöt8_t
 
	grscou¡
;

88 
uù_ds6_√tif_t
 
	guù_ds6_if
;

89 #i‡
DUAL_RADIO


90 
uù_ds6_√tif_t
 
	gl⁄g_uù_ds6_if
;

92 
uù_ds6_¥efix_t
 
	guù_ds6_¥efix_li°
[
UIP_DS6_PREFIX_NB
];

95 
uöt8_t
 
	guù_ds6_addr_size
;

96 
uöt8_t
 
	guù_ds6_√tif_addr_li°_off£t
;

101 
uù_ùaddr_t
 
	gloc_fùaddr
;

102 
uù_ùaddr_t
 
	gloc_l⁄g_fùaddr
;

105 
uù_ds6_addr_t
 *
	gloˇddr
;

106 
uù_ds6_maddr_t
 *
	glocmaddr
;

107 #i‡
UIP_DS6_AADDR_NB


108 
uù_ds6_Øddr_t
 *
	gloˇaddr
;

110 
uù_ds6_¥efix_t
 *
	glo˝ªfix
;

114 
	$uù_ds6_öô
()

117 
	`uù_ds6_√ighb‹s_öô
();

118 
	`uù_ds6_rouã_öô
();

120 
	`PRINTF
("Init of IPv6 data structures\n");

121 
	`PRINTF
("%uÇeighbors\n%u defaultÑouters\n%uÖrefixes\n%uÑoutes\n%u unicastáddresses\n%u multicastáddresses\n%uánycastáddresses\n",

122 
NBR_TABLE_MAX_NEIGHBORS
, 
UIP_DS6_DEFRT_NB
, 
UIP_DS6_PREFIX_NB
, 
UIP_DS6_ROUTE_NB
,

123 
UIP_DS6_ADDR_NB
, 
UIP_DS6_MADDR_NB
, 
UIP_DS6_AADDR_NB
);

124 
	`mem£t
(
uù_ds6_¥efix_li°
, 0, (uip_ds6_prefix_list));

125 
	`mem£t
(&
uù_ds6_if
, 0, (uip_ds6_if));

127 
	`mem£t
(&
l⁄g_uù_ds6_if
, 0, (long_uip_ds6_if));

128 
uù_ds6_addr_size
 = (
uù_ds6_addr
);

129 
uù_ds6_√tif_addr_li°_off£t
 = 
	`off£tof
(
uù_ds6_√tif
, 
addr_li°
);

132 
uù_ds6_if
.
lök_mtu
 = 
UIP_LINK_MTU
;

133 
uù_ds6_if
.
cur_h›_limô
 = 
UIP_TTL
;

134 
uù_ds6_if
.
ba£_ªachabÀ_time
 = 
UIP_ND6_REACHABLE_TIME
;

135 
uù_ds6_if
.
ªachabÀ_time
 = 
	`uù_ds6_compuã_ªachabÀ_time
();

136 
uù_ds6_if
.
ªå™s_timî
 = 
UIP_ND6_RETRANS_TIMER
;

137 
uù_ds6_if
.
maxdadns
 = 
UIP_ND6_DEF_MAXDADNS
;

140 #i‡
DUAL_RADIO


142 
l⁄g_uù_ds6_if
.
lök_mtu
 = 
UIP_LINK_MTU
;

143 
l⁄g_uù_ds6_if
.
cur_h›_limô
 = 
UIP_TTL
;

144 
l⁄g_uù_ds6_if
.
ba£_ªachabÀ_time
 = 
UIP_ND6_REACHABLE_TIME
;

145 
l⁄g_uù_ds6_if
.
ªachabÀ_time
 = 
	`uù_ds6_compuã_ªachabÀ_time
();

146 
l⁄g_uù_ds6_if
.
ªå™s_timî
 = 
UIP_ND6_RETRANS_TIMER
;

147 
l⁄g_uù_ds6_if
.
maxdadns
 = 
UIP_ND6_DEF_MAXDADNS
;

154 #i‡
DUAL_RADIO


156 
	`uù_¸óã_lökloˇl_¥efix
(&
loc_l⁄g_fùaddr
);

157 #i‡
UIP_CONF_ROUTER


158 
	`uù_ds6_¥efix_add
(&
loc_l⁄g_fùaddr
, 
UIP_DEFAULT_PREFIX_LEN
, 0, 0, 0, 0);

160 
	`uù_ds6_¥efix_add
(&
loc_l⁄g_fùaddr
, 
UIP_DEFAULT_PREFIX_LEN
, 0);

162 
	`uù_ds6_£t_addr_iid
(&
loc_l⁄g_fùaddr
, &
uù_l⁄g_Œaddr
);

163 
	`uù_ds6_l⁄g_addr_add
(&
loc_l⁄g_fùaddr
, 0, 
ADDR_AUTOCONF
);

165 
	`uù_¸óã_lökloˇl_Æ odes_mˇ°
(&
loc_l⁄g_fùaddr
);

166 
	`uù_ds6_l⁄g_maddr_add
(&
loc_l⁄g_fùaddr
);

167 #i‡
UIP_CONF_ROUTER


168 
	`uù_¸óã_lökloˇl_ÆÃouãrs_mˇ°
(&
loc_l⁄g_fùaddr
);

169 
	`uù_ds6_l⁄g_maddr_add
(&
loc_l⁄g_fùaddr
);

176 
	`uù_¸óã_lökloˇl_¥efix
(&
loc_fùaddr
);

177 #i‡
UIP_CONF_ROUTER


178 
	`uù_ds6_¥efix_add
(&
loc_fùaddr
, 
UIP_DEFAULT_PREFIX_LEN
, 0, 0, 0, 0);

180 
	`uù_ds6_¥efix_add
(&
loc_fùaddr
, 
UIP_DEFAULT_PREFIX_LEN
, 0);

182 
	`uù_ds6_£t_addr_iid
(&
loc_fùaddr
, &
uù_Œaddr
);

183 
	`uù_ds6_addr_add
(&
loc_fùaddr
, 0, 
ADDR_AUTOCONF
);

185 
	`uù_¸óã_lökloˇl_Æ odes_mˇ°
(&
loc_fùaddr
);

186 
	`uù_ds6_maddr_add
(&
loc_fùaddr
);

187 #i‡
UIP_CONF_ROUTER


188 
	`uù_¸óã_lökloˇl_ÆÃouãrs_mˇ°
(&
loc_fùaddr
);

189 
	`uù_ds6_maddr_add
(&
loc_fùaddr
);

191 #i‡
UIP_ND6_SEND_RA


192 
	`°imî_£t
(&
uù_ds6_timî_ø
, 2);

195 
	`ëimî_£t
(&
uù_ds6_timî_rs
,

196 
	`øndom_ønd
(Ë% (
UIP_ND6_MAX_RTR_SOLICITATION_DELAY
 *

197 
CLOCK_SECOND
));

199 
	`ëimî_£t
(&
uù_ds6_timî_≥riodic
, 
UIP_DS6_PERIOD
);

202 
	}
}

207 
	$uù_ds6_≥riodic
()

211 
loˇddr
 = 
uù_ds6_if
.
addr_li°
;

212 
loˇddr
 < 
uù_ds6_if
.
addr_li°
 + 
UIP_DS6_ADDR_NB
;Üocaddr++) {

213 if(
loˇddr
->
isu£d
) {

214 if((!
loˇddr
->
isöföôe
Ë&& (
	`°imî_expúed
(&loˇddr->
vli„time
))) {

215 
	`uù_ds6_addr_rm
(
loˇddr
);

216 #i‡
UIP_ND6_DEF_MAXDADNS
 > 0

217 } if((
loˇddr
->
°©e
 =
ADDR_TENTATIVE
)

218 && (
loˇddr
->
dadnscou¡
 <
uù_ds6_if
.
maxdadns
)

219 && (
	`timî_expúed
(&
loˇddr
->
dadtimî
))

220 && (
uù_Àn
 == 0)) {

221 
	`uù_ds6_dad
(
loˇddr
);

228 #i‡
DUAL_RADIO


230 
loˇddr
 = 
l⁄g_uù_ds6_if
.
addr_li°
;

231 
loˇddr
 < 
l⁄g_uù_ds6_if
.
addr_li°
 + 
UIP_DS6_ADDR_NB
;Üocaddr++) {

232 if(
loˇddr
->
isu£d
) {

233 if((!
loˇddr
->
isöföôe
Ë&& (
	`°imî_expúed
(&loˇddr->
vli„time
))) {

234 
	`uù_ds6_addr_rm
(
loˇddr
);

235 #i‡
UIP_ND6_DEF_MAXDADNS
 > 0

236 } if((
loˇddr
->
°©e
 =
ADDR_TENTATIVE
)

237 && (
loˇddr
->
dadnscou¡
 <
l⁄g_uù_ds6_if
.
maxdadns
)

238 && (
	`timî_expúed
(&
loˇddr
->
dadtimî
))

239 && (
uù_Àn
 == 0)) {

240 
	`uù_ds6_dad
(
loˇddr
);

249 
	`uù_ds6_de‰t_≥riodic
();

258 #i‡!
UIP_CONF_ROUTER


260 
lo˝ªfix
 = 
uù_ds6_¥efix_li°
;

261 
lo˝ªfix
 < 
uù_ds6_¥efix_li°
 + 
UIP_DS6_PREFIX_NB
;

262 
lo˝ªfix
++) {

263 if(
lo˝ªfix
->
isu£d
 && !lo˝ªfix->
isöföôe


264 && 
	`°imî_expúed
(&(
lo˝ªfix
->
vli„time
))) {

265 
	`uù_ds6_¥efix_rm
(
lo˝ªfix
);

270 #i‡
UIP_ND6_SEND_NA


271 
	`uù_ds6_√ighb‹_≥riodic
();

274 #i‡
UIP_CONF_ROUTER
 && 
UIP_ND6_SEND_RA


276 if(
	`°imî_expúed
(&
uù_ds6_timî_ø
Ë&& (
uù_Àn
 == 0)) {

277 
	`uù_ds6_£nd_ø_≥riodic
();

280 
	`ëimî_ª£t
(&
uù_ds6_timî_≥riodic
);

282 
	}
}

285 
uöt8_t


286 
	$uù_ds6_li°_lo›
(
uù_ds6_ñemít_t
 *
li°
, 
uöt8_t
 
size
,

287 
uöt16_t
 
ñemítsize
, 
uù_ùaddr_t
 *
ùaddr
,

288 
uöt8_t
 
ùaddæí
, 
uù_ds6_ñemít_t
 **
out_ñemít
)

290 
uù_ds6_ñemít_t
 *
ñemít
;

292 *
out_ñemít
 = 
NULL
;

294 
ñemít
 = 
li°
;

295 
ñemít
 <

296 (
uù_ds6_ñemít_t
 *)((
uöt8_t
 *)
li°
 + (
size
 * 
ñemítsize
));

297 
ñemít
 = (
uù_ds6_ñemít_t
 *)((
uöt8_t
 *ÎÀmíà+ 
ñemítsize
)) {

298 if(
ñemít
->
isu£d
) {

299 if(
	`uù_ùaddr_¥efixcmp
(&
ñemít
->
ùaddr
, i∑ddr, 
ùaddæí
)) {

300 *
out_ñemít
 = 
ñemít
;

301  
FOUND
;

304 *
out_ñemít
 = 
ñemít
;

308  *
out_ñemít
 !
NULL
 ? 
FREESPACE
 : 
NOSPACE
;

309 
	}
}

312 #i‡
UIP_CONF_ROUTER


314 
uù_ds6_¥efix_t
 *

315 
	$uù_ds6_¥efix_add
(
uù_ùaddr_t
 *
ùaddr
, 
uöt8_t
 
ùaddæí
,

316 
uöt8_t
 
advîti£
, uöt8_à
Êags
, 
vtime
,

317 
±ime
)

319 if(
uù_ds6_li°_lo›


320 ((
uù_ds6_ñemít_t
 *)
uù_ds6_¥efix_li°
, 
UIP_DS6_PREFIX_NB
,

321 (
uù_ds6_¥efix_t
), 
ùaddr
, 
ùaddæí
,

322 (
uù_ds6_ñemít_t
 **)&
lo˝ªfix
Ë=
FREESPACE
) {

323 
lo˝ªfix
->
isu£d
 = 1;

324 
	`uù_ùaddr_c›y
(&
lo˝ªfix
->
ùaddr
, ipaddr);

325 
lo˝ªfix
->
Àngth
 = 
ùaddæí
;

326 
lo˝ªfix
->
advîti£
 =ádvertise;

327 
lo˝ªfix
->
l_a_ª£rved
 = 
Êags
;

328 
lo˝ªfix
->
vli„time
 = 
vtime
;

329 
lo˝ªfix
->
∂i„time
 = 
±ime
;

330 
	`PRINTF
("AddingÖrefix ");

331 
	`PRINT6ADDR
(&
lo˝ªfix
->
ùaddr
);

332 
	`PRINTF
("length %u, flags %x, ValidÜifetime %lx, PrefferedÜifetime %lx\n",

333 
ùaddæí
, 
Êags
, 
vtime
, 
±ime
);

334  
lo˝ªfix
;

336 
	`PRINTF
("No more space in PrefixÜist\n");

338  
NULL
;

339 
	}
}

343 
uù_ds6_¥efix_t
 *

344 
	$uù_ds6_¥efix_add
(
uù_ùaddr_t
 *
ùaddr
, 
uöt8_t
 
ùaddæí
,

345 
öãrvÆ
)

347 if(
uù_ds6_li°_lo›


348 ((
uù_ds6_ñemít_t
 *)
uù_ds6_¥efix_li°
, 
UIP_DS6_PREFIX_NB
,

349 (
uù_ds6_¥efix_t
), 
ùaddr
, 
ùaddæí
,

350 (
uù_ds6_ñemít_t
 **)&
lo˝ªfix
Ë=
FREESPACE
) {

351 
lo˝ªfix
->
isu£d
 = 1;

352 
	`uù_ùaddr_c›y
(&
lo˝ªfix
->
ùaddr
, ipaddr);

353 
lo˝ªfix
->
Àngth
 = 
ùaddæí
;

354 if(
öãrvÆ
 != 0) {

355 
	`°imî_£t
(&(
lo˝ªfix
->
vli„time
), 
öãrvÆ
);

356 
lo˝ªfix
->
isöföôe
 = 0;

358 
lo˝ªfix
->
isöföôe
 = 1;

360 
	`PRINTF
("AddingÖrefix ");

361 
	`PRINT6ADDR
(&
lo˝ªfix
->
ùaddr
);

362 
	`PRINTF
("Àngth %u, vli„timê%lu\n", 
ùaddæí
, 
öãrvÆ
);

363  
lo˝ªfix
;

365  
NULL
;

366 
	}
}

371 
	$uù_ds6_¥efix_rm
(
uù_ds6_¥efix_t
 *
¥efix
)

373 if(
¥efix
 !
NULL
) {

374 
¥efix
->
isu£d
 = 0;

377 
	}
}

379 
uù_ds6_¥efix_t
 *

380 
	$uù_ds6_¥efix_lookup
(
uù_ùaddr_t
 *
ùaddr
, 
uöt8_t
 
ùaddæí
)

382 if(
	`uù_ds6_li°_lo›
((
uù_ds6_ñemít_t
 *)
uù_ds6_¥efix_li°
,

383 
UIP_DS6_PREFIX_NB
, (
uù_ds6_¥efix_t
),

384 
ùaddr
, 
ùaddæí
,

385 (
uù_ds6_ñemít_t
 **)&
lo˝ªfix
Ë=
FOUND
) {

386  
lo˝ªfix
;

388  
NULL
;

389 
	}
}

392 
uöt8_t


393 
	$uù_ds6_is_addr_⁄lök
(
uù_ùaddr_t
 *
ùaddr
)

395 
lo˝ªfix
 = 
uù_ds6_¥efix_li°
;

396 
lo˝ªfix
 < 
uù_ds6_¥efix_li°
 + 
UIP_DS6_PREFIX_NB
;Üocprefix++) {

397 if(
lo˝ªfix
->
isu£d
 &&

398 
	`uù_ùaddr_¥efixcmp
(&
lo˝ªfix
->
ùaddr
, i∑ddr,Üo˝ªfix->
Àngth
)) {

403 
	}
}

406 
uù_ds6_addr_t
 *

407 
	$uù_ds6_addr_add
(
uù_ùaddr_t
 *
ùaddr
, 
vli„time
, 
uöt8_t
 
ty≥
)

409 if(
uù_ds6_li°_lo›


410 ((
uù_ds6_ñemít_t
 *)
uù_ds6_if
.
addr_li°
, 
UIP_DS6_ADDR_NB
,

411 (
uù_ds6_addr_t
), 
ùaddr
, 128,

412 (
uù_ds6_ñemít_t
 **)&
loˇddr
Ë=
FREESPACE
) {

413 
loˇddr
->
isu£d
 = 1;

414 
	`uù_ùaddr_c›y
(&
loˇddr
->
ùaddr
, ipaddr);

415 
loˇddr
->
ty≥
 =Åype;

416 if(
vli„time
 == 0) {

417 
loˇddr
->
isöföôe
 = 1;

419 
loˇddr
->
isöföôe
 = 0;

420 
	`°imî_£t
(&(
loˇddr
->
vli„time
), vlifetime);

422 #i‡
UIP_ND6_DEF_MAXDADNS
 > 0

423 
loˇddr
->
°©e
 = 
ADDR_TENTATIVE
;

424 
	`timî_£t
(&
loˇddr
->
dadtimî
,

425 
	`øndom_ønd
(Ë% (
UIP_ND6_MAX_RTR_SOLICITATION_DELAY
 *

426 
CLOCK_SECOND
));

427 
loˇddr
->
dadnscou¡
 = 0;

429 
loˇddr
->
°©e
 = 
ADDR_PREFERRED
;

431 
	`uù_¸óã_sﬁicôed_node
(
ùaddr
, &
loc_fùaddr
);

432 
	`uù_ds6_maddr_add
(&
loc_fùaddr
);

433  
loˇddr
;

435  
NULL
;

436 
	}
}

441 #i‡
DUAL_RADIO


442 
uù_ds6_addr_t
 *

443 
	$uù_ds6_l⁄g_addr_add
(
uù_ùaddr_t
 *
ùaddr
, 
vli„time
, 
uöt8_t
 
ty≥
)

445 if(
uù_ds6_li°_lo›


446 ((
uù_ds6_ñemít_t
 *)
l⁄g_uù_ds6_if
.
addr_li°
, 
UIP_DS6_ADDR_NB
,

447 (
uù_ds6_addr_t
), 
ùaddr
, 128,

448 (
uù_ds6_ñemít_t
 **)&
loˇddr
Ë=
FREESPACE
) {

449 
loˇddr
->
isu£d
 = 1;

450 
	`uù_ùaddr_c›y
(&
loˇddr
->
ùaddr
, ipaddr);

451 
loˇddr
->
ty≥
 =Åype;

452 if(
vli„time
 == 0) {

453 
loˇddr
->
isöföôe
 = 1;

455 
loˇddr
->
isöföôe
 = 0;

456 
	`°imî_£t
(&(
loˇddr
->
vli„time
), vlifetime);

458 #i‡
UIP_ND6_DEF_MAXDADNS
 > 0

459 
loˇddr
->
°©e
 = 
ADDR_TENTATIVE
;

460 
	`timî_£t
(&
loˇddr
->
dadtimî
,

461 
	`øndom_ønd
(Ë% (
UIP_ND6_MAX_RTR_SOLICITATION_DELAY
 *

462 
CLOCK_SECOND
));

463 
loˇddr
->
dadnscou¡
 = 0;

465 
loˇddr
->
°©e
 = 
ADDR_PREFERRED
;

467 
	`uù_¸óã_sﬁicôed_node
(
ùaddr
, &
loc_fùaddr
);

468 
	`uù_ds6_maddr_add
(&
loc_fùaddr
);

469  
loˇddr
;

471  
NULL
;

472 
	}
}

476 
	$uù_ds6_addr_rm
(
uù_ds6_addr_t
 *
addr
)

478 if(
addr
 !
NULL
) {

479 
	`uù_¸óã_sﬁicôed_node
(&
addr
->
ùaddr
, &
loc_fùaddr
);

480 if((
locmaddr
 = 
	`uù_ds6_maddr_lookup
(&
loc_fùaddr
)Ë!
NULL
) {

481 
	`uù_ds6_maddr_rm
(
locmaddr
);

483 
addr
->
isu£d
 = 0;

486 
	}
}

489 
uù_ds6_addr_t
 *

490 
	$uù_ds6_addr_lookup
(
uù_ùaddr_t
 *
ùaddr
)

492 if(
uù_ds6_li°_lo›


493 ((
uù_ds6_ñemít_t
 *)
uù_ds6_if
.
addr_li°
, 
UIP_DS6_ADDR_NB
,

494 (
uù_ds6_addr_t
), 
ùaddr
, 128,

495 (
uù_ds6_ñemít_t
 **)&
loˇddr
Ë=
FOUND
) {

496  
loˇddr
;

498  
NULL
;

499 
	}
}

503 #i‡
DUAL_RADIO


504 
uù_ds6_addr_t
 *

505 
	$uù_ds6_l⁄g_addr_lookup
(
uù_ùaddr_t
 *
ùaddr
)

507 if(
uù_ds6_li°_lo›


508 ((
uù_ds6_ñemít_t
 *)
l⁄g_uù_ds6_if
.
addr_li°
, 
UIP_DS6_ADDR_NB
,

509 (
uù_ds6_addr_t
), 
ùaddr
, 128,

510 (
uù_ds6_ñemít_t
 **)&
loˇddr
Ë=
FOUND
) {

511  
loˇddr
;

513  
NULL
;

514 
	}
}

522 
uù_ds6_addr_t
 *

523 
	$uù_ds6_gë_lök_loˇl
(
öt8_t
 
°©e
)

525 
loˇddr
 = 
uù_ds6_if
.
addr_li°
;

526 
loˇddr
 < 
uù_ds6_if
.
addr_li°
 + 
UIP_DS6_ADDR_NB
;Üocaddr++) {

527 if(
loˇddr
->
isu£d
 && (
°©e
 == -1 ||Üocaddr->state == state)

528 && (
	`uù_is_addr_lökloˇl
(&
loˇddr
->
ùaddr
))) {

529  
loˇddr
;

532  
NULL
;

533 
	}
}

538 #i‡
DUAL_RADIO


539 
uù_ds6_addr_t
 *

540 
	$uù_ds6_l⁄g_gë_lök_loˇl
(
öt8_t
 
°©e
)

542 
loˇddr
 = 
l⁄g_uù_ds6_if
.
addr_li°
;

543 
loˇddr
 < 
l⁄g_uù_ds6_if
.
addr_li°
 + 
UIP_DS6_ADDR_NB
;Üocaddr++) {

544 if(
loˇddr
->
isu£d
 && (
°©e
 == -1 ||Üocaddr->state == state)

545 && (
	`uù_is_addr_lökloˇl
(&
loˇddr
->
ùaddr
))) {

546  
loˇddr
;

549  
NULL
;

550 
	}
}

559 
uù_ds6_addr_t
 *

560 
	$uù_ds6_gë_globÆ
(
öt8_t
 
°©e
)

562 
loˇddr
 = 
uù_ds6_if
.
addr_li°
;

563 
loˇddr
 < 
uù_ds6_if
.
addr_li°
 + 
UIP_DS6_ADDR_NB
;Üocaddr++) {

564 if(
loˇddr
->
isu£d
 && (
°©e
 == -1 ||Üocaddr->state == state)

565 && !(
	`uù_is_addr_lökloˇl
(&
loˇddr
->
ùaddr
))) {

566  
loˇddr
;

569  
NULL
;

570 
	}
}

574 #i‡
DUAL_RADIO


575 
uù_ds6_addr_t
 *

576 
	$uù_ds6_l⁄g_gë_globÆ
(
öt8_t
 
°©e
)

578 
loˇddr
 = 
l⁄g_uù_ds6_if
.
addr_li°
;

579 
loˇddr
 < 
l⁄g_uù_ds6_if
.
addr_li°
 + 
UIP_DS6_ADDR_NB
;Üocaddr++) {

580 if(
loˇddr
->
isu£d
 && (
°©e
 == -1 ||Üocaddr->state == state)

581 && !(
	`uù_is_addr_lökloˇl
(&
loˇddr
->
ùaddr
))) {

582  
loˇddr
;

585  
NULL
;

586 
	}
}

590 
uù_ds6_maddr_t
 *

591 
	$uù_ds6_maddr_add
(c⁄° 
uù_ùaddr_t
 *
ùaddr
)

593 if(
uù_ds6_li°_lo›


594 ((
uù_ds6_ñemít_t
 *)
uù_ds6_if
.
maddr_li°
, 
UIP_DS6_MADDR_NB
,

595 (
uù_ds6_maddr_t
), (*)
ùaddr
, 128,

596 (
uù_ds6_ñemít_t
 **)&
locmaddr
Ë=
FREESPACE
) {

597 
locmaddr
->
isu£d
 = 1;

598 
	`uù_ùaddr_c›y
(&
locmaddr
->
ùaddr
, ipaddr);

599  
locmaddr
;

601  
NULL
;

602 
	}
}

606 #i‡
DUAL_RADIO


607 
uù_ds6_maddr_t
 *

608 
	$uù_ds6_l⁄g_maddr_add
(c⁄° 
uù_ùaddr_t
 *
ùaddr
)

610 if(
uù_ds6_li°_lo›


611 ((
uù_ds6_ñemít_t
 *)
l⁄g_uù_ds6_if
.
maddr_li°
, 
UIP_DS6_MADDR_NB
,

612 (
uù_ds6_maddr_t
), (*)
ùaddr
, 128,

613 (
uù_ds6_ñemít_t
 **)&
locmaddr
Ë=
FREESPACE
) {

614 
locmaddr
->
isu£d
 = 1;

615 
	`uù_ùaddr_c›y
(&
locmaddr
->
ùaddr
, ipaddr);

616  
locmaddr
;

618  
NULL
;

619 
	}
}

624 
	$uù_ds6_maddr_rm
(
uù_ds6_maddr_t
 *
maddr
)

626 if(
maddr
 !
NULL
) {

627 
maddr
->
isu£d
 = 0;

630 
	}
}

633 
uù_ds6_maddr_t
 *

634 
	$uù_ds6_maddr_lookup
(c⁄° 
uù_ùaddr_t
 *
ùaddr
)

636 if(
uù_ds6_li°_lo›


637 ((
uù_ds6_ñemít_t
 *)
uù_ds6_if
.
maddr_li°
, 
UIP_DS6_MADDR_NB
,

638 (
uù_ds6_maddr_t
), (*)
ùaddr
, 128,

639 (
uù_ds6_ñemít_t
 **)&
locmaddr
Ë=
FOUND
) {

640  
locmaddr
;

642  
NULL
;

643 
	}
}

647 #i‡
DUAL_RADIO


648 
uù_ds6_maddr_t
 *

649 
	$uù_ds6_l⁄g_maddr_lookup
(c⁄° 
uù_ùaddr_t
 *
ùaddr
)

651 if(
uù_ds6_li°_lo›


652 ((
uù_ds6_ñemít_t
 *)
l⁄g_uù_ds6_if
.
maddr_li°
, 
UIP_DS6_MADDR_NB
,

653 (
uù_ds6_maddr_t
), (*)
ùaddr
, 128,

654 (
uù_ds6_ñemít_t
 **)&
locmaddr
Ë=
FOUND
) {

655  
locmaddr
;

657  
NULL
;

658 
	}
}

662 
uù_ds6_Øddr_t
 *

663 
	$uù_ds6_Øddr_add
(
uù_ùaddr_t
 *
ùaddr
)

665 #i‡
UIP_DS6_AADDR_NB


666 if(
uù_ds6_li°_lo›


667 ((
uù_ds6_ñemít_t
 *)
uù_ds6_if
.
Øddr_li°
, 
UIP_DS6_AADDR_NB
,

668 (
uù_ds6_Øddr_t
), 
ùaddr
, 128,

669 (
uù_ds6_ñemít_t
 **)&
loˇaddr
Ë=
FREESPACE
) {

670 
loˇaddr
->
isu£d
 = 1;

671 
	`uù_ùaddr_c›y
(&
loˇaddr
->
ùaddr
, ipaddr);

672  
loˇaddr
;

675  
NULL
;

676 
	}
}

680 #i‡
DUAL_RADIO


681 
uù_ds6_Øddr_t
 *

682 
	$uù_ds6_l⁄g_Øddr_add
(
uù_ùaddr_t
 *
ùaddr
)

684 #i‡
UIP_DS6_AADDR_NB


685 if(
uù_ds6_li°_lo›


686 ((
uù_ds6_ñemít_t
 *)
l⁄g_uù_ds6_if
.
Øddr_li°
, 
UIP_DS6_AADDR_NB
,

687 (
uù_ds6_Øddr_t
), 
ùaddr
, 128,

688 (
uù_ds6_ñemít_t
 **)&
loˇaddr
Ë=
FREESPACE
) {

689 
loˇaddr
->
isu£d
 = 1;

690 
	`uù_ùaddr_c›y
(&
loˇaddr
->
ùaddr
, ipaddr);

691  
loˇaddr
;

694  
NULL
;

695 
	}
}

700 
	$uù_ds6_Øddr_rm
(
uù_ds6_Øddr_t
 *
Øddr
)

702 if(
Øddr
 !
NULL
) {

703 
Øddr
->
isu£d
 = 0;

706 
	}
}

709 
uù_ds6_Øddr_t
 *

710 
	$uù_ds6_Øddr_lookup
(
uù_ùaddr_t
 *
ùaddr
)

712 #i‡
UIP_DS6_AADDR_NB


713 if(
	`uù_ds6_li°_lo›
((
uù_ds6_ñemít_t
 *)
uù_ds6_if
.
Øddr_li°
,

714 
UIP_DS6_AADDR_NB
, (
uù_ds6_Øddr_t
), 
ùaddr
, 128,

715 (
uù_ds6_ñemít_t
 **)&
loˇaddr
Ë=
FOUND
) {

716  
loˇaddr
;

719  
NULL
;

720 
	}
}

724 #i‡
DUAL_RADIO


725 
uù_ds6_Øddr_t
 *

726 
	$uù_ds6_l⁄g_Øddr_lookup
(
uù_ùaddr_t
 *
ùaddr
)

728 #i‡
UIP_DS6_AADDR_NB


729 if(
	`uù_ds6_li°_lo›
((
uù_ds6_ñemít_t
 *)
l⁄g_uù_ds6_if
.
Øddr_li°
,

730 
UIP_DS6_AADDR_NB
, (
uù_ds6_Øddr_t
), 
ùaddr
, 128,

731 (
uù_ds6_ñemít_t
 **)&
loˇaddr
Ë=
FOUND
) {

732  
loˇaddr
;

735  
NULL
;

736 
	}
}

741 
	$uù_ds6_£À˘_§c
(
uù_ùaddr_t
 *
§c
, uù_ùaddr_à*
d°
)

743 
uöt8_t
 
be°
 = 0;

744 
uöt8_t
 
n
 = 0;

745 
uù_ds6_addr_t
 *
m©chaddr
 = 
NULL
;

748 #i‡
DUAL_RADIO


749 if(
	`£ndög_ö_LR
(Ë=
LONG_RADIO
) {

750 if(!
	`uù_is_addr_lökloˇl
(
d°
Ë&& !
	`uù_is_addr_mˇ°
(dst)) {

752 
loˇddr
 = 
l⁄g_uù_ds6_if
.
addr_li°
;

753 
loˇddr
 < 
l⁄g_uù_ds6_if
.
addr_li°
 + 
UIP_DS6_ADDR_NB
;Üocaddr++) {

755 if(
loˇddr
->
isu£d
 &&Üoˇddr->
°©e
 =
ADDR_PREFERRED
 &&

756 !
	`uù_is_addr_lökloˇl
(&
loˇddr
->
ùaddr
)) {

757 
n
 = 
	`gë_m©ch_Àngth
(
d°
, &
loˇddr
->
ùaddr
);

758 if(
n
 >
be°
) {

759 
be°
 = 
n
;

760 
m©chaddr
 = 
loˇddr
;

764 #i‡
UIP_IPV6_MULTICAST


765 } if(
	`uù_is_addr_mˇ°_rouèbÀ
(
d°
)) {

766 
m©chaddr
 = 
	`uù_ds6_gë_globÆ
(
ADDR_PREFERRED
);

769 
m©chaddr
 = 
	`uù_ds6_l⁄g_gë_lök_loˇl
(
ADDR_PREFERRED
);

773 if(
m©chaddr
 =
NULL
) {

774 
	`uù_¸óã_un•ecifõd
(
§c
);

776 
	`uù_ùaddr_c›y
(
§c
, &
m©chaddr
->
ùaddr
);

778 
	`PRINTF
("Sendingá message withÅhe source ipaddr:");

779 
	`PRINT6ADDR
(
§c
);

780 
	`PRINTF
("\n");

784 if(!
	`uù_is_addr_lökloˇl
(
d°
Ë&& !
	`uù_is_addr_mˇ°
(dst)) {

787 
loˇddr
 = 
uù_ds6_if
.
addr_li°
;

788 
loˇddr
 < 
uù_ds6_if
.
addr_li°
 + 
UIP_DS6_ADDR_NB
;Üocaddr++) {

790 if(
loˇddr
->
isu£d
 &&Üoˇddr->
°©e
 =
ADDR_PREFERRED
 &&

791 !
	`uù_is_addr_lökloˇl
(&
loˇddr
->
ùaddr
)) {

792 
n
 = 
	`gë_m©ch_Àngth
(
d°
, &
loˇddr
->
ùaddr
);

793 if(
n
 >
be°
) {

794 
be°
 = 
n
;

795 
m©chaddr
 = 
loˇddr
;

799 #i‡
UIP_IPV6_MULTICAST


800 } if(
	`uù_is_addr_mˇ°_rouèbÀ
(
d°
)) {

801 
m©chaddr
 = 
	`uù_ds6_gë_globÆ
(
ADDR_PREFERRED
);

804 
m©chaddr
 = 
	`uù_ds6_gë_lök_loˇl
(
ADDR_PREFERRED
);

808 if(
m©chaddr
 =
NULL
) {

809 
	`uù_¸óã_un•ecifõd
(
§c
);

811 
	`uù_ùaddr_c›y
(
§c
, &
m©chaddr
->
ùaddr
);

813 
	`PRINTF
("Sendingá message withÅhe source ipaddr:");

814 
	`PRINT6ADDR
(
§c
);

815 
	`PRINTF
("\n");

817 #i‡
DUAL_RADIO


818 
	}
}

822 
	$uù_ds6_£t_addr_iid
(
uù_ùaddr_t
 *
ùaddr
, 
uù_Œaddr_t
 *
Œaddr
)

826 #i‡(
UIP_LLADDR_LEN
 == 8)

827 
	`mem˝y
(
ùaddr
->
u8
 + 8, 
Œaddr
, 
UIP_LLADDR_LEN
);

828 
ùaddr
->
u8
[8] ^= 0x02;

829 #ñi‡(
UIP_LLADDR_LEN
 == 6)

830 
	`mem˝y
(
ùaddr
->
u8
 + 8, 
Œaddr
, 3);

831 
ùaddr
->
u8
[11] = 0xff;

832 
ùaddr
->
u8
[12] = 0xfe;

833 
	`mem˝y
(
ùaddr
->
u8
 + 13, (
uöt8_t
 *)
Œaddr
 + 3, 3);

834 
ùaddr
->
u8
[8] ^= 0x02;

836 #îr‹ 
uù
-
ds6
.
c
 
ˇ¬Ÿ
 
buûd
 
öãrÁ˚
 
addªss
 
whí
 
UIP_LLADDR_LEN
 
is
 
nŸ
 6 
‹
 8

838 
	}
}

841 
uöt8_t


842 
	$gë_m©ch_Àngth
(
uù_ùaddr_t
 *
§c
, uù_ùaddr_à*
d°
)

844 
uöt8_t
 
j
, 
k
, 
x_‹
;

845 
uöt8_t
 
Àn
 = 0;

847 
j
 = 0; j < 16; j++) {

848 if(
§c
->
u8
[
j
] =
d°
->u8[j]) {

849 
Àn
 += 8;

851 
x_‹
 = 
§c
->
u8
[
j
] ^ 
d°
->u8[j];

852 
k
 = 0; k < 8; k++) {

853 if((
x_‹
 & 0x80) == 0) {

854 
Àn
++;

855 
x_‹
 <<= 1;

863  
Àn
;

864 
	}
}

867 #i‡
UIP_ND6_DEF_MAXDADNS
 > 0

869 
	$uù_ds6_dad
(
uù_ds6_addr_t
 *
addr
)

872 if(
addr
->
dadnscou¡
 < 
uù_ds6_if
.
maxdadns
) {

873 
	`uù_nd6_ns_ouçut
(
NULL
, NULL, &
addr
->
ùaddr
);

874 
addr
->
dadnscou¡
++;

875 
	`timî_£t
(&
addr
->
dadtimî
,

876 
uù_ds6_if
.
ªå™s_timî
 / 1000 * 
CLOCK_SECOND
);

883 
	`PRINTF
("DAD succeeded, ipaddr: ");

884 
	`PRINT6ADDR
(&
addr
->
ùaddr
);

885 
	`PRINTF
("\n");

887 
addr
->
°©e
 = 
ADDR_PREFERRED
;

889 
	}
}

897 
	$uù_ds6_dad_Áûed
(
uù_ds6_addr_t
 *
addr
)

899 if(
	`uù_is_addr_lökloˇl
(&
addr
->
ùaddr
)) {

900 
	`PRINTF
("Contiki shutdown, DAD forÜinkÜocaláddress failed\n");

903 
	`uù_ds6_addr_rm
(
addr
);

905 
	}
}

909 #i‡
UIP_CONF_ROUTER


910 #i‡
UIP_ND6_SEND_RA


912 
	$uù_ds6_£nd_ø_sﬁlicôed
()

920 
ønd_time
 = 0;

921 
	`PRINTF
("Sﬁicôed RA,Ñ™domÅimê%u\n", 
ønd_time
);

923 if(
	`°imî_ªmaöög
(&
uù_ds6_timî_ø
Ë> 
ønd_time
) {

924 if(
	`°imî_ñ≠£d
(&
uù_ds6_timî_ø
Ë< 
UIP_ND6_MIN_DELAY_BETWEEN_RAS
) {

930 
	`°imî_£t
(&
uù_ds6_timî_ø
, 
ønd_time
);

933 
	}
}

937 
	$uù_ds6_£nd_ø_≥riodic
()

939 if(
øcou¡
 > 0) {

941 
	`uù_nd6_ø_ouçut
(
NULL
);

942 
	`PRINTF
("SendingÖeriodic RA\n");

945 
ønd_time
 = 
UIP_ND6_MIN_RA_INTERVAL
 + 
	`øndom_ønd
() %

946 (
uöt16_t
Ë(
UIP_ND6_MAX_RA_INTERVAL
 - 
UIP_ND6_MIN_RA_INTERVAL
);

947 
	`PRINTF
("R™domÅimê1 = %u\n", 
ønd_time
);

949 if(
øcou¡
 < 
UIP_ND6_MAX_INITIAL_RAS
) {

950 if(
ønd_time
 > 
UIP_ND6_MAX_INITIAL_RA_INTERVAL
) {

951 
ønd_time
 = 
UIP_ND6_MAX_INITIAL_RA_INTERVAL
;

952 
	`PRINTF
("R™domÅimê2 = %u\n", 
ønd_time
);

954 
øcou¡
++;

956 
	`PRINTF
("R™domÅimê3 = %u\n", 
ønd_time
);

957 
	`°imî_£t
(&
uù_ds6_timî_ø
, 
ønd_time
);

958 
	}
}

964 
	$uù_ds6_£nd_rs
()

966 if((
	`uù_ds6_de‰t_choo£
(Ë=
NULL
)

967 && (
rscou¡
 < 
UIP_ND6_MAX_RTR_SOLICITATIONS
)) {

968 
	`PRINTF
("Sídög RS %u\n", 
rscou¡
);

969 
	`uù_nd6_rs_ouçut
();

970 
rscou¡
++;

971 
	`ëimî_£t
(&
uù_ds6_timî_rs
,

972 
UIP_ND6_RTR_SOLICITATION_INTERVAL
 * 
CLOCK_SECOND
);

974 
	`PRINTF
("Router found ? (boolean): %u\n",

975 (
	`uù_ds6_de‰t_choo£
(Ë!
NULL
));

976 
	`ëimî_°›
(&
uù_ds6_timî_rs
);

979 
	}
}

983 
uöt32_t


984 
	$uù_ds6_compuã_ªachabÀ_time
()

986  (
uöt32_t
Ë(
UIP_ND6_MIN_RANDOM_FACTOR


987 (
uù_ds6_if
.
ba£_ªachabÀ_time
)) +

988 ((
uöt16_t
Ë(
	`øndom_ønd
() << 8) +

989 (
uöt16_t
Ë
	`øndom_ønd
()) %

990 (
uöt32_t
Ë(
	`UIP_ND6_MAX_RANDOM_FACTOR
(
uù_ds6_if
.
ba£_ªachabÀ_time
) -

991 
	`UIP_ND6_MIN_RANDOM_FACTOR
(
uù_ds6_if
.
ba£_ªachabÀ_time
));

992 
	}
}

	@uip-ds6.h

42 #i‚de‡
UIP_DS6_H_


43 
	#UIP_DS6_H_


	)

45 
	~"√t/ù/uù.h
"

46 
	~"sys/°imî.h
"

48 
	~"√t/ùv6/uù-nd6.h
"

49 
	~"√t/ùv6/uù-ds6-rouã.h
"

50 
	~"√t/ùv6/uù-ds6-nbr.h
"

62 
	#UIP_DS6_DEFRT_NBS
 0

	)

63 #i‚de‡
UIP_CONF_DS6_DEFRT_NBU


64 
	#UIP_DS6_DEFRT_NBU
 2

	)

66 
	#UIP_DS6_DEFRT_NBU
 
UIP_CONF_DS6_DEFRT_NBU


	)

68 
	#UIP_DS6_DEFRT_NB
 
UIP_DS6_DEFRT_NBS
 + 
UIP_DS6_DEFRT_NBU


	)

71 #ifde‡
UIP_CONF_DS6_DEFAULT_PREFIX


72 
	#UIP_DS6_DEFAULT_PREFIX
 
UIP_CONF_DS6_DEFAULT_PREFIX


	)

94 
	#UIP_DS6_DEFAULT_PREFIX
 0xfd00

	)

97 
	#UIP_DS6_DEFAULT_PREFIX_0
 ((
UIP_DS6_DEFAULT_PREFIX
 >> 8Ë& 0xff)

	)

98 
	#UIP_DS6_DEFAULT_PREFIX_1
 (
UIP_DS6_DEFAULT_PREFIX
 & 0xff)

	)

101 
	#UIP_DS6_PREFIX_NBS
 1

	)

102 #i‚de‡
UIP_CONF_DS6_PREFIX_NBU


103 
	#UIP_DS6_PREFIX_NBU
 2

	)

105 
	#UIP_DS6_PREFIX_NBU
 
UIP_CONF_DS6_PREFIX_NBU


	)

107 
	#UIP_DS6_PREFIX_NB
 
UIP_DS6_PREFIX_NBS
 + 
UIP_DS6_PREFIX_NBU


	)

110 
	#UIP_DS6_ADDR_NBS
 1

	)

111 #i‚de‡
UIP_CONF_DS6_ADDR_NBU


112 
	#UIP_DS6_ADDR_NBU
 2

	)

114 
	#UIP_DS6_ADDR_NBU
 
UIP_CONF_DS6_ADDR_NBU


	)

116 
	#UIP_DS6_ADDR_NB
 
UIP_DS6_ADDR_NBS
 + 
UIP_DS6_ADDR_NBU


	)

119 #i‡
UIP_CONF_ROUTER


120 
	#UIP_DS6_MADDR_NBS
 2 + 
UIP_DS6_ADDR_NB


	)

122 
	#UIP_DS6_MADDR_NBS
 1 + 
UIP_DS6_ADDR_NB


	)

124 #i‚de‡
UIP_CONF_DS6_MADDR_NBU


125 
	#UIP_DS6_MADDR_NBU
 0

	)

127 
	#UIP_DS6_MADDR_NBU
 
UIP_CONF_DS6_MADDR_NBU


	)

129 
	#UIP_DS6_MADDR_NB
 
UIP_DS6_MADDR_NBS
 + 
UIP_DS6_MADDR_NBU


	)

132 #i‡
UIP_CONF_ROUTER


133 
	#UIP_DS6_AADDR_NBS
 
UIP_DS6_PREFIX_NB
 - 1

	)

135 
	#UIP_DS6_AADDR_NBS
 0

	)

137 #i‚de‡
UIP_CONF_DS6_AADDR_NBU


138 
	#UIP_DS6_AADDR_NBU
 0

	)

140 
	#UIP_DS6_AADDR_NBU
 
UIP_CONF_DS6_AADDR_NBU


	)

142 
	#UIP_DS6_AADDR_NB
 
UIP_DS6_AADDR_NBS
 + 
UIP_DS6_AADDR_NBU


	)

146 #i‚de‡
UIP_CONF_DS6_LL_NUD


147 
	#UIP_DS6_LL_NUD
 0

	)

149 
	#UIP_DS6_LL_NUD
 
UIP_CONF_DS6_LL_NUD


	)

153 
	#ADDR_TENTATIVE
 0

	)

154 
	#ADDR_PREFERRED
 1

	)

155 
	#ADDR_DEPRECATED
 2

	)

158 
	#ADDR_ANYTYPE
 0

	)

159 
	#ADDR_AUTOCONF
 1

	)

160 
	#ADDR_DHCP
 2

	)

161 
	#ADDR_MANUAL
 3

	)

165 #i‚de‡
UIP_DS6_CONF_PERIOD


166 
	#UIP_DS6_PERIOD
 (
CLOCK_SECOND
/10)

	)

168 
	#UIP_DS6_PERIOD
 
UIP_DS6_CONF_PERIOD


	)

171 
	#FOUND
 0

	)

172 
	#FREESPACE
 1

	)

173 
	#NOSPACE
 2

	)

176 #i‡
UIP_CONF_IPV6_QUEUE_PKT


177 
	~"√t/ù/uù-∑ckëqueue.h
"

181 #i‡
UIP_CONF_ROUTER


182 
	suù_ds6_¥efix
 {

183 
uöt8_t
 
	misu£d
;

184 
uù_ùaddr_t
 
	mùaddr
;

185 
uöt8_t
 
	mÀngth
;

186 
uöt8_t
 
	madvîti£
;

187 
uöt32_t
 
	mvli„time
;

188 
uöt32_t
 
	m∂i„time
;

189 
uöt8_t
 
	ml_a_ª£rved
;

190 } 
	tuù_ds6_¥efix_t
;

192 
	suù_ds6_¥efix
 {

193 
uöt8_t
 
	misu£d
;

194 
uù_ùaddr_t
 
	mùaddr
;

195 
uöt8_t
 
	mÀngth
;

196 
°imî
 
	mvli„time
;

197 
uöt8_t
 
	misöföôe
;

198 } 
	tuù_ds6_¥efix_t
;

202 
	suù_ds6_addr
 {

203 
uöt8_t
 
	misu£d
;

204 
uù_ùaddr_t
 
	mùaddr
;

205 
uöt8_t
 
	m°©e
;

206 
uöt8_t
 
	mty≥
;

207 
uöt8_t
 
	misöföôe
;

208 
°imî
 
	mvli„time
;

209 #i‡
UIP_ND6_DEF_MAXDADNS
 > 0

210 
timî
 
	mdadtimî
;

211 
uöt8_t
 
	mdadnscou¡
;

213 } 
	tuù_ds6_addr_t
;

216 
	suù_ds6_Øddr
 {

217 
uöt8_t
 
	misu£d
;

218 
uù_ùaddr_t
 
	mùaddr
;

219 } 
	tuù_ds6_Øddr_t
;

222 
	suù_ds6_maddr
 {

223 
uöt8_t
 
	misu£d
;

224 
uù_ùaddr_t
 
	mùaddr
;

225 } 
	tuù_ds6_maddr_t
;

232 #i‡
UIP_CONF_IPV6_RPL


233 #i‚de‡
UIP_CONF_DS6_NEIGHBOR_STATE_CHANGED


234 
	#UIP_CONF_DS6_NEIGHBOR_STATE_CHANGED
 
Ωl_ùv6_√ighb‹_ˇŒback


	)

238 #i‡
UIP_CONF_IPV6_RPL


239 #i‚de‡
UIP_CONF_DS6_LINK_NEIGHBOR_CALLBACK


240 
	#UIP_CONF_DS6_LINK_NEIGHBOR_CALLBACK
 
Ωl_lök_√ighb‹_ˇŒback


	)

246 
	suù_ds6_√tif
 {

247 
uöt32_t
 
	mlök_mtu
;

248 
uöt8_t
 
	mcur_h›_limô
;

249 
uöt32_t
 
	mba£_ªachabÀ_time
;

250 
uöt32_t
 
	mªachabÀ_time
;

251 
uöt32_t
 
	mªå™s_timî
;

252 
uöt8_t
 
	mmaxdadns
;

253 #i‡
UIP_DS6_ADDR_NB


254 
uù_ds6_addr_t
 
	maddr_li°
[
UIP_DS6_ADDR_NB
];

256 #i‡
UIP_DS6_AADDR_NB


257 
uù_ds6_Øddr_t
 
	mØddr_li°
[
UIP_DS6_AADDR_NB
];

259 #i‡
UIP_DS6_MADDR_NB


260 
uù_ds6_maddr_t
 
	mmaddr_li°
[
UIP_DS6_MADDR_NB
];

262 } 
	tuù_ds6_√tif_t
;

265 
	suù_ds6_ñemít
 {

266 
uöt8_t
 
	misu£d
;

267 
uù_ùaddr_t
 
	mùaddr
;

268 } 
	tuù_ds6_ñemít_t
;

272 
uù_ds6_√tif_t
 
uù_ds6_if
;

273 #i‡
DUAL_RADIO


274 
uù_ds6_√tif_t
 
l⁄g_uù_ds6_if
;

278 
ëimî
 
uù_ds6_timî_≥riodic
;

280 #i‡
UIP_CONF_ROUTER


281 
uù_ds6_¥efix_t
 
uù_ds6_¥efix_li°
[
UIP_DS6_PREFIX_NB
];

283 
ëimî
 
uù_ds6_timî_rs
;

289 
uù_ds6_öô
();

292 
uù_ds6_≥riodic
();

296 
uöt8_t
 
uù_ds6_li°_lo›
(
uù_ds6_ñemít_t
 *
li°
, uöt8_à
size
,

297 
uöt16_t
 
ñemítsize
, 
uù_ùaddr_t
 *
ùaddr
,

298 
uöt8_t
 
ùaddæí
,

299 
uù_ds6_ñemít_t
 **
out_ñemít
);

306 #i‡
UIP_CONF_ROUTER


307 
uù_ds6_¥efix_t
 *
uù_ds6_¥efix_add
(
uù_ùaddr_t
 *
ùaddr
, 
uöt8_t
 
Àngth
,

308 
uöt8_t
 
advîti£
, uöt8_à
Êags
,

309 
vtime
,

310 
±ime
);

312 
uù_ds6_¥efix_t
 *
uù_ds6_¥efix_add
(
uù_ùaddr_t
 *
ùaddr
, 
uöt8_t
 
Àngth
,

313 
öãrvÆ
);

315 
uù_ds6_¥efix_rm
(
uù_ds6_¥efix_t
 *
¥efix
);

316 
uù_ds6_¥efix_t
 *
uù_ds6_¥efix_lookup
(
uù_ùaddr_t
 *
ùaddr
,

317 
uöt8_t
 
ùaddæí
);

318 
uöt8_t
 
uù_ds6_is_addr_⁄lök
(
uù_ùaddr_t
 *
ùaddr
);

325 
uù_ds6_addr_t
 *
uù_ds6_addr_add
(
uù_ùaddr_t
 *
ùaddr
,

326 
vli„time
, 
uöt8_t
 
ty≥
);

327 
uù_ds6_addr_rm
(
uù_ds6_addr_t
 *
addr
);

328 
uù_ds6_addr_t
 *
uù_ds6_addr_lookup
(
uù_ùaddr_t
 *
ùaddr
);

329 
uù_ds6_addr_t
 *
uù_ds6_gë_lök_loˇl
(
öt8_t
 
°©e
);

330 
uù_ds6_addr_t
 *
uù_ds6_gë_globÆ
(
öt8_t
 
°©e
);

336 
uù_ds6_maddr_t
 *
uù_ds6_maddr_add
(c⁄° 
uù_ùaddr_t
 *
ùaddr
);

337 
uù_ds6_maddr_rm
(
uù_ds6_maddr_t
 *
maddr
);

338 
uù_ds6_maddr_t
 *
uù_ds6_maddr_lookup
(c⁄° 
uù_ùaddr_t
 *
ùaddr
);

344 
uù_ds6_Øddr_t
 *
uù_ds6_Øddr_add
(
uù_ùaddr_t
 *
ùaddr
);

345 
uù_ds6_Øddr_rm
(
uù_ds6_Øddr_t
 *
Øddr
);

346 
uù_ds6_Øddr_t
 *
uù_ds6_Øddr_lookup
(
uù_ùaddr_t
 *
ùaddr
);

352 
uù_ds6_£t_addr_iid
(
uù_ùaddr_t
 *
ùaddr
, 
uù_Œaddr_t
 *
Œaddr
);

355 
uöt8_t
 
gë_m©ch_Àngth
(
uù_ùaddr_t
 *
§c
, uù_ùaddr_à*
d°
);

357 #i‡
UIP_ND6_DEF_MAXDADNS
 >0

359 
uù_ds6_dad
(
uù_ds6_addr_t
 *
iÁddr
);

362 
uù_ds6_dad_Áûed
(
uù_ds6_addr_t
 *
iÁddr
);

366 
uù_ds6_£À˘_§c
(
uù_ùaddr_t
 *
§c
, uù_ùaddr_à*
d°
);

368 #i‡
UIP_CONF_ROUTER


369 #i‡
UIP_ND6_SEND_RA


371 
uù_ds6_£nd_ø_sﬁlicôed
();

374 
uù_ds6_£nd_ø_≥riodic
();

378 
uù_ds6_£nd_rs
();

382 
uöt32_t
 
uù_ds6_compuã_ªachabÀ_time
();

386 
	#uù_ds6_is_my_addr
(
addr
Ë(
	`uù_ds6_addr_lookup
◊ddrË!
NULL
)

	)

387 
	#uù_ds6_is_my_maddr
(
addr
Ë(
	`uù_ds6_maddr_lookup
◊ddrË!
NULL
)

	)

388 
	#uù_ds6_is_my_Øddr
(
addr
Ë(
	`uù_ds6_Øddr_lookup
◊ddrË!
NULL
)

	)

396 #i‡
DUAL_RADIO


400 
uù_ds6_addr_t
 *
uù_ds6_l⁄g_addr_add
(
uù_ùaddr_t
 *
ùaddr
,

401 
vli„time
, 
uöt8_t
 
ty≥
);

402 
uù_ds6_addr_t
 *
uù_ds6_l⁄g_addr_lookup
(
uù_ùaddr_t
 *
ùaddr
);

403 
uù_ds6_addr_t
 *
uù_ds6_l⁄g_gë_lök_loˇl
(
öt8_t
 
°©e
);

404 
uù_ds6_addr_t
 *
uù_ds6_l⁄g_gë_globÆ
(
öt8_t
 
°©e
);

410 
uù_ds6_maddr_t
 *
uù_ds6_l⁄g_maddr_add
(c⁄° 
uù_ùaddr_t
 *
ùaddr
);

412 
uù_ds6_maddr_t
 *
uù_ds6_l⁄g_maddr_lookup
(c⁄° 
uù_ùaddr_t
 *
ùaddr
);

418 
uù_ds6_Øddr_t
 *
uù_ds6_l⁄g_Øddr_add
(
uù_ùaddr_t
 *
ùaddr
);

419 
uù_ds6_Øddr_t
 *
uù_ds6_l⁄g_Øddr_lookup
(
uù_ùaddr_t
 *
ùaddr
);

425 
	#uù_ds6_l⁄g_is_my_addr
(
addr
Ë(
	`uù_ds6_l⁄g_addr_lookup
◊ddrË!
NULL
)

	)

426 
	#uù_ds6_l⁄g_is_my_maddr
(
addr
Ë(
	`uù_ds6_l⁄g_maddr_lookup
◊ddrË!
NULL
)

	)

427 
	#uù_ds6_l⁄g_is_my_Øddr
(
addr
Ë(
	`uù_ds6_l⁄g_Øddr_lookup
◊ddrË!
NULL
)

	)

	@uip-icmp6.c

45 
	~<°rög.h
>

46 
	~"√t/ùv6/uù-ds6.h
"

47 
	~"√t/ùv6/uù-icmp6.h
"

48 
	~"c⁄tiki-deÁu…-c⁄f.h
"

50 
	~"ùv6_debug.h
"

51 
	#DEBUG
 
DEBUG_UIP_ICMP6


	)

54 #i‡
ANA_UIP_ICMP6


55 
	#ANA
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

57 
	#ANA
(...)

	)

60 #i‡
DEBUG


61 
	~<°dio.h
>

62 
	#PRINTF
(...Ë
	`¥ötf
(
__VA_ARGS__
)

	)

63 
	#PRINT6ADDR
(
addr
Ë
	`PRINTF
(" %02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x ", ((
uöt8_t
 *Ôddr)[0], ((uöt8_à*Ôddr)[1], ((uöt8_à*Ôddr)[2], ((uöt8_à*Ôddr)[3], ((uöt8_à*Ôddr)[4], ((uöt8_à*Ôddr)[5], ((uöt8_à*Ôddr)[6], ((uöt8_à*Ôddr)[7], ((uöt8_à*Ôddr)[8], ((uöt8_à*Ôddr)[9], ((uöt8_à*Ôddr)[10], ((uöt8_à*Ôddr)[11], ((uöt8_à*Ôddr)[12], ((uöt8_à*Ôddr)[13], ((uöt8_à*Ôddr)[14], ((uöt8_à*Ôddr)[15])

	)

64 
	#PRINTLLADDR
(
Œaddr
Ë
	`PRINTF
(" %02x:%02x:%02x:%02x:%02x:%02x ",Œaddr->
addr
[0],Üœddr->addr[1],Üœddr->addr[2],Üœddr->addr[3],Œaddr->addr[4],Üœddr->addr[5])

	)

66 
	#PRINTF
(...)

	)

67 
	#PRINT6ADDR
(
addr
)

	)

70 
	#UIP_IP_BUF
 ((
uù_ù_hdr
 *)&
uù_buf
[
UIP_LLH_LEN
])

	)

71 
	#UIP_ICMP_BUF
 ((
uù_icmp_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
])

	)

72 
	#UIP_ICMP6_ERROR_BUF
 ((
uù_icmp6_îr‹
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
])

	)

73 
	#UIP_EXT_BUF
 ((
uù_ext_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
])

	)

74 
	#UIP_FIRST_EXT_BUF
 ((
uù_ext_hdr
 *)&
uù_buf
[
UIP_LLIPH_LEN
])

	)

76 #i‡
UIP_CONF_IPV6_RPL


77 
	~"Ωl/Ωl.h
"

81 
uù_ùaddr_t
 
	gtmp_ùaddr
;

83 
LIST
(
echo_ª∂y_ˇŒback_li°
);

86 
LIST
(
öput_h™dÀr_li°
);

88 
uù_icmp6_öput_h™dÀr_t
 *

89 
	$öput_h™dÀr_lookup
(
uöt8_t
 
ty≥
, uöt8_à
icode
)

91 
uù_icmp6_öput_h™dÀr_t
 *
h™dÀr
 = 
NULL
;

93 
h™dÀr
 = 
	`li°_hód
(
öput_h™dÀr_li°
);

94 
h™dÀr
 !
NULL
;

95 
h™dÀr
 = 
	`li°_ôem_√xt
(handler)) {

96 if(
h™dÀr
->
ty≥
 ==Åype &&

97 (
h™dÀr
->
icode
 == icode ||

98 
h™dÀr
->
icode
 =
UIP_ICMP6_HANDLER_CODE_ANY
)) {

99  
h™dÀr
;

103  
NULL
;

104 
	}
}

106 
uöt8_t


107 
	$uù_icmp6_öput
(
uöt8_t
 
ty≥
, uöt8_à
icode
)

109 
uù_icmp6_öput_h™dÀr_t
 *
h™dÀr
 = 
	`öput_h™dÀr_lookup
(
ty≥
, 
icode
);

111 if(
h™dÀr
 =
NULL
) {

112  
UIP_ICMP6_INPUT_ERROR
;

115 if(
h™dÀr
->h™dÀ∏=
NULL
) {

116  
UIP_ICMP6_INPUT_ERROR
;

119 
h™dÀr
->
	`h™dÀr
();

120  
UIP_ICMP6_INPUT_SUCCESS
;

121 
	}
}

124 
	$uù_icmp6_ªgi°î_öput_h™dÀr
(
uù_icmp6_öput_h™dÀr_t
 *
h™dÀr
)

126 
	`li°_add
(
öput_h™dÀr_li°
, 
h™dÀr
);

127 
	}
}

130 
	$echo_ªque°_öput
()

132 #i‡
UIP_CONF_IPV6_RPL


133 
uöt8_t
 
ãmp_ext_Àn
;

140 
	`PRINTF
("Received Echo Request from ");

141 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

142 
	`PRINTF
("Åo ");

143 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

144 
	`PRINTF
("\n");

147 
UIP_IP_BUF
->
âl
 = 
uù_ds6_if
.
cur_h›_limô
;

149 if(
	`uù_is_addr_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
)){

150 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, &UIP_IP_BUF->
§cùaddr
);

151 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

153 
	`uù_ùaddr_c›y
(&
tmp_ùaddr
, &
UIP_IP_BUF
->
§cùaddr
);

154 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

155 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, &
tmp_ùaddr
);

158 if(
uù_ext_Àn
 > 0) {

159 #i‡
UIP_CONF_IPV6_RPL


160 if((
ãmp_ext_Àn
 = 
	`Ωl_övît_hódî
())) {

162 
UIP_FIRST_EXT_BUF
->
√xt
 = 
UIP_PROTO_ICMP6
;

163 i‡(
uù_ext_Àn
 !
ãmp_ext_Àn
) {

164 
uù_Àn
 -(
uù_ext_Àn
 - 
ãmp_ext_Àn
);

165 
UIP_IP_BUF
->
Àn
[0] = ((
uù_Àn
 - 
UIP_IPH_LEN
) >> 8);

166 
UIP_IP_BUF
->
Àn
[1] = ((
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff);

172 
	`memmove
((
uöt8_t
 *)
UIP_ICMP_BUF
 + 
UIP_ICMPH_LEN
 - (
uù_ext_Àn
 - 
ãmp_ext_Àn
),

173 (
uöt8_t
 *)
UIP_ICMP_BUF
 + 
UIP_ICMPH_LEN
,

174 (
uù_Àn
 - 
UIP_IPH_LEN
 - 
ãmp_ext_Àn
 - 
UIP_ICMPH_LEN
));

176 
uù_ext_Àn
 = 
ãmp_ext_Àn
;

180 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_ICMP6
;

181 
uù_Àn
 -
uù_ext_Àn
;

182 
UIP_IP_BUF
->
Àn
[0] = ((
uù_Àn
 - 
UIP_IPH_LEN
) >> 8);

183 
UIP_IP_BUF
->
Àn
[1] = ((
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff);

189 
	`memmove
((
uöt8_t
 *)
UIP_ICMP_BUF
 + 
UIP_ICMPH_LEN
 - 
uù_ext_Àn
,

190 (
uöt8_t
 *)
UIP_ICMP_BUF
 + 
UIP_ICMPH_LEN
,

191 (
uù_Àn
 - 
UIP_IPH_LEN
 - 
UIP_ICMPH_LEN
));

192 
uù_ext_Àn
 = 0;

193 #i‡
UIP_CONF_IPV6_RPL


202 
UIP_ICMP_BUF
->
ty≥
 = 
ICMP6_ECHO_REPLY
;

203 
UIP_ICMP_BUF
->
icode
 = 0;

204 
UIP_ICMP_BUF
->
icmpchksum
 = 0;

205 
UIP_ICMP_BUF
->
icmpchksum
 = ~
	`uù_icmp6chksum
();

207 
	`PRINTF
("Sending Echo ReplyÅo ");

208 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

209 
	`PRINTF
(" from ");

210 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

211 
	`PRINTF
("\n");

212 
	`UIP_STAT
(++
uù_°©
.
icmp
.
£¡
);

214 
	}
}

217 
	$uù_icmp6_îr‹_ouçut
(
uöt8_t
 
ty≥
, uöt8_à
code
, 
uöt32_t
 
∑øm
) {

219 if(
uù_ext_Àn
) {

220 if(
UIP_EXT_BUF
->
√xt
 =
UIP_PROTO_ICMP6
 && 
UIP_ICMP_BUF
->
ty≥
 < 128) {

221 
	`uù_˛ór_buf
();

225 if(
UIP_IP_BUF
->
¥Ÿo
 =
UIP_PROTO_ICMP6
 && 
UIP_ICMP_BUF
->
ty≥
 < 128) {

226 
	`uù_˛ór_buf
();

231 #i‡
UIP_CONF_IPV6_RPL


232 
	`Ωl_ªmove_hódî
();

234 
uù_ext_Àn
 = 0;

238 
	`uù_ùaddr_c›y
(&
tmp_ùaddr
, &
UIP_IP_BUF
->
de°ùaddr
);

240 
uù_Àn
 +
UIP_IPICMPH_LEN
 + 
UIP_ICMP6_ERROR_LEN
;

242 if(
uù_Àn
 > 
UIP_LINK_MTU
) {

243 
uù_Àn
 = 
UIP_LINK_MTU
;

246 
	`memmove
((
uöt8_t
 *)
UIP_ICMP6_ERROR_BUF
 + 
uù_ext_Àn
 + 
UIP_ICMP6_ERROR_LEN
,

247 (*)
UIP_IP_BUF
, 
uù_Àn
 - 
UIP_IPICMPH_LEN
 - 
uù_ext_Àn
 - 
UIP_ICMP6_ERROR_LEN
);

249 
UIP_IP_BUF
->
vtc
 = 0x60;

250 
UIP_IP_BUF
->
tcÊow
 = 0;

251 
UIP_IP_BUF
->
Êow
 = 0;

252 i‡(
uù_ext_Àn
) {

253 
UIP_FIRST_EXT_BUF
->
√xt
 = 
UIP_PROTO_ICMP6
;

255 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_ICMP6
;

257 
UIP_IP_BUF
->
âl
 = 
uù_ds6_if
.
cur_h›_limô
;

261 if(
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)){

262 
	`uù_˛ór_buf
();

266 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, &UIP_IP_BUF->
§cùaddr
);

268 if(
	`uù_is_addr_mˇ°
(&
tmp_ùaddr
)){

269 if(
ty≥
 =
ICMP6_PARAM_PROB
 && 
code
 =
ICMP6_PARAMPROB_OPTION
){

270 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &
tmp_ùaddr
);

272 
	`uù_˛ór_buf
();

276 #i‡
UIP_CONF_ROUTER


278 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &
tmp_ùaddr
);

280 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
§cùaddr
, &
tmp_ùaddr
);

284 
UIP_ICMP_BUF
->
ty≥
 =Åype;

285 
UIP_ICMP_BUF
->
icode
 = 
code
;

286 
UIP_ICMP6_ERROR_BUF
->
∑øm
 = 
	`uù_ht⁄l
(param);

287 
UIP_IP_BUF
->
Àn
[0] = ((
uù_Àn
 - 
UIP_IPH_LEN
) >> 8);

288 
UIP_IP_BUF
->
Àn
[1] = ((
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff);

289 
UIP_ICMP_BUF
->
icmpchksum
 = 0;

290 
UIP_ICMP_BUF
->
icmpchksum
 = ~
	`uù_icmp6chksum
();

292 #i‡
UIP_CONF_IPV6_RPL


293 
	`Ωl_ö£π_hódî
();

296 
	`UIP_STAT
(++
uù_°©
.
icmp
.
£¡
);

298 
	`PRINTF
("Sídög ICMPv6 ERROR mesßgêty≥ %d codê%dÅÿ", 
ty≥
, 
code
);

299 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

300 
	`PRINTF
(" from ");

301 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

302 
	`PRINTF
("\n");

304 
	}
}

308 
	$uù_icmp6_£nd
(c⁄° 
uù_ùaddr_t
 *
de°
, 
ty≥
, 
code
, 
∑ylﬂd_Àn
)

311 
UIP_IP_BUF
->
vtc
 = 0x60;

312 
UIP_IP_BUF
->
tcÊow
 = 0;

313 
UIP_IP_BUF
->
Êow
 = 0;

314 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_ICMP6
;

315 
UIP_IP_BUF
->
âl
 = 
uù_ds6_if
.
cur_h›_limô
;

316 
UIP_IP_BUF
->
Àn
[0] = (
UIP_ICMPH_LEN
 + 
∑ylﬂd_Àn
) >> 8;

317 
UIP_IP_BUF
->
Àn
[1] = (
UIP_ICMPH_LEN
 + 
∑ylﬂd_Àn
) & 0xff;

319 
	`mem˝y
(&
UIP_IP_BUF
->
de°ùaddr
, 
de°
, (*dest));

320 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

323 
	`PRINTF
("At uip_icmp6_send: ");

324 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

325 
	`PRINTF
("\n");

328 
UIP_ICMP_BUF
->
ty≥
 =Åype;

329 
UIP_ICMP_BUF
->
icode
 = 
code
;

331 
UIP_ICMP_BUF
->
icmpchksum
 = 0;

332 
UIP_ICMP_BUF
->
icmpchksum
 = ~
	`uù_icmp6chksum
();

334 
uù_Àn
 = 
UIP_IPH_LEN
 + 
UIP_ICMPH_LEN
 + 
∑ylﬂd_Àn
;

336 
	`UIP_STAT
(++
uù_°©
.
icmp
.
£¡
);

337 
	`UIP_STAT
(++
uù_°©
.
ù
.
£¡
);

339 
	`t˝ù_ùv6_ouçut
();

340 
	}
}

343 
	$echo_ª∂y_öput
()

345 
âl
;

346 
uù_ùaddr_t
 
£ndî
;

347 #i‡
UIP_CONF_IPV6_RPL


348 
uöt8_t
 
ãmp_ext_Àn
;

351 
	`uù_ùaddr_c›y
(&
£ndî
, &
UIP_IP_BUF
->
§cùaddr
);

352 
âl
 = 
UIP_IP_BUF
->ttl;

354 if(
uù_ext_Àn
 > 0) {

355 #i‡
UIP_CONF_IPV6_RPL


356 if((
ãmp_ext_Àn
 = 
	`Ωl_övît_hódî
())) {

358 
UIP_FIRST_EXT_BUF
->
√xt
 = 
UIP_PROTO_ICMP6
;

359 i‡(
uù_ext_Àn
 !
ãmp_ext_Àn
) {

360 
uù_Àn
 -(
uù_ext_Àn
 - 
ãmp_ext_Àn
);

361 
UIP_IP_BUF
->
Àn
[0] = ((
uù_Àn
 - 
UIP_IPH_LEN
) >> 8);

362 
UIP_IP_BUF
->
Àn
[1] = ((
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff);

369 
	`memmove
((
uöt8_t
 *)
UIP_ICMP_BUF
 + 
UIP_ICMPH_LEN
 - (
uù_ext_Àn
 - 
ãmp_ext_Àn
),

370 (
uöt8_t
 *)
UIP_ICMP_BUF
 + 
UIP_ICMPH_LEN
,

371 (
uù_Àn
 - 
UIP_IPH_LEN
 - 
ãmp_ext_Àn
 - 
UIP_ICMPH_LEN
));

373 
uù_ext_Àn
 = 
ãmp_ext_Àn
;

374 
uù_Àn
 -
uù_ext_Àn
;

378 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_ICMP6
;

379 
uù_Àn
 -
uù_ext_Àn
;

380 
UIP_IP_BUF
->
Àn
[0] = ((
uù_Àn
 - 
UIP_IPH_LEN
) >> 8);

381 
UIP_IP_BUF
->
Àn
[1] = ((
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff);

387 
	`memmove
((
uöt8_t
 *)
UIP_ICMP_BUF
 + 
UIP_ICMPH_LEN
 - 
uù_ext_Àn
,

388 (
uöt8_t
 *)
UIP_ICMP_BUF
 + 
UIP_ICMPH_LEN
,

389 (
uù_Àn
 - 
UIP_IPH_LEN
 - 
UIP_ICMPH_LEN
));

390 
uù_ext_Àn
 = 0;

391 #i‡
UIP_CONF_IPV6_RPL


399 
uù_icmp6_echo_ª∂y_nŸifiˇti⁄
 *
n
;

400 
n
 = 
	`li°_hód
(
echo_ª∂y_ˇŒback_li°
);

401 
n
 !
NULL
;

402 
n
 = 
	`li°_ôem_√xt
(n)) {

403 if(
n
->
ˇŒback
 !
NULL
) {

404 
n
->
	`ˇŒback
(&
£ndî
, 
âl
,

405 (
uöt8_t
 *)&
UIP_ICMP_BUF
[(
uù_icmp_hdr
)],

406 
uù_Àn
 - (
uù_icmp_hdr
Ë- 
UIP_IPH_LEN
);

411 
	`uù_˛ór_buf
();

413 
	}
}

416 
	$uù_icmp6_echo_ª∂y_ˇŒback_add
(
uù_icmp6_echo_ª∂y_nŸifiˇti⁄
 *
n
,

417 
uù_icmp6_echo_ª∂y_ˇŒback_t
 
c
)

419 if(
n
 !
NULL
 && 
c
 != NULL) {

420 
n
->
ˇŒback
 = 
c
;

421 
	`li°_add
(
echo_ª∂y_ˇŒback_li°
, 
n
);

423 
	}
}

426 
	$uù_icmp6_echo_ª∂y_ˇŒback_rm
(
uù_icmp6_echo_ª∂y_nŸifiˇti⁄
 *
n
)

428 
	`li°_ªmove
(
echo_ª∂y_ˇŒback_li°
, 
n
);

429 
	}
}

431 
UIP_ICMP6_HANDLER
(
echo_ªque°_h™dÀr
, 
ICMP6_ECHO_REQUEST
,

432 
UIP_ICMP6_HANDLER_CODE_ANY
, 
echo_ªque°_öput
);

433 
UIP_ICMP6_HANDLER
(
echo_ª∂y_h™dÀr
, 
ICMP6_ECHO_REPLY
,

434 
UIP_ICMP6_HANDLER_CODE_ANY
, 
echo_ª∂y_öput
);

437 
	$uù_icmp6_öô
()

440 
	`uù_icmp6_ªgi°î_öput_h™dÀr
(&
echo_ªque°_h™dÀr
);

441 
	`uù_icmp6_ªgi°î_öput_h™dÀr
(&
echo_ª∂y_h™dÀr
);

442 
	}
}

	@uip-icmp6.h

45 #i‚de‡
ICMP6_H_


46 
	#ICMP6_H_


	)

48 
	~"√t/ù/uù.h
"

53 
	#ICMP6_DST_UNREACH
 1

	)

54 
	#ICMP6_PACKET_TOO_BIG
 2

	)

55 
	#ICMP6_TIME_EXCEEDED
 3

	)

56 
	#ICMP6_PARAM_PROB
 4

	)

57 
	#ICMP6_ECHO_REQUEST
 128

	)

58 
	#ICMP6_ECHO_REPLY
 129

	)

60 
	#ICMP6_RS
 133

	)

61 
	#ICMP6_RA
 134

	)

62 
	#ICMP6_NS
 135

	)

63 
	#ICMP6_NA
 136

	)

64 
	#ICMP6_REDIRECT
 137

	)

66 
	#ICMP6_RPL
 155

	)

67 
	#ICMP6_PRIV_EXP_100
 100

	)

68 
	#ICMP6_PRIV_EXP_101
 101

	)

69 
	#ICMP6_PRIV_EXP_200
 200

	)

70 
	#ICMP6_PRIV_EXP_201
 201

	)

71 
	#ICMP6_ROLL_TM
 
ICMP6_PRIV_EXP_200


	)

77 
	#ICMP6_DST_UNREACH_NOROUTE
 0

	)

78 
	#ICMP6_DST_UNREACH_ADMIN
 1

	)

79 
	#ICMP6_DST_UNREACH_NOTNEIGHBOR
 2

	)

80 
	#ICMP6_DST_UNREACH_BEYONDSCOPE
 2

	)

81 
	#ICMP6_DST_UNREACH_ADDR
 3

	)

82 
	#ICMP6_DST_UNREACH_NOPORT
 4

	)

87 
	#ICMP6_TIME_EXCEED_TRANSIT
 0

	)

88 
	#ICMP6_TIME_EXCEED_REASSEMBLY
 1

	)

93 
	#ICMP6_PARAMPROB_HEADER
 0

	)

94 
	#ICMP6_PARAMPROB_NEXTHEADER
 1

	)

95 
	#ICMP6_PARAMPROB_OPTION
 2

	)

99 
	#UIP_ICMP6_ECHO_REQUEST_LEN
 4

	)

102 
	#UIP_ICMP6_ERROR_LEN
 4

	)

105 
	suù_icmp6_îr‹
{

106 
uöt32_t
 
	m∑øm
;

107 } 
	tuù_icmp6_îr‹
;

118 
uù_icmp6_îr‹_ouçut
(
uöt8_t
 
ty≥
, uöt8_à
code
, 
uöt32_t
 
∑øm
);

128 
uù_icmp6_£nd
(c⁄° 
uù_ùaddr_t
 *
de°
, 
ty≥
, 
code
, 
∑ylﬂd_Àn
);

132 (* 
	tuù_icmp6_echo_ª∂y_ˇŒback_t
)(
	tuù_ùaddr_t
 *
	tsour˚
,

133 
	tuöt8_t
 
	tâl
,

134 
	tuöt8_t
 *
	td©a
,

135 
	tuöt16_t
 
	td©Æí
);

136 
	suù_icmp6_echo_ª∂y_nŸifiˇti⁄
 {

137 
uù_icmp6_echo_ª∂y_nŸifiˇti⁄
 *
√xt
;

138 
uù_icmp6_echo_ª∂y_ˇŒback_t
 
ˇŒback
;

162 
	`uù_icmp6_echo_ª∂y_ˇŒback_add
(
uù_icmp6_echo_ª∂y_nŸifiˇti⁄
 *
n
,

163 
uù_icmp6_echo_ª∂y_ˇŒback_t
 
c
);

174 
	`uù_icmp6_echo_ª∂y_ˇŒback_rm
(
uù_icmp6_echo_ª∂y_nŸifiˇti⁄
 *
n
);

177 
	suù_icmp6_öput_h™dÀr
 {

178 
uù_icmp6_öput_h™dÀr
 *
√xt
;

179 
uöt8_t
 
ty≥
;

180 
uöt8_t
 
icode
;

181 (*
h™dÀr
)();

182 } 
	tuù_icmp6_öput_h™dÀr_t
;

184 
	#UIP_ICMP6_INPUT_SUCCESS
 0

	)

185 
	#UIP_ICMP6_INPUT_ERROR
 1

	)

187 
	#UIP_ICMP6_HANDLER_CODE_ANY
 0xFF

	)

200 
	#UIP_ICMP6_HANDLER
(
«me
, 
ty≥
, 
code
, 
func
) \

201 
uù_icmp6_öput_h™dÀr_t
 
«me
 = { 
NULL
, 
ty≥
, 
code
, 
func
 
	}

	)
}

223 
uöt8_t
 
uù_icmp6_öput
(uöt8_à
ty≥
, uöt8_à
icode
);

229 
uù_icmp6_ªgi°î_öput_h™dÀr
(
uù_icmp6_öput_h™dÀr_t
 *
h™dÀr
);

235 
uù_icmp6_öô
();

	@uip-nd6.c

71 
	~<°rög.h
>

72 
	~"√t/ùv6/uù-icmp6.h
"

73 
	~"√t/ùv6/uù-nd6.h
"

74 
	~"√t/ùv6/uù-ds6.h
"

75 
	~"√t/ù/uù-«me£rvî.h
"

76 
	~"lib/øndom.h
"

80 
	~"ùv6_debug.h
"

81 
	#DEBUG
 
DEBUG_UIP_ND6


	)

82 
	~"√t/ù/uù-debug.h
"

85 #i‡
ANA_UIP_ND6


86 
	#ANA
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

88 
	#ANA
(...)

	)

92 #i‡
UIP_LOGGING


93 
	~<°dio.h
>

94 
uù_log
(*
msg
);

96 
	#UIP_LOG
(
m
Ë
	`uù_log
(m)

	)

98 
	#UIP_LOG
(
m
)

	)

114 
	#UIP_IP_BUF
 ((
uù_ù_hdr
 *)&
uù_buf
[
UIP_LLH_LEN
]Ë

	)

115 
	#UIP_ICMP_BUF
 ((
uù_icmp_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
]Ë

	)

117 
	#UIP_ND6_RS_BUF
 ((
uù_nd6_rs
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
])

	)

118 
	#UIP_ND6_RA_BUF
 ((
uù_nd6_ø
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
])

	)

119 
	#UIP_ND6_NS_BUF
 ((
uù_nd6_ns
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
])

	)

120 
	#UIP_ND6_NA_BUF
 ((
uù_nd6_«
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
])

	)

123 
	#UIP_ND6_OPT_HDR_BUF
 ((
uù_nd6_›t_hdr
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
])

	)

124 
	#UIP_ND6_OPT_PREFIX_BUF
 ((
uù_nd6_›t_¥efix_öfo
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
])

	)

125 
	#UIP_ND6_OPT_MTU_BUF
 ((
uù_nd6_›t_mtu
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
])

	)

126 
	#UIP_ND6_OPT_RDNSS_BUF
 ((
uù_nd6_›t_dns
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
])

	)

129 #i‡
UIP_ND6_SEND_NA
 || 
UIP_ND6_SEND_RA
 || !
UIP_CONF_ROUTER


130 
uöt8_t
 
	gnd6_›t_off£t
;

131 
uöt8_t
 *
	gnd6_›t_Œao
;

132 
uù_ds6_nbr_t
 *
	gnbr
;

133 
uù_ds6_de‰t_t
 *
	gde‰t
;

134 
uù_ds6_addr_t
 *
	gaddr
;

137 #i‡!
UIP_CONF_ROUTER


138 
uù_nd6_›t_¥efix_öfo
 *
	gnd6_›t_¥efix_öfo
;

139 
uù_ùaddr_t
 
	gùaddr
;

141 #i‡(!
UIP_CONF_ROUTER
 || 
UIP_ND6_SEND_RA
)

142 
uù_ds6_¥efix_t
 *
	g¥efix
;

145 #i‡
UIP_ND6_SEND_NA
 || 
UIP_ND6_SEND_RA
 || !
UIP_CONF_ROUTER


149 
	$exåa˘_Œaddr_Æig√d
(
uù_Œaddr_t
 *
de°
) {

150 if(
de°
 !
NULL
 && 
nd6_›t_Œao
 != NULL) {

151 
	`mem˝y
(
de°
, &
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
], 
UIP_LLADDR_LEN
);

153 
	}
}

158 
	$¸óã_Œao
(
uöt8_t
 *
Œao
, uöt8_à
ty≥
) {

159 
Œao
[
UIP_ND6_OPT_TYPE_OFFSET
] = 
ty≥
;

160 
Œao
[
UIP_ND6_OPT_LEN_OFFSET
] = 
UIP_ND6_OPT_LLAO_LEN
 >> 3;

161 
	`mem˝y
(&
Œao
[
UIP_ND6_OPT_DATA_OFFSET
], &
uù_Œaddr
, 
UIP_LLADDR_LEN
);

163 
	`mem£t
(&
Œao
[
UIP_ND6_OPT_DATA_OFFSET
 + 
UIP_LLADDR_LEN
], 0,

164 
UIP_ND6_OPT_LLAO_LEN
 - 2 - 
UIP_LLADDR_LEN
);

165 
	}
}

169 #i‡
UIP_ND6_SEND_NA


171 
	$ns_öput
()

173 
uöt8_t
 
Êags
;

174 
	`PRINTF
("Received NS from ");

175 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

176 
	`PRINTF
("Åo ");

177 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

178 
	`PRINTF
(" withÅargetáddress ");

179 
	`PRINT6ADDR
((
uù_ùaddr_t
 *Ë(&
UIP_ND6_NS_BUF
->
tgtùaddr
));

180 
	`PRINTF
("\n");

181 
	`UIP_STAT
(++
uù_°©
.
nd6
.
ªcv
);

183 #i‡
UIP_CONF_IPV6_CHECKS


184 if((
UIP_IP_BUF
->
âl
 !
UIP_ND6_HOP_LIMIT
) ||

185 (
	`uù_is_addr_mˇ°
(&
UIP_ND6_NS_BUF
->
tgtùaddr
)) ||

186 (
UIP_ICMP_BUF
->
icode
 != 0)) {

187 
	`PRINTF
("NSÑeceived is bad\n");

188 
disˇrd
;

193 
nd6_›t_Œao
 = 
NULL
;

194 
nd6_›t_off£t
 = 
UIP_ND6_NS_LEN
;

195 
uù_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
 < 
uù_Àn
) {

196 #i‡
UIP_CONF_IPV6_CHECKS


197 if(
UIP_ND6_OPT_HDR_BUF
->
Àn
 == 0) {

198 
	`PRINTF
("NSÑeceived is bad\n");

199 
disˇrd
;

202 
UIP_ND6_OPT_HDR_BUF
->
ty≥
) {

203 
UIP_ND6_OPT_SLLAO
:

204 
nd6_›t_Œao
 = &
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
];

205 #i‡
UIP_CONF_IPV6_CHECKS


207 if(
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)) {

208 
	`PRINTF
("NSÑeceived is bad\n");

209 
disˇrd
;

212 
nbr
 = 
	`uù_ds6_nbr_lookup
(&
UIP_IP_BUF
->
§cùaddr
);

213 if(
nbr
 =
NULL
) {

214 
uù_Œaddr_t
 
Œaddr_Æig√d
;

215 
	`exåa˘_Œaddr_Æig√d
(&
Œaddr_Æig√d
);

216 
	`uù_ds6_nbr_add
(&
UIP_IP_BUF
->
§cùaddr
, &
Œaddr_Æig√d
,

217 0, 
NBR_STALE
, 
NBR_TABLE_REASON_IPV6_ND
, 
NULL
);

219 
uù_Œaddr_t
 *
Œaddr
 = (uù_Œaddr_à*)
	`uù_ds6_nbr_gë_Œ
(
nbr
);

220 if(
	`memcmp
(&
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
],

221 
Œaddr
, 
UIP_LLADDR_LEN
) != 0) {

222 
	`mem˝y
(
Œaddr
, &
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
], 
UIP_LLADDR_LEN
);

223 
nbr
->
°©e
 = 
NBR_STALE
;

225 if(
nbr
->
°©e
 =
NBR_INCOMPLETE
) {

226 
nbr
->
°©e
 = 
NBR_STALE
;

230 #i‡
UIP_CONF_IPV6_CHECKS


235 
	`PRINTF
("ND optionÇot supported in NS");

238 
nd6_›t_off£t
 +(
UIP_ND6_OPT_HDR_BUF
->
Àn
 << 3);

241 
addr
 = 
	`uù_ds6_addr_lookup
(&
UIP_ND6_NS_BUF
->
tgtùaddr
);

242 if(
addr
 !
NULL
) {

243 #i‡
UIP_ND6_DEF_MAXDADNS
 > 0

244 if(
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)) {

246 #i‡
UIP_CONF_IPV6_CHECKS


247 if(!
	`uù_is_addr_sﬁicôed_node
(&
UIP_IP_BUF
->
de°ùaddr
)) {

248 
	`PRINTF
("NSÑeceived is bad\n");

249 
disˇrd
;

252 if(
addr
->
°©e
 !
ADDR_TENTATIVE
) {

253 
	`uù_¸óã_lökloˇl_Æ odes_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
);

254 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

255 
Êags
 = 
UIP_ND6_NA_FLAG_OVERRIDE
;

256 
¸óã_«
;

259 
	`uù_ds6_dad_Áûed
(
addr
);

260 
disˇrd
;

263 if(
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)) {

265 
disˇrd
;

268 #i‡
UIP_CONF_IPV6_CHECKS


269 if(
	`uù_ds6_is_my_addr
(&
UIP_IP_BUF
->
§cùaddr
)) {

276 
	`PRINTF
("NSÑeceived is bad\n");

277 
disˇrd
;

282 if(
	`uù_is_addr_sﬁicôed_node
(&
UIP_IP_BUF
->
de°ùaddr
)) {

283 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, &UIP_IP_BUF->
§cùaddr
);

284 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
§cùaddr
, &
UIP_ND6_NS_BUF
->
tgtùaddr
);

285 
Êags
 = 
UIP_ND6_NA_FLAG_SOLICITED
 | 
UIP_ND6_NA_FLAG_OVERRIDE
;

286 
¸óã_«
;

290 if(
	`uù_ds6_addr_lookup
(&
UIP_IP_BUF
->
de°ùaddr
Ë=
addr
) {

291 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, &UIP_IP_BUF->
§cùaddr
);

292 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
§cùaddr
, &
UIP_ND6_NS_BUF
->
tgtùaddr
);

293 
Êags
 = 
UIP_ND6_NA_FLAG_SOLICITED
 | 
UIP_ND6_NA_FLAG_OVERRIDE
;

294 
¸óã_«
;

296 #i‡
UIP_CONF_IPV6_CHECKS


297 
	`PRINTF
("NSÑeceived is bad\n");

298 
disˇrd
;

302 
disˇrd
;

306 
¸óã_«
:

308 #i‡
UIP_CONF_ROUTER


309 
Êags
 = fœg†| 
UIP_ND6_NA_FLAG_ROUTER
;

311 
uù_ext_Àn
 = 0;

312 
UIP_IP_BUF
->
vtc
 = 0x60;

313 
UIP_IP_BUF
->
tcÊow
 = 0;

314 
UIP_IP_BUF
->
Êow
 = 0;

315 
UIP_IP_BUF
->
Àn
[0] = 0;

316 
UIP_IP_BUF
->
Àn
[1] = 
UIP_ICMPH_LEN
 + 
UIP_ND6_NA_LEN
 + 
UIP_ND6_OPT_LLAO_LEN
;

317 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_ICMP6
;

318 
UIP_IP_BUF
->
âl
 = 
UIP_ND6_HOP_LIMIT
;

320 
UIP_ICMP_BUF
->
ty≥
 = 
ICMP6_NA
;

321 
UIP_ICMP_BUF
->
icode
 = 0;

323 
UIP_ND6_NA_BUF
->
Êag§e£rved
 = 
Êags
;

324 
	`mem˝y
(&
UIP_ND6_NA_BUF
->
tgtùaddr
, &
addr
->
ùaddr
, (
uù_ùaddr_t
));

326 
	`¸óã_Œao
(&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
 + 
UIP_ND6_NA_LEN
],

327 
UIP_ND6_OPT_TLLAO
);

329 
UIP_ICMP_BUF
->
icmpchksum
 = 0;

330 
UIP_ICMP_BUF
->
icmpchksum
 = ~
	`uù_icmp6chksum
();

332 
uù_Àn
 =

333 
UIP_IPH_LEN
 + 
UIP_ICMPH_LEN
 + 
UIP_ND6_NA_LEN
 + 
UIP_ND6_OPT_LLAO_LEN
;

335 
	`UIP_STAT
(++
uù_°©
.
nd6
.
£¡
);

336 
	`PRINTF
("Sending NAÅo ");

337 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

338 
	`PRINTF
(" from ");

339 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

340 
	`PRINTF
(" withÅargetáddress ");

341 
	`PRINT6ADDR
(&
UIP_ND6_NA_BUF
->
tgtùaddr
);

342 
	`PRINTF
("\n");

345 
disˇrd
:

346 
	`uù_˛ór_buf
();

348 
	}
}

354 
	$uù_nd6_ns_ouçut
(
uù_ùaddr_t
 * 
§c
, uù_ùaddr_à* 
de°
, uù_ùaddr_à* 
tgt
)

356 
uù_ext_Àn
 = 0;

357 
UIP_IP_BUF
->
vtc
 = 0x60;

358 
UIP_IP_BUF
->
tcÊow
 = 0;

359 
UIP_IP_BUF
->
Êow
 = 0;

360 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_ICMP6
;

361 
UIP_IP_BUF
->
âl
 = 
UIP_ND6_HOP_LIMIT
;

363 if(
de°
 =
NULL
) {

364 
	`uù_¸óã_sﬁicôed_node
(
tgt
, &
UIP_IP_BUF
->
de°ùaddr
);

366 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, 
de°
);

368 
UIP_ICMP_BUF
->
ty≥
 = 
ICMP6_NS
;

369 
UIP_ICMP_BUF
->
icode
 = 0;

370 
UIP_ND6_NS_BUF
->
ª£rved
 = 0;

371 
	`uù_ùaddr_c›y
((
uù_ùaddr_t
 *Ë&
UIP_ND6_NS_BUF
->
tgtùaddr
, 
tgt
);

372 
UIP_IP_BUF
->
Àn
[0] = 0;

377 if(!(
	`uù_ds6_is_my_addr
(
tgt
))) {

378 if(
§c
 !
NULL
) {

379 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
§cùaddr
, 
§c
);

381 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

383 i‡(
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)) {

384 
	`PRINTF
("Dropping NS dueÅoÇo suitable sourceáddress\n");

385 
	`uù_˛ór_buf
();

388 
UIP_IP_BUF
->
Àn
[1] =

389 
UIP_ICMPH_LEN
 + 
UIP_ND6_NS_LEN
 + 
UIP_ND6_OPT_LLAO_LEN
;

391 
	`¸óã_Œao
(&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
 + 
UIP_ND6_NS_LEN
],

392 
UIP_ND6_OPT_SLLAO
);

394 
uù_Àn
 =

395 
UIP_IPH_LEN
 + 
UIP_ICMPH_LEN
 + 
UIP_ND6_NS_LEN
 + 
UIP_ND6_OPT_LLAO_LEN
;

397 
	`uù_¸óã_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
);

398 
UIP_IP_BUF
->
Àn
[1] = 
UIP_ICMPH_LEN
 + 
UIP_ND6_NS_LEN
;

399 
uù_Àn
 = 
UIP_IPH_LEN
 + 
UIP_ICMPH_LEN
 + 
UIP_ND6_NS_LEN
;

402 
UIP_ICMP_BUF
->
icmpchksum
 = 0;

403 
UIP_ICMP_BUF
->
icmpchksum
 = ~
	`uù_icmp6chksum
();

405 
	`UIP_STAT
(++
uù_°©
.
nd6
.
£¡
);

406 
	`PRINTF
("Sending NSÅo ");

407 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

408 
	`PRINTF
(" from ");

409 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

410 
	`PRINTF
(" withÅargetáddress ");

411 
	`PRINT6ADDR
(
tgt
);

412 
	`PRINTF
("\n");

414 
	}
}

415 #i‡
UIP_ND6_SEND_NA


435 
	$«_öput
()

437 
uöt8_t
 
is_Œch™ge
;

438 
uöt8_t
 
is_rouãr
;

439 
uöt8_t
 
is_sﬁicôed
;

440 
uöt8_t
 
is_ovîride
;

442 
	`PRINTF
("Received NA from ");

443 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

444 
	`PRINTF
("Åo ");

445 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

446 
	`PRINTF
(" withÅargetáddress ");

447 
	`PRINT6ADDR
((
uù_ùaddr_t
 *Ë(&
UIP_ND6_NA_BUF
->
tgtùaddr
));

448 
	`PRINTF
("\n");

449 
	`UIP_STAT
(++
uù_°©
.
nd6
.
ªcv
);

455 
is_Œch™ge
 = 0;

456 
is_rouãr
 = ((
UIP_ND6_NA_BUF
->
Êag§e£rved
 & 
UIP_ND6_NA_FLAG_ROUTER
));

457 
is_sﬁicôed
 =

458 ((
UIP_ND6_NA_BUF
->
Êag§e£rved
 & 
UIP_ND6_NA_FLAG_SOLICITED
));

459 
is_ovîride
 =

460 ((
UIP_ND6_NA_BUF
->
Êag§e£rved
 & 
UIP_ND6_NA_FLAG_OVERRIDE
));

462 #i‡
UIP_CONF_IPV6_CHECKS


463 if((
UIP_IP_BUF
->
âl
 !
UIP_ND6_HOP_LIMIT
) ||

464 (
UIP_ICMP_BUF
->
icode
 != 0) ||

465 (
	`uù_is_addr_mˇ°
(&
UIP_ND6_NA_BUF
->
tgtùaddr
)) ||

466 (
is_sﬁicôed
 && 
	`uù_is_addr_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
))) {

467 
	`PRINTF
("NAÑeceived is bad\n");

468 
disˇrd
;

473 
nd6_›t_off£t
 = 
UIP_ND6_NA_LEN
;

474 
nd6_›t_Œao
 = 
NULL
;

475 
uù_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
 < 
uù_Àn
) {

476 #i‡
UIP_CONF_IPV6_CHECKS


477 if(
UIP_ND6_OPT_HDR_BUF
->
Àn
 == 0) {

478 
	`PRINTF
("NAÑeceived is bad\n");

479 
disˇrd
;

482 
UIP_ND6_OPT_HDR_BUF
->
ty≥
) {

483 
UIP_ND6_OPT_TLLAO
:

484 
nd6_›t_Œao
 = (
uöt8_t
 *)
UIP_ND6_OPT_HDR_BUF
;

487 
	`PRINTF
("ND optionÇot supported in NA\n");

490 
nd6_›t_off£t
 +(
UIP_ND6_OPT_HDR_BUF
->
Àn
 << 3);

492 
addr
 = 
	`uù_ds6_addr_lookup
(&
UIP_ND6_NA_BUF
->
tgtùaddr
);

494 if(
addr
 !
NULL
) {

495 #i‡
UIP_ND6_DEF_MAXDADNS
 > 0

496 if(
addr
->
°©e
 =
ADDR_TENTATIVE
) {

497 
	`uù_ds6_dad_Áûed
(
addr
);

500 
	`PRINTF
("NAÑeceived is bad\n");

501 
disˇrd
;

503 
uù_Œaddr_t
 *
Œaddr
;

504 
nbr
 = 
	`uù_ds6_nbr_lookup
(&
UIP_ND6_NA_BUF
->
tgtùaddr
);

505 
Œaddr
 = (
uù_Œaddr_t
 *)
	`uù_ds6_nbr_gë_Œ
(
nbr
);

506 if(
nbr
 =
NULL
) {

507 
disˇrd
;

509 if(
nd6_›t_Œao
 != 0) {

510 
is_Œch™ge
 =

511 
	`memcmp
(&
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
], (*)
Œaddr
,

512 
UIP_LLADDR_LEN
);

514 if(
nbr
->
°©e
 =
NBR_INCOMPLETE
) {

515 if(
nd6_›t_Œao
 =
NULL
) {

516 
disˇrd
;

518 
	`mem˝y
(
Œaddr
, &
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
],

519 
UIP_LLADDR_LEN
);

520 if(
is_sﬁicôed
) {

521 
nbr
->
°©e
 = 
NBR_REACHABLE
;

522 
nbr
->
nscou¡
 = 0;

525 
	`°imî_£t
(&(
nbr
->
ªachabÀ
), 
uù_ds6_if
.
ªachabÀ_time
 / 1000);

528 
nbr
->
°©e
 = 
NBR_STALE
;

530 
nbr
->
i§ouãr
 = 
is_rouãr
;

532 if(!
is_ovîride
 && 
is_Œch™ge
) {

533 if(
nbr
->
°©e
 =
NBR_REACHABLE
) {

534 
nbr
->
°©e
 = 
NBR_STALE
;

536 
disˇrd
;

538 if(
is_ovîride
 || (!is_ovîridê&& 
nd6_›t_Œao
 !0 && !
is_Œch™ge
)

539 || 
nd6_›t_Œao
 == 0) {

540 if(
nd6_›t_Œao
 != 0) {

541 
	`mem˝y
(
Œaddr
, &
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
],

542 
UIP_LLADDR_LEN
);

544 if(
is_sﬁicôed
) {

545 
nbr
->
°©e
 = 
NBR_REACHABLE
;

547 
	`°imî_£t
(&(
nbr
->
ªachabÀ
), 
uù_ds6_if
.
ªachabÀ_time
 / 1000);

549 if(
nd6_›t_Œao
 !0 && 
is_Œch™ge
) {

550 
nbr
->
°©e
 = 
NBR_STALE
;

555 if(
nbr
->
i§ouãr
 && !
is_rouãr
) {

556 
de‰t
 = 
	`uù_ds6_de‰t_lookup
(&
UIP_IP_BUF
->
§cùaddr
);

557 if(
de‰t
 !
NULL
) {

558 
	`uù_ds6_de‰t_rm
(
de‰t
);

561 
nbr
->
i§ouãr
 = 
is_rouãr
;

564 #i‡
UIP_CONF_IPV6_QUEUE_PKT


572 if(
	`uù_∑ckëqueue_buÊí
(&
nbr
->
∑ckëh™dÀ
) != 0) {

573 
uù_Àn
 = 
	`uù_∑ckëqueue_buÊí
(&
nbr
->
∑ckëh™dÀ
);

574 
	`mem˝y
(
UIP_IP_BUF
, 
	`uù_∑ckëqueue_buf
(&
nbr
->
∑ckëh™dÀ
), 
uù_Àn
);

575 
	`uù_∑ckëqueue_‰ì
(&
nbr
->
∑ckëh™dÀ
);

581 
disˇrd
:

582 
	`uù_˛ór_buf
();

584 
	}
}

587 #i‡
UIP_CONF_ROUTER


588 #i‡
UIP_ND6_SEND_RA


591 
	$rs_öput
()

594 
	`PRINTF
("Received RS from ");

595 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

596 
	`PRINTF
("Åo ");

597 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

598 
	`PRINTF
("\n");

599 
	`UIP_STAT
(++
uù_°©
.
nd6
.
ªcv
);

602 #i‡
UIP_CONF_IPV6_CHECKS


608 if((
UIP_IP_BUF
->
âl
 !
UIP_ND6_HOP_LIMIT
Ë|| (
UIP_ICMP_BUF
->
icode
 != 0)) {

609 
	`PRINTF
("RSÑeceived is bad\n");

610 
disˇrd
;

616 
nd6_›t_off£t
 = 
UIP_ND6_RS_LEN
;

617 
nd6_›t_Œao
 = 
NULL
;

619 
uù_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
 < 
uù_Àn
) {

620 #i‡
UIP_CONF_IPV6_CHECKS


621 if(
UIP_ND6_OPT_HDR_BUF
->
Àn
 == 0) {

622 
	`PRINTF
("RSÑeceived is bad\n");

623 
disˇrd
;

626 
UIP_ND6_OPT_HDR_BUF
->
ty≥
) {

627 
UIP_ND6_OPT_SLLAO
:

628 
nd6_›t_Œao
 = (
uöt8_t
 *)
UIP_ND6_OPT_HDR_BUF
;

631 
	`PRINTF
("ND optionÇot supported in RS\n");

634 
nd6_›t_off£t
 +(
UIP_ND6_OPT_HDR_BUF
->
Àn
 << 3);

637 if(
nd6_›t_Œao
 !
NULL
) {

638 #i‡
UIP_CONF_IPV6_CHECKS


639 if(
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)) {

640 
	`PRINTF
("RSÑeceived is bad\n");

641 
disˇrd
;

644 
uù_Œaddr_t
 
Œaddr_Æig√d
;

645 
	`exåa˘_Œaddr_Æig√d
(&
Œaddr_Æig√d
);

646 if((
nbr
 = 
	`uù_ds6_nbr_lookup
(&
UIP_IP_BUF
->
§cùaddr
)Ë=
NULL
) {

648 
	`uù_ds6_nbr_add
(&
UIP_IP_BUF
->
§cùaddr
, &
Œaddr_Æig√d
,

649 0, 
NBR_STALE
, 
NBR_TABLE_REASON_IPV6_ND
, 
NULL
);

652 if(
	`memcmp
(&
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
],

653 
	`uù_ds6_nbr_gë_Œ
(
nbr
), 
UIP_LLADDR_LEN
) != 0) {

654 
uù_ds6_nbr_t
 
nbr_d©a
 = *
nbr
;

655 
	`uù_ds6_nbr_rm
(
nbr
);

656 
nbr
 = 
	`uù_ds6_nbr_add
(&
UIP_IP_BUF
->
§cùaddr
, &
Œaddr_Æig√d
,

657 0, 
NBR_STALE
, 
NBR_TABLE_REASON_IPV6_ND
, 
NULL
);

658 
nbr
->
ªachabÀ
 = 
nbr_d©a
.reachable;

659 
nbr
->
£ndns
 = 
nbr_d©a
.sendns;

660 
nbr
->
nscou¡
 = 
nbr_d©a
.nscount;

662 
nbr
->
i§ouãr
 = 0;

664 #i‡
UIP_CONF_IPV6_CHECKS


670 
	`uù_ds6_£nd_ø_sﬁlicôed
();

672 
disˇrd
:

673 
	`uù_˛ór_buf
();

675 
	}
}

679 
	$uù_nd6_ø_ouçut
(
uù_ùaddr_t
 * 
de°
)

682 
UIP_IP_BUF
->
vtc
 = 0x60;

683 
UIP_IP_BUF
->
tcÊow
 = 0;

684 
UIP_IP_BUF
->
Êow
 = 0;

685 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_ICMP6
;

686 
UIP_IP_BUF
->
âl
 = 
UIP_ND6_HOP_LIMIT
;

688 if(
de°
 =
NULL
) {

689 
	`uù_¸óã_lökloˇl_Æ odes_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
);

692 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, 
de°
);

694 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

696 
UIP_ICMP_BUF
->
ty≥
 = 
ICMP6_RA
;

697 
UIP_ICMP_BUF
->
icode
 = 0;

699 
UIP_ND6_RA_BUF
->
cur_âl
 = 
uù_ds6_if
.
cur_h›_limô
;

701 
UIP_ND6_RA_BUF
->
Êags_ª£rved
 =

702 (
UIP_ND6_M_FLAG
 << 7Ë| (
UIP_ND6_O_FLAG
 << 6);

704 
UIP_ND6_RA_BUF
->
rouãr_li„time
 = 
	`uù_ht⁄s
(
UIP_ND6_ROUTER_LIFETIME
);

707 
UIP_ND6_RA_BUF
->
ªachabÀ_time
 = 0;

708 
UIP_ND6_RA_BUF
->
ªå™s_timî
 = 0;

710 
uù_Àn
 = 
UIP_IPH_LEN
 + 
UIP_ICMPH_LEN
 + 
UIP_ND6_RA_LEN
;

711 
nd6_›t_off£t
 = 
UIP_ND6_RA_LEN
;

715 
¥efix
 = 
uù_ds6_¥efix_li°
;

716 
¥efix
 < 
uù_ds6_¥efix_li°
 + 
UIP_DS6_PREFIX_NB
;Örefix++) {

717 if((
¥efix
->
isu£d
Ë&& (¥efix->
advîti£
)) {

718 
UIP_ND6_OPT_PREFIX_BUF
->
ty≥
 = 
UIP_ND6_OPT_PREFIX_INFO
;

719 
UIP_ND6_OPT_PREFIX_BUF
->
Àn
 = 
UIP_ND6_OPT_PREFIX_INFO_LEN
 / 8;

720 
UIP_ND6_OPT_PREFIX_BUF
->
¥eÊí
 = 
¥efix
->
Àngth
;

721 
UIP_ND6_OPT_PREFIX_BUF
->
Êag§e£rved1
 = 
¥efix
->
l_a_ª£rved
;

722 
UIP_ND6_OPT_PREFIX_BUF
->
vÆid…
 = 
	`uù_ht⁄l
(
¥efix
->
vli„time
);

723 
UIP_ND6_OPT_PREFIX_BUF
->
¥e„ºed…
 = 
	`uù_ht⁄l
(
¥efix
->
∂i„time
);

724 
UIP_ND6_OPT_PREFIX_BUF
->
ª£rved2
 = 0;

725 
	`uù_ùaddr_c›y
(&(
UIP_ND6_OPT_PREFIX_BUF
->
¥efix
), &’ªfix->
ùaddr
));

726 
nd6_›t_off£t
 +
UIP_ND6_OPT_PREFIX_INFO_LEN
;

727 
uù_Àn
 +
UIP_ND6_OPT_PREFIX_INFO_LEN
;

732 
	`¸óã_Œao
((
uöt8_t
 *)
UIP_ND6_OPT_HDR_BUF
, 
UIP_ND6_OPT_SLLAO
);

734 
uù_Àn
 +
UIP_ND6_OPT_LLAO_LEN
;

735 
nd6_›t_off£t
 +
UIP_ND6_OPT_LLAO_LEN
;

738 
UIP_ND6_OPT_MTU_BUF
->
ty≥
 = 
UIP_ND6_OPT_MTU
;

739 
UIP_ND6_OPT_MTU_BUF
->
Àn
 = 
UIP_ND6_OPT_MTU_LEN
 >> 3;

740 
UIP_ND6_OPT_MTU_BUF
->
ª£rved
 = 0;

742 
UIP_ND6_OPT_MTU_BUF
->
mtu
 = 
	`uù_ht⁄l
(1500);

744 
uù_Àn
 +
UIP_ND6_OPT_MTU_LEN
;

745 
nd6_›t_off£t
 +
UIP_ND6_OPT_MTU_LEN
;

747 #i‡
UIP_ND6_RA_RDNSS


748 if(
	`uù_«me£rvî_cou¡
() > 0) {

749 
uöt8_t
 
i
 = 0;

750 
uù_ùaddr_t
 *
ù
 = &
UIP_ND6_OPT_RDNSS_BUF
->ip;

751 
uù_ùaddr_t
 *
dns
 = 
NULL
;

752 
UIP_ND6_OPT_RDNSS_BUF
->
ty≥
 = 
UIP_ND6_OPT_RDNSS
;

753 
UIP_ND6_OPT_RDNSS_BUF
->
ª£rved
 = 0;

754 
UIP_ND6_OPT_RDNSS_BUF
->
li„time
 = 
	`uù_«me£rvî_√xt_expú©i⁄
();

755 if(
UIP_ND6_OPT_RDNSS_BUF
->
li„time
 !
UIP_NAMESERVER_INFINITE_LIFETIME
) {

756 
UIP_ND6_OPT_RDNSS_BUF
->
li„time
 -
	`˛ock_£c⁄ds
();

758 (
dns
 = 
	`uù_«me£rvî_gë
(
i
)Ë!
NULL
) {

759 
	`uù_ùaddr_c›y
(
ù
++, 
dns
);

760 
i
++;

762 
UIP_ND6_OPT_RDNSS_BUF
->
Àn
 = 
UIP_ND6_OPT_RDNSS_LEN
 + (
i
 << 1);

763 
	`PRINTF
("%dÇame£rvî†ªp‹ãd\n", 
i
);

764 
uù_Àn
 +
UIP_ND6_OPT_RDNSS_BUF
->
Àn
 << 3;

765 
nd6_›t_off£t
 +
UIP_ND6_OPT_RDNSS_BUF
->
Àn
 << 3;

769 
UIP_IP_BUF
->
Àn
[0] = ((
uù_Àn
 - 
UIP_IPH_LEN
) >> 8);

770 
UIP_IP_BUF
->
Àn
[1] = ((
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff);

773 
UIP_ICMP_BUF
->
icmpchksum
 = 0;

774 
UIP_ICMP_BUF
->
icmpchksum
 = ~
	`uù_icmp6chksum
();

776 
	`UIP_STAT
(++
uù_°©
.
nd6
.
£¡
);

777 
	`PRINTF
("Sending RAÅo ");

778 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

779 
	`PRINTF
(" from ");

780 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

781 
	`PRINTF
("\n");

783 
	}
}

787 #i‡!
UIP_CONF_ROUTER


790 
	$uù_nd6_rs_ouçut
()

792 
UIP_IP_BUF
->
vtc
 = 0x60;

793 
UIP_IP_BUF
->
tcÊow
 = 0;

794 
UIP_IP_BUF
->
Êow
 = 0;

795 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_ICMP6
;

796 
UIP_IP_BUF
->
âl
 = 
UIP_ND6_HOP_LIMIT
;

797 
	`uù_¸óã_lökloˇl_ÆÃouãrs_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
);

798 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

799 
UIP_ICMP_BUF
->
ty≥
 = 
ICMP6_RS
;

800 
UIP_ICMP_BUF
->
icode
 = 0;

801 
UIP_IP_BUF
->
Àn
[0] = 0;

803 if(
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)) {

804 
UIP_IP_BUF
->
Àn
[1] = 
UIP_ICMPH_LEN
 + 
UIP_ND6_RS_LEN
;

805 
uù_Àn
 = 
uù_l3_icmp_hdr_Àn
 + 
UIP_ND6_RS_LEN
;

807 
uù_Àn
 = 
uù_l3_icmp_hdr_Àn
 + 
UIP_ND6_RS_LEN
 + 
UIP_ND6_OPT_LLAO_LEN
;

808 
UIP_IP_BUF
->
Àn
[1] =

809 
UIP_ICMPH_LEN
 + 
UIP_ND6_RS_LEN
 + 
UIP_ND6_OPT_LLAO_LEN
;

811 
	`¸óã_Œao
(&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
 + 
UIP_ND6_RS_LEN
],

812 
UIP_ND6_OPT_SLLAO
);

815 
UIP_ICMP_BUF
->
icmpchksum
 = 0;

816 
UIP_ICMP_BUF
->
icmpchksum
 = ~
	`uù_icmp6chksum
();

818 
	`UIP_STAT
(++
uù_°©
.
nd6
.
£¡
);

819 
	`PRINTF
("Sendin RSÅo ");

820 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

821 
	`PRINTF
(" from ");

822 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

823 
	`PRINTF
("\n");

825 
	}
}

837 
	$ø_öput
()

839 
	`PRINTF
("Received RA from ");

840 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

841 
	`PRINTF
("Åo ");

842 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

843 
	`PRINTF
("\n");

844 
	`UIP_STAT
(++
uù_°©
.
nd6
.
ªcv
);

846 #i‡
UIP_CONF_IPV6_CHECKS


847 if((
UIP_IP_BUF
->
âl
 !
UIP_ND6_HOP_LIMIT
) ||

848 (!
	`uù_is_addr_lökloˇl
(&
UIP_IP_BUF
->
§cùaddr
)) ||

849 (
UIP_ICMP_BUF
->
icode
 != 0)) {

850 
	`PRINTF
("RAÑeceived is bad");

851 
disˇrd
;

855 if(
UIP_ND6_RA_BUF
->
cur_âl
 != 0) {

856 
uù_ds6_if
.
cur_h›_limô
 = 
UIP_ND6_RA_BUF
->
cur_âl
;

857 
	`PRINTF
("uù_ds6_if.cur_h›_limô %u\n", 
uù_ds6_if
.
cur_h›_limô
);

860 if(
UIP_ND6_RA_BUF
->
ªachabÀ_time
 != 0) {

861 if(
uù_ds6_if
.
ba£_ªachabÀ_time
 !=

862 
	`uù_¡ohl
(
UIP_ND6_RA_BUF
->
ªachabÀ_time
)) {

863 
uù_ds6_if
.
ba£_ªachabÀ_time
 = 
	`uù_¡ohl
(
UIP_ND6_RA_BUF
->
ªachabÀ_time
);

864 
uù_ds6_if
.
ªachabÀ_time
 = 
	`uù_ds6_compuã_ªachabÀ_time
();

867 if(
UIP_ND6_RA_BUF
->
ªå™s_timî
 != 0) {

868 
uù_ds6_if
.
ªå™s_timî
 = 
	`uù_¡ohl
(
UIP_ND6_RA_BUF
->retrans_timer);

872 
nd6_›t_off£t
 = 
UIP_ND6_RA_LEN
;

873 
uù_l3_icmp_hdr_Àn
 + 
nd6_›t_off£t
 < 
uù_Àn
) {

874 if(
UIP_ND6_OPT_HDR_BUF
->
Àn
 == 0) {

875 
	`PRINTF
("RAÑeceived is bad");

876 
disˇrd
;

878 
UIP_ND6_OPT_HDR_BUF
->
ty≥
) {

879 
UIP_ND6_OPT_SLLAO
:

880 
	`PRINTF
("Processing SLLAO option in RA\n");

881 
nd6_›t_Œao
 = (
uöt8_t
 *Ë
UIP_ND6_OPT_HDR_BUF
;

882 
nbr
 = 
	`uù_ds6_nbr_lookup
(&
UIP_IP_BUF
->
§cùaddr
);

883 if(
nbr
 =
NULL
) {

884 
uù_Œaddr_t
 
Œaddr_Æig√d
;

885 
	`exåa˘_Œaddr_Æig√d
(&
Œaddr_Æig√d
);

886 
nbr
 = 
	`uù_ds6_nbr_add
(&
UIP_IP_BUF
->
§cùaddr
, &
Œaddr_Æig√d
,

887 1, 
NBR_STALE
, 
NBR_TABLE_REASON_IPV6_ND
, 
NULL
);

889 
uù_Œaddr_t
 *
Œaddr
 = (uù_Œaddr_à*)
	`uù_ds6_nbr_gë_Œ
(
nbr
);

890 if(
nbr
->
°©e
 =
NBR_INCOMPLETE
) {

891 
nbr
->
°©e
 = 
NBR_STALE
;

893 if(
	`memcmp
(&
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
],

894 
Œaddr
, 
UIP_LLADDR_LEN
) != 0) {

895 
	`mem˝y
(
Œaddr
, &
nd6_›t_Œao
[
UIP_ND6_OPT_DATA_OFFSET
],

896 
UIP_LLADDR_LEN
);

897 
nbr
->
°©e
 = 
NBR_STALE
;

899 
nbr
->
i§ouãr
 = 1;

902 
UIP_ND6_OPT_MTU
:

903 
	`PRINTF
("Processing MTU option in RA\n");

904 
uù_ds6_if
.
lök_mtu
 =

905 
	`uù_¡ohl
(((
uù_nd6_›t_mtu
 *Ë
UIP_ND6_OPT_HDR_BUF
)->
mtu
);

907 
UIP_ND6_OPT_PREFIX_INFO
:

908 
	`PRINTF
("Processing PREFIX option in RA\n");

909 
nd6_›t_¥efix_öfo
 = (
uù_nd6_›t_¥efix_öfo
 *Ë
UIP_ND6_OPT_HDR_BUF
;

910 if((
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
) >=

911 
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
¥e„ºed…
))

912 && (!
	`uù_is_addr_lökloˇl
(&
nd6_›t_¥efix_öfo
->
¥efix
))) {

914 if(
nd6_›t_¥efix_öfo
->
Êag§e£rved1
 & 
UIP_ND6_RA_FLAG_ONLINK
) {

915 
¥efix
 =

916 
	`uù_ds6_¥efix_lookup
(&
nd6_›t_¥efix_öfo
->
¥efix
,

917 
nd6_›t_¥efix_öfo
->
¥eÊí
);

918 if(
¥efix
 =
NULL
) {

919 if(
nd6_›t_¥efix_öfo
->
vÆid…
 != 0) {

920 if(
nd6_›t_¥efix_öfo
->
vÆid…
 !
UIP_ND6_INFINITE_LIFETIME
) {

921 
¥efix
 = 
	`uù_ds6_¥efix_add
(&
nd6_›t_¥efix_öfo
->prefix,

922 
nd6_›t_¥efix_öfo
->
¥eÊí
,

923 
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->

924 
vÆid…
));

926 
¥efix
 = 
	`uù_ds6_¥efix_add
(&
nd6_›t_¥efix_öfo
->prefix,

927 
nd6_›t_¥efix_öfo
->
¥eÊí
, 0);

931 
nd6_›t_¥efix_öfo
->
vÆid…
) {

933 
	`uù_ds6_¥efix_rm
(
¥efix
);

935 
UIP_ND6_INFINITE_LIFETIME
:

936 
¥efix
->
isöföôe
 = 1;

939 
	`PRINTF
("UpdatingÅimer ofÖrefix ");

940 
	`PRINT6ADDR
(&
¥efix
->
ùaddr
);

941 
	`PRINTF
("Çew vÆuê%lu\n", 
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
));

942 
	`°imî_£t
(&
¥efix
->
vli„time
,

943 
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
));

944 
¥efix
->
isöföôe
 = 0;

951 if((
nd6_›t_¥efix_öfo
->
Êag§e£rved1
 & 
UIP_ND6_RA_FLAG_AUTONOMOUS
)

952 && (
nd6_›t_¥efix_öfo
->
vÆid…
 != 0)

953 && (
nd6_›t_¥efix_öfo
->
¥eÊí
 =
UIP_DEFAULT_PREFIX_LEN
)) {

955 
	`uù_ùaddr_c›y
(&
ùaddr
, &
nd6_›t_¥efix_öfo
->
¥efix
);

956 
	`uù_ds6_£t_addr_iid
(&
ùaddr
, &
uù_Œaddr
);

957 
addr
 = 
	`uù_ds6_addr_lookup
(&
ùaddr
);

958 if((
addr
 !
NULL
Ë&& (addr->
ty≥
 =
ADDR_AUTOCONF
)) {

959 if(
nd6_›t_¥efix_öfo
->
vÆid…
 !
UIP_ND6_INFINITE_LIFETIME
) {

961 if((
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
) > 2 * 60 * 60) ||

962 (
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
) >

963 
	`°imî_ªmaöög
(&
addr
->
vli„time
))) {

964 
	`PRINTF
("UpdatingÅimer ofáddress ");

965 
	`PRINT6ADDR
(&
addr
->
ùaddr
);

966 
	`PRINTF
("Çew value %lu\n",

967 
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
));

968 
	`°imî_£t
(&
addr
->
vli„time
,

969 
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
));

971 
	`°imî_£t
(&
addr
->
vli„time
, 2 * 60 * 60);

972 
	`PRINTF
("UpdatingÅimer ofáddress ");

973 
	`PRINT6ADDR
(&
addr
->
ùaddr
);

974 
	`PRINTF
("Çew value %lu\n", ()(2 * 60 * 60));

976 
addr
->
isöföôe
 = 0;

978 
addr
->
isöföôe
 = 1;

981 if(
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
) ==

982 
UIP_ND6_INFINITE_LIFETIME
) {

983 
	`uù_ds6_addr_add
(&
ùaddr
, 0, 
ADDR_AUTOCONF
);

985 
	`uù_ds6_addr_add
(&
ùaddr
, 
	`uù_¡ohl
(
nd6_›t_¥efix_öfo
->
vÆid…
),

986 
ADDR_AUTOCONF
);

993 #i‡
UIP_ND6_RA_RDNSS


994 
UIP_ND6_OPT_RDNSS
:

995 if(
UIP_ND6_RA_BUF
->
Êags_ª£rved
 & (
UIP_ND6_O_FLAG
 << 6)) {

996 
	`PRINTF
("Processing RDNSS option\n");

997 
uöt8_t
 
«ddr
 = (
UIP_ND6_OPT_RDNSS_BUF
->
Àn
 - 1) / 2;

998 
uù_ùaddr_t
 *
ù
 = (uù_ùaddr_à*)(&
UIP_ND6_OPT_RDNSS_BUF
->ip);

999 
	`PRINTF
("gŸ %dÇame£rvîs\n", 
«ddr
);

1000 
«ddr
-- > 0) {

1001 
	`PRINTF
("Çameserver: ");

1002 
	`PRINT6ADDR
(
ù
);

1003 
	`PRINTF
("Üi„time: %lx\n", 
	`uù_¡ohl
(
UIP_ND6_OPT_RDNSS_BUF
->
li„time
));

1004 
	`uù_«me£rvî_upd©e
(
ù
, 
	`uù_¡ohl
(
UIP_ND6_OPT_RDNSS_BUF
->
li„time
));

1005 
ù
++;

1011 
	`PRINTF
("ND optionÇot supported in RA");

1014 
nd6_›t_off£t
 +(
UIP_ND6_OPT_HDR_BUF
->
Àn
 << 3);

1017 
de‰t
 = 
	`uù_ds6_de‰t_lookup
(&
UIP_IP_BUF
->
§cùaddr
);

1018 if(
UIP_ND6_RA_BUF
->
rouãr_li„time
 != 0) {

1019 if(
nbr
 !
NULL
) {

1020 
nbr
->
i§ouãr
 = 1;

1022 if(
de‰t
 =
NULL
) {

1023 
	`uù_ds6_de‰t_add
(&
UIP_IP_BUF
->
§cùaddr
,

1025 )(
	`uù_¡ohs
(
UIP_ND6_RA_BUF
->
rouãr_li„time
)));

1027 
	`°imî_£t
(&(
de‰t
->
li„time
),

1028 ()(
	`uù_¡ohs
(
UIP_ND6_RA_BUF
->
rouãr_li„time
)));

1031 if(
de‰t
 !
NULL
) {

1032 
	`uù_ds6_de‰t_rm
(
de‰t
);

1036 #i‡
UIP_CONF_IPV6_QUEUE_PKT


1045 if(
nbr
 !
NULL
 && 
	`uù_∑ckëqueue_buÊí
(&nbr->
∑ckëh™dÀ
) != 0) {

1046 
uù_Àn
 = 
	`uù_∑ckëqueue_buÊí
(&
nbr
->
∑ckëh™dÀ
);

1047 
	`mem˝y
(
UIP_IP_BUF
, 
	`uù_∑ckëqueue_buf
(&
nbr
->
∑ckëh™dÀ
), 
uù_Àn
);

1048 
	`uù_∑ckëqueue_‰ì
(&
nbr
->
∑ckëh™dÀ
);

1054 
disˇrd
:

1055 
	`uù_˛ór_buf
();

1057 
	}
}

1061 #i‡
UIP_ND6_SEND_NA


1062 
UIP_ICMP6_HANDLER
(
ns_öput_h™dÀr
, 
ICMP6_NS
, 
UIP_ICMP6_HANDLER_CODE_ANY
,

1063 
ns_öput
);

1064 
UIP_ICMP6_HANDLER
(
«_öput_h™dÀr
, 
ICMP6_NA
, 
UIP_ICMP6_HANDLER_CODE_ANY
,

1065 
«_öput
);

1068 #i‡
UIP_CONF_ROUTER
 && 
UIP_ND6_SEND_RA


1069 
UIP_ICMP6_HANDLER
(
rs_öput_h™dÀr
, 
ICMP6_RS
, 
UIP_ICMP6_HANDLER_CODE_ANY
,

1070 
rs_öput
);

1073 #i‡!
UIP_CONF_ROUTER


1074 
UIP_ICMP6_HANDLER
(
ø_öput_h™dÀr
, 
ICMP6_RA
, 
UIP_ICMP6_HANDLER_CODE_ANY
,

1075 
ø_öput
);

1079 
	$uù_nd6_öô
()

1082 #i‡
UIP_ND6_SEND_NA


1084 
	`uù_icmp6_ªgi°î_öput_h™dÀr
(&
ns_öput_h™dÀr
);

1091 
	`uù_icmp6_ªgi°î_öput_h™dÀr
(&
«_öput_h™dÀr
);

1095 #i‡
UIP_CONF_ROUTER
 && 
UIP_ND6_SEND_RA


1097 
	`uù_icmp6_ªgi°î_öput_h™dÀr
(&
rs_öput_h™dÀr
);

1100 #i‡!
UIP_CONF_ROUTER


1102 
	`uù_icmp6_ªgi°î_öput_h™dÀr
(&
ø_öput_h™dÀr
);

1104 
	}
}

	@uip-nd6.h

45 #i‚de‡
UIP_ND6_H_


46 
	#UIP_ND6_H_


	)

48 
	~"√t/ù/uù.h
"

49 
	~"sys/°imî.h
"

55 
	#UIP_ND6_HOP_LIMIT
 255

	)

57 
	#UIP_ND6_INFINITE_LIFETIME
 0xFFFFFFFF

	)

63 
	#UIP_ND6_MAX_RTR_SOLICITATION_DELAY
 1

	)

65 
	#UIP_ND6_RTR_SOLICITATION_INTERVAL
 4

	)

67 
	#UIP_ND6_MAX_RTR_SOLICITATIONS
 3

	)

72 #i‚de‡
UIP_CONF_ND6_SEND_RA


73 
	#UIP_ND6_SEND_RA
 1

	)

75 
	#UIP_ND6_SEND_RA
 
UIP_CONF_ND6_SEND_RA


	)

77 #i‚de‡
UIP_CONF_ND6_SEND_NA


78 
	#UIP_ND6_SEND_NA
 1

	)

80 
	#UIP_ND6_SEND_NA
 
UIP_CONF_ND6_SEND_NA


	)

82 #i‚de‡
UIP_CONF_ND6_MAX_RA_INTERVAL


83 
	#UIP_ND6_MAX_RA_INTERVAL
 600

	)

85 
	#UIP_ND6_MAX_RA_INTERVAL
 
UIP_CONF_ND6_MAX_RA_INTERVAL


	)

87 #i‚de‡
UIP_CONF_ND6_MIN_RA_INTERVAL


88 
	#UIP_ND6_MIN_RA_INTERVAL
 (
UIP_ND6_MAX_RA_INTERVAL
 / 3)

	)

90 
	#UIP_ND6_MIN_RA_INTERVAL
 
UIP_CONF_ND6_MIN_RA_INTERVAL


	)

92 
	#UIP_ND6_M_FLAG
 0

	)

93 
	#UIP_ND6_O_FLAG
 (
UIP_ND6_RA_RDNSS
 || 
UIP_ND6_RA_DNSSL
)

	)

94 
	#UIP_ND6_ROUTER_LIFETIME
 3 * 
UIP_ND6_MAX_RA_INTERVAL


	)

96 
	#UIP_ND6_MAX_INITIAL_RA_INTERVAL
 16

	)

97 
	#UIP_ND6_MAX_INITIAL_RAS
 3

	)

98 #i‚de‡
UIP_CONF_ND6_MIN_DELAY_BETWEEN_RAS


99 
	#UIP_ND6_MIN_DELAY_BETWEEN_RAS
 3

	)

101 
	#UIP_ND6_MIN_DELAY_BETWEEN_RAS
 
UIP_CONF_ND6_MIN_DELAY_BETWEEN_RAS


	)

104 
	#UIP_ND6_MAX_RA_DELAY_TIME_MS
 500

	)

107 #i‚de‡
UIP_CONF_ND6_DEF_MAXDADNS


109 #i‡
UIP_CONF_LL_802154


110 
	#UIP_ND6_DEF_MAXDADNS
 0

	)

112 
	#UIP_ND6_DEF_MAXDADNS
 
UIP_ND6_SEND_NA


	)

115 
	#UIP_ND6_DEF_MAXDADNS
 
UIP_CONF_ND6_DEF_MAXDADNS


	)

119 
	#UIP_ND6_MAX_MULTICAST_SOLICIT
 3

	)

121 #ifde‡
UIP_CONF_ND6_MAX_UNICAST_SOLICIT


122 
	#UIP_ND6_MAX_UNICAST_SOLICIT
 
UIP_CONF_ND6_MAX_UNICAST_SOLICIT


	)

124 
	#UIP_ND6_MAX_UNICAST_SOLICIT
 3

	)

127 #ifde‡
UIP_CONF_ND6_REACHABLE_TIME


128 
	#UIP_ND6_REACHABLE_TIME
 
UIP_CONF_ND6_REACHABLE_TIME


	)

130 
	#UIP_ND6_REACHABLE_TIME
 30000

	)

133 #ifde‡
UIP_CONF_ND6_RETRANS_TIMER


134 
	#UIP_ND6_RETRANS_TIMER
 
UIP_CONF_ND6_RETRANS_TIMER


	)

136 
	#UIP_ND6_RETRANS_TIMER
 1000

	)

139 
	#UIP_ND6_DELAY_FIRST_PROBE_TIME
 5

	)

140 
	#UIP_ND6_MIN_RANDOM_FACTOR
(
x
Ë(x / 2)

	)

141 
	#UIP_ND6_MAX_RANDOM_FACTOR
(
x
Ë((xË+ (xË/ 2)

	)

147 #i‚de‡
UIP_CONF_ND6_RA_RDNSS


148 
	#UIP_ND6_RA_RDNSS
 0

	)

150 
	#UIP_ND6_RA_RDNSS
 
UIP_CONF_ND6_RA_RDNSS


	)

153 #i‚de‡
UIP_CONF_ND6_RA_DNSSL


154 
	#UIP_ND6_RA_DNSSL
 0

	)

156 #îr‹ 
NŸ
 
im∂emíãd


157 
	#UIP_ND6_RA_DNSSL
 
UIP_CONF_ND6_RA_DNSSL


	)

164 
	#UIP_ND6_OPT_SLLAO
 1

	)

165 
	#UIP_ND6_OPT_TLLAO
 2

	)

166 
	#UIP_ND6_OPT_PREFIX_INFO
 3

	)

167 
	#UIP_ND6_OPT_REDIRECTED_HDR
 4

	)

168 
	#UIP_ND6_OPT_MTU
 5

	)

169 
	#UIP_ND6_OPT_RDNSS
 25

	)

170 
	#UIP_ND6_OPT_DNSSL
 31

	)

175 
	#UIP_ND6_OPT_TYPE_OFFSET
 0

	)

176 
	#UIP_ND6_OPT_LEN_OFFSET
 1

	)

177 
	#UIP_ND6_OPT_DATA_OFFSET
 2

	)

181 
	#UIP_ND6_NA_LEN
 20

	)

182 
	#UIP_ND6_NS_LEN
 20

	)

183 
	#UIP_ND6_RA_LEN
 12

	)

184 
	#UIP_ND6_RS_LEN
 4

	)

190 
	#UIP_ND6_OPT_HDR_LEN
 2

	)

191 
	#UIP_ND6_OPT_PREFIX_INFO_LEN
 32

	)

192 
	#UIP_ND6_OPT_MTU_LEN
 8

	)

193 
	#UIP_ND6_OPT_RDNSS_LEN
 1

	)

194 
	#UIP_ND6_OPT_DNSSL_LEN
 1

	)

198 #i‡
UIP_CONF_LL_802154


200 
	#UIP_ND6_OPT_SHORT_LLAO_LEN
 8

	)

201 
	#UIP_ND6_OPT_LONG_LLAO_LEN
 16

	)

203 
	#UIP_ND6_OPT_LLAO_LEN
 
UIP_ND6_OPT_LONG_LLAO_LEN


	)

205 #i‡
UIP_CONF_LL_80211


208 
	#UIP_ND6_OPT_LLAO_LEN
 8

	)

211 
	#UIP_ND6_OPT_LLAO_LEN
 8

	)

219 
	#UIP_ND6_NA_FLAG_ROUTER
 0x80

	)

220 
	#UIP_ND6_NA_FLAG_SOLICITED
 0x40

	)

221 
	#UIP_ND6_NA_FLAG_OVERRIDE
 0x20

	)

222 
	#UIP_ND6_RA_FLAG_ONLINK
 0x80

	)

223 
	#UIP_ND6_RA_FLAG_AUTONOMOUS
 0x40

	)

236 
	suù_nd6_ns
 {

237 
uöt32_t
 
	mª£rved
;

238 
uù_ùaddr_t
 
	mtgtùaddr
;

239 } 
	tuù_nd6_ns
;

246 
	suù_nd6_«
 {

247 
uöt8_t
 
	mÊag§e£rved
;

248 
uöt8_t
 
	mª£rved
[3];

249 
uù_ùaddr_t
 
	mtgtùaddr
;

250 } 
	tuù_nd6_«
;

257 
	suù_nd6_rs
 {

258 
uöt32_t
 
	mª£rved
;

259 } 
	tuù_nd6_rs
;

266 
	suù_nd6_ø
 {

267 
uöt8_t
 
	mcur_âl
;

268 
uöt8_t
 
	mÊags_ª£rved
;

269 
uöt16_t
 
	mrouãr_li„time
;

270 
uöt32_t
 
	mªachabÀ_time
;

271 
uöt32_t
 
	mªå™s_timî
;

272 } 
	tuù_nd6_ø
;

279 
	suù_nd6_ªdúe˘
 {

280 
uöt32_t
 
	mª£rved
;

281 
uù_ùaddr_t
 
	mtgtùaddªss
;

282 
uù_ùaddr_t
 
	mde°ùaddªss
;

283 } 
	tuù_nd6_ªdúe˘
;

292 
	suù_nd6_›t_hdr
 {

293 
uöt8_t
 
	mty≥
;

294 
uöt8_t
 
	mÀn
;

295 } 
	tuù_nd6_›t_hdr
;

298 
	suù_nd6_›t_¥efix_öfo
 {

299 
uöt8_t
 
	mty≥
;

300 
uöt8_t
 
	mÀn
;

301 
uöt8_t
 
	m¥eÊí
;

302 
uöt8_t
 
	mÊag§e£rved1
;

303 
uöt32_t
 
	mvÆid…
;

304 
uöt32_t
 
	m¥e„ºed…
;

305 
uöt32_t
 
	mª£rved2
;

306 
uù_ùaddr_t
 
	m¥efix
;

307 } 
	tuù_nd6_›t_¥efix_öfo
 ;

310 
	suù_nd6_›t_mtu
 {

311 
uöt8_t
 
	mty≥
;

312 
uöt8_t
 
	mÀn
;

313 
uöt16_t
 
	mª£rved
;

314 
uöt32_t
 
	mmtu
;

315 } 
	tuù_nd6_›t_mtu
;

318 
	suù_nd6_›t_dns
 {

319 
uöt8_t
 
	mty≥
;

320 
uöt8_t
 
	mÀn
;

321 
uöt16_t
 
	mª£rved
;

322 
uöt32_t
 
	mli„time
;

323 
uù_ùaddr_t
 
	mù
;

324 } 
	tuù_nd6_›t_dns
;

327 
	suù_nd6_›t_ªdúe˘ed_hdr
 {

328 
uöt8_t
 
	mty≥
;

329 
uöt8_t
 
	mÀn
;

330 
uöt8_t
 
	mª£rved
[6];

331 } 
	tuù_nd6_›t_ªdúe˘ed_hdr
;

360 
uù_nd6_ns_öput
();

383 
uù_nd6_ns_ouçut
(
uù_ùaddr_t
 *
§c
, uù_ùaddr_à*
de°
, uù_ùaddr_à*
tgt
);

385 #i‡
UIP_CONF_ROUTER


386 #i‡
UIP_ND6_SEND_RA


392 
uù_nd6_ø_ouçut
(
uù_ùaddr_t
 *
de°
);

407 
uù_nd6_rs_ouçut
();

412 
uù_nd6_öô
();

417 
uù_≠p£rvî_addr_gë
(
uù_ùaddr_t
 *
ùaddr
);

	@uip6.c

74 
	~"sys/cc.h
"

75 
	~"√t/ù/uù.h
"

76 
	~"√t/ù/uù›t.h
"

77 
	~"√t/ùv6/uù-icmp6.h
"

78 
	~"√t/ùv6/uù-nd6.h
"

79 
	~"√t/ùv6/uù-ds6.h
"

80 
	~"√t/ùv6/mu…iˇ°/uù-mˇ°6.h
"

82 #i‡
DUAL_RADIO


83 #ifde‡
ZOLERTIA_Z1


84 
	~"../∂©f‹m/z1/duÆ_ødio.h
"

86 
	~"../∂©f‹m/cooja/duÆ_c⁄f.h
"

91 
	~<°rög.h
>

97 
	~"ùv6_debug.h
"

98 
	#DEBUG
 
DEBUG_UIP6


	)

99 
	~"√t/ù/uù-debug.h
"

102 #i‡
ANA_UIP6


103 
	#ANA
(...Ë
	`PRINTF
(
__VA_ARGS__
)

	)

105 
	#ANA
(...)

	)

108 #i‡
UIP_CONF_IPV6_RPL


109 
	~"Ωl/Ωl.h
"

112 #i‡
UIP_LOGGING
 == 1

113 
	~<°dio.h
>

114 
uù_log
(*
msg
);

115 
	#UIP_LOG
(
m
Ë
	`uù_log
(m)

	)

117 
	#UIP_LOG
(
m
)

	)

120 #i‡
UIP_STATISTICS
 == 1

121 
uù_°©s
 
	guù_°©
;

132 #i‡
UIP_CONF_LL_802154


133 
uù_Œaddr_t
 
	guù_Œaddr
;

134 #i‡
DUAL_RADIO


135 
uù_Œaddr_t
 
	guù_l⁄g_Œaddr
;

138 
uù_Œaddr_t
 
	guù_Œaddr
 = {{0x00,0x06,0x98,0x00,0x02,0x32}};

156 
uöt8_t
 *
	guù_√xt_hdr
;

158 
uöt8_t
 
	guù_ext_bôm≠
 = 0;

163 
uöt8_t
 
	guù_ext_Àn
 = 0;

165 
uöt8_t
 
	guù_ext_›t_off£t
 = 0;

175 
	#FBUF
 ((
uù_t˝ù_hdr
 *)&
uù_ªassbuf
[0])

	)

176 
	#UIP_IP_BUF
 ((
uù_ù_hdr
 *)&
uù_buf
[
UIP_LLH_LEN
])

	)

177 
	#UIP_ICMP_BUF
 ((
uù_icmp_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
])

	)

178 
	#UIP_UDP_BUF
 ((
uù_udp_hdr
 *)&
uù_buf
[
UIP_LLH_LEN
 + 
UIP_IPH_LEN
])

	)

179 
	#UIP_TCP_BUF
 ((
uù_t˝_hdr
 *)&
uù_buf
[
UIP_LLH_LEN
 + 
UIP_IPH_LEN
])

	)

180 
	#UIP_EXT_BUF
 ((
uù_ext_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
])

	)

181 
	#UIP_ROUTING_BUF
 ((
uù_routög_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
])

	)

182 
	#UIP_FRAG_BUF
 ((
uù_‰ag_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
])

	)

183 
	#UIP_HBHO_BUF
 ((
uù_hbho_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
])

	)

184 
	#UIP_DESTO_BUF
 ((
uù_de°o_hdr
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
])

	)

185 
	#UIP_EXT_HDR_OPT_BUF
 ((
uù_ext_hdr_›t
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
 + 
uù_ext_›t_off£t
])

	)

186 
	#UIP_EXT_HDR_OPT_PADN_BUF
 ((
uù_ext_hdr_›t_∑dn
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
 + 
uù_ext_›t_off£t
])

	)

187 #i‡
UIP_CONF_IPV6_RPL


188 
	#UIP_EXT_HDR_OPT_RPL_BUF
 ((
uù_ext_hdr_›t_Ωl
 *)&
uù_buf
[
uù_l2_l3_hdr_Àn
 + 
uù_ext_›t_off£t
])

	)

190 
	#UIP_ICMP6_ERROR_BUF
 ((
uù_icmp6_îr‹
 *)&
uù_buf
[
uù_l2_l3_icmp_hdr_Àn
])

	)

197 #i‚de‡
UIP_CONF_EXTERNAL_BUFFER


198 
uù_buf_t
 
	guù_Æig√d_buf
;

202 *
	guù_≠pd©a
;

204 *
	guù_ßµd©a
;

206 #i‡
UIP_URGDATA
 > 0

208 *
	guù_urgd©a
;

209 
uöt16_t
 
	guù_urgÀn
, 
	guù_surgÀn
;

213 
uöt16_t
 
	guù_Àn
, 
	guù_¶í
;

225 
uöt8_t
 
	guù_Êags
;

228 
uù_c⁄n
 *
	guù_c⁄n
;

231 #i‡(
UIP_TCP
 || 
UIP_UDP
)

232 
uöt8_t
 
	gc
;

235 #i‡
UIP_ACTIVE_OPEN
 || 
UIP_UDP


237 
uöt16_t
 
	gœ°p‹t
;

249 
	#TCP_FIN
 0x01

	)

250 
	#TCP_SYN
 0x02

	)

251 
	#TCP_RST
 0x04

	)

252 
	#TCP_PSH
 0x08

	)

253 
	#TCP_ACK
 0x10

	)

254 
	#TCP_URG
 0x20

	)

255 
	#TCP_CTL
 0x3f

	)

257 
	#TCP_OPT_END
 0

	)

258 
	#TCP_OPT_NOOP
 1

	)

259 
	#TCP_OPT_MSS
 2

	)

261 
	#TCP_OPT_MSS_LEN
 4

	)

267 #i‡
UIP_TCP


269 
uù_c⁄n
 
	guù_c⁄ns
[
UIP_CONNS
];

272 
uöt16_t
 
	guù_li°íp‹ts
[
UIP_LISTENPORTS
];

275 
uöt8_t
 
	giss
[4];

278 
uöt8_t
 
	guù_acc32
[4];

279 
uöt8_t
 
	g›t
;

280 
uöt16_t
 
	gtmp16
;

290 #i‡
UIP_UDP


291 
uù_udp_c⁄n
 *
	guù_udp_c⁄n
;

292 
uù_udp_c⁄n
 
	guù_udp_c⁄ns
[
UIP_UDP_CONNS
];

302 #i‡
UIP_CONF_ICMP6


304 
uù_icmp6_c⁄n
 
	guù_icmp6_c⁄ns
;

311 #i‡
UIP_TCP


312 #i‡
UIP_ARCH_ADD32


313 
uù_add32
(
uöt8_t
 *
›32
, 
uöt16_t
 
›16
);

316 
	$uù_add32
(
uöt8_t
 *
›32
, 
uöt16_t
 
›16
)

318 
uù_acc32
[3] = 
›32
[3] + (
›16
 & 0xff);

319 
uù_acc32
[2] = 
›32
[2] + (
›16
 >> 8);

320 
uù_acc32
[1] = 
›32
[1];

321 
uù_acc32
[0] = 
›32
[0];

323 if(
uù_acc32
[2] < (
›16
 >> 8)) {

324 ++
uù_acc32
[1];

325 if(
uù_acc32
[1] == 0) {

326 ++
uù_acc32
[0];

331 if(
uù_acc32
[3] < (
›16
 & 0xff)) {

332 ++
uù_acc32
[2];

333 if(
uù_acc32
[2] == 0) {

334 ++
uù_acc32
[1];

335 if(
uù_acc32
[1] == 0) {

336 ++
uù_acc32
[0];

340 
	}
}

344 #i‡! 
UIP_ARCH_CHKSUM


346 
uöt16_t


347 
	$chksum
(
uöt16_t
 
sum
, c⁄° 
uöt8_t
 *
d©a
, uöt16_à
Àn
)

349 
uöt16_t
 
t
;

350 c⁄° 
uöt8_t
 *
d©≠å
;

351 c⁄° 
uöt8_t
 *
œ°_byã
;

353 
d©≠å
 = 
d©a
;

354 
œ°_byã
 = 
d©a
 + 
Àn
 - 1;

356 
d©≠å
 < 
œ°_byã
) {

357 
t
 = (
d©≠å
[0] << 8) + dataptr[1];

358 
sum
 +
t
;

359 if(
sum
 < 
t
) {

360 
sum
++;

362 
d©≠å
 += 2;

365 if(
d©≠å
 =
œ°_byã
) {

366 
t
 = (
d©≠å
[0] << 8) + 0;

367 
sum
 +
t
;

368 if(
sum
 < 
t
) {

369 
sum
++;

374  
sum
;

375 
	}
}

377 
uöt16_t


378 
	$uù_chksum
(
uöt16_t
 *
d©a
, uöt16_à
Àn
)

380  
	`uù_ht⁄s
(
	`chksum
(0, (
uöt8_t
 *)
d©a
, 
Àn
));

381 
	}
}

383 #i‚de‡
UIP_ARCH_IPCHKSUM


384 
uöt16_t


385 
	$uù_ùchksum
()

387 
uöt16_t
 
sum
;

389 
sum
 = 
	`chksum
(0, &
uù_buf
[
UIP_LLH_LEN
], 
UIP_IPH_LEN
);

390 
	`PRINTF
("uù_ùchksum: sum 0x%04x\n", 
sum
);

391  (
sum
 =0Ë? 0xfff‡: 
	`uù_ht⁄s
(sum);

392 
	}
}

395 
uöt16_t


396 
	$uµî_œyî_chksum
(
uöt8_t
 
¥Ÿo
)

407 vﬁ©ûê
uöt16_t
 
uµî_œyî_Àn
;

408 
uöt16_t
 
sum
;

410 
uµî_œyî_Àn
 = (((
uöt16_t
)(
UIP_IP_BUF
->
Àn
[0]Ë<< 8Ë+ UIP_IP_BUF->Àn[1] - 
uù_ext_Àn
);

412 
	`PRINTF
("UµîÜayî checksumÜí: %d from: %d\n", 
uµî_œyî_Àn
,

413 
UIP_IPH_LEN
 + 
UIP_LLH_LEN
 + 
uù_ext_Àn
);

417 
sum
 = 
uµî_œyî_Àn
 + 
¥Ÿo
;

419 
sum
 = 
	`chksum
(sum, (
uöt8_t
 *)&
UIP_IP_BUF
->
§cùaddr
, 2 * (
uù_ùaddr_t
));

422 
sum
 = 
	`chksum
(sum, &
uù_buf
[
UIP_IPH_LEN
 + 
UIP_LLH_LEN
 + 
uù_ext_Àn
],

423 
uµî_œyî_Àn
);

425  (
sum
 =0Ë? 0xfff‡: 
	`uù_ht⁄s
(sum);

426 
	}
}

428 
uöt16_t


429 
	$uù_icmp6chksum
()

431  
	`uµî_œyî_chksum
(
UIP_PROTO_ICMP6
);

433 
	}
}

435 #i‡
UIP_TCP


436 
uöt16_t


437 
	$uù_t˝chksum
()

439  
	`uµî_œyî_chksum
(
UIP_PROTO_TCP
);

440 
	}
}

443 #i‡
UIP_UDP
 && 
UIP_UDP_CHECKSUMS


444 
uöt16_t


445 
	$uù_udpchksum
()

447  
	`uµî_œyî_chksum
(
UIP_PROTO_UDP
);

448 
	}
}

453 
	$uù_öô
()

456 
	`uù_ds6_öô
();

457 
	`uù_icmp6_öô
();

458 
	`uù_nd6_öô
();

460 #i‡
UIP_TCP


461 
c
 = 0; c < 
UIP_LISTENPORTS
; ++c) {

462 
uù_li°íp‹ts
[
c
] = 0;

464 
c
 = 0; c < 
UIP_CONNS
; ++c) {

465 
uù_c⁄ns
[
c
].
t˝°©eÊags
 = 
UIP_CLOSED
;

469 #i‡
UIP_ACTIVE_OPEN
 || 
UIP_UDP


470 
œ°p‹t
 = 1024;

473 #i‡
UIP_UDP


474 
c
 = 0; c < 
UIP_UDP_CONNS
; ++c) {

475 
uù_udp_c⁄ns
[
c
].
Õ‹t
 = 0;

479 #i‡
UIP_CONF_IPV6_MULTICAST


480 
UIP_MCAST6
.
	`öô
();

482 
	}
}

484 #i‡
UIP_TCP
 && 
UIP_ACTIVE_OPEN


485 
uù_c⁄n
 *

486 
	$uù_c⁄√˘
(c⁄° 
uù_ùaddr_t
 *
rùaddr
, 
uöt16_t
 
Ω‹t
)

488 
uù_c⁄n
 *
c⁄n
, *
cc⁄n
;

491 
agaö
:

492 ++
œ°p‹t
;

494 if(
œ°p‹t
 >= 32000) {

495 
œ°p‹t
 = 4096;

500 
c
 = 0; c < 
UIP_CONNS
; ++c) {

501 
c⁄n
 = &
uù_c⁄ns
[
c
];

502 if(
c⁄n
->
t˝°©eÊags
 !
UIP_CLOSED
 &&

503 
c⁄n
->
Õ‹t
 =
	`uù_ht⁄s
(
œ°p‹t
)) {

504 
agaö
;

508 
c⁄n
 = 0;

509 
c
 = 0; c < 
UIP_CONNS
; ++c) {

510 
cc⁄n
 = &
uù_c⁄ns
[
c
];

511 if(
cc⁄n
->
t˝°©eÊags
 =
UIP_CLOSED
) {

512 
c⁄n
 = 
cc⁄n
;

515 if(
cc⁄n
->
t˝°©eÊags
 =
UIP_TIME_WAIT
) {

516 if(
c⁄n
 == 0 ||

517 
cc⁄n
->
timî
 > 
c⁄n
->timer) {

518 
c⁄n
 = 
cc⁄n
;

523 if(
c⁄n
 == 0) {

527 
c⁄n
->
t˝°©eÊags
 = 
UIP_SYN_SENT
;

529 
c⁄n
->
¢d_nxt
[0] = 
iss
[0];

530 
c⁄n
->
¢d_nxt
[1] = 
iss
[1];

531 
c⁄n
->
¢d_nxt
[2] = 
iss
[2];

532 
c⁄n
->
¢d_nxt
[3] = 
iss
[3];

534 
c⁄n
->
rcv_nxt
[0] = 0;

535 
c⁄n
->
rcv_nxt
[1] = 0;

536 
c⁄n
->
rcv_nxt
[2] = 0;

537 
c⁄n
->
rcv_nxt
[3] = 0;

539 
c⁄n
->
öôülmss
 = c⁄n->
mss
 = 
UIP_TCP_MSS
;

541 
c⁄n
->
Àn
 = 1;

542 
c⁄n
->
ƒtx
 = 0;

543 
c⁄n
->
timî
 = 1;

544 
c⁄n
->
πo
 = 
UIP_RTO
;

545 
c⁄n
->
ß
 = 0;

546 
c⁄n
->
sv
 = 16;

547 
c⁄n
->
Õ‹t
 = 
	`uù_ht⁄s
(
œ°p‹t
);

548 
c⁄n
->
Ω‹t
 =Ñport;

549 
	`uù_ùaddr_c›y
(&
c⁄n
->
rùaddr
,Ñipaddr);

551  
c⁄n
;

552 
	}
}

556 
	$ªmove_ext_hdr
()

559 if(
uù_ext_Àn
 > 0) {

560 
	`PRINTF
("CuttingÉxt-header beforeÖrocessing (extlen: %d, uiplen: %d)\n",

561 
uù_ext_Àn
, 
uù_Àn
);

562 if(
uù_Àn
 < 
UIP_IPH_LEN
 + 
uù_ext_Àn
) {

563 
	`PRINTF
("ERROR: uip_lenÅoo short comparedÅoÉxtÜen\n");

564 
	`uù_˛ór_buf
();

567 
	`memmove
(((
uöt8_t
 *)
UIP_TCP_BUF
), (uöt8_à*)UIP_TCP_BUF + 
uù_ext_Àn
,

568 
uù_Àn
 - 
UIP_IPH_LEN
 - 
uù_ext_Àn
);

570 
uù_Àn
 -
uù_ext_Àn
;

573 
UIP_IP_BUF
->
Àn
[0] = (
uù_Àn
 - 
UIP_IPH_LEN
) >> 8;

574 
UIP_IP_BUF
->
Àn
[1] = (
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff;

575 
uù_ext_Àn
 = 0;

577 
	}
}

579 #i‡
UIP_UDP


580 
uù_udp_c⁄n
 *

581 
	$uù_udp_√w
(c⁄° 
uù_ùaddr_t
 *
rùaddr
, 
uöt16_t
 
Ω‹t
)

583 
uù_udp_c⁄n
 *
c⁄n
;

586 
agaö
:

587 ++
œ°p‹t
;

589 if(
œ°p‹t
 >= 32000) {

590 
œ°p‹t
 = 4096;

593 
c
 = 0; c < 
UIP_UDP_CONNS
; ++c) {

594 if(
uù_udp_c⁄ns
[
c
].
Õ‹t
 =
	`uù_ht⁄s
(
œ°p‹t
)) {

595 
agaö
;

599 
c⁄n
 = 0;

600 
c
 = 0; c < 
UIP_UDP_CONNS
; ++c) {

601 if(
uù_udp_c⁄ns
[
c
].
Õ‹t
 == 0) {

602 
c⁄n
 = &
uù_udp_c⁄ns
[
c
];

607 if(
c⁄n
 == 0) {

611 
c⁄n
->
Õ‹t
 = 
	`UIP_HTONS
(
œ°p‹t
);

612 
c⁄n
->
Ω‹t
 =Ñport;

613 if(
rùaddr
 =
NULL
) {

614 
	`mem£t
(&
c⁄n
->
rùaddr
, 0, (
uù_ùaddr_t
));

616 
	`uù_ùaddr_c›y
(&
c⁄n
->
rùaddr
,Ñipaddr);

618 
c⁄n
->
âl
 = 
uù_ds6_if
.
cur_h›_limô
;

620  
c⁄n
;

621 
	}
}

624 #i‡
UIP_TCP


626 
	$uù_u∆i°í
(
uöt16_t
 
p‹t
)

628 
c
 = 0; c < 
UIP_LISTENPORTS
; ++c) {

629 if(
uù_li°íp‹ts
[
c
] =
p‹t
) {

630 
uù_li°íp‹ts
[
c
] = 0;

634 
	}
}

637 
	$uù_li°í
(
uöt16_t
 
p‹t
)

639 
c
 = 0; c < 
UIP_LISTENPORTS
; ++c) {

640 if(
uù_li°íp‹ts
[
c
] == 0) {

641 
uù_li°íp‹ts
[
c
] = 
p‹t
;

645 
	}
}

649 #i‡
UIP_CONF_IPV6_REASSEMBLY


650 
	#UIP_REASS_BUFSIZE
 (
UIP_BUFSIZE
 - 
UIP_LLH_LEN
)

	)

652 
uöt8_t
 
	guù_ªassbuf
[
UIP_REASS_BUFSIZE
];

654 
uöt8_t
 
	guù_ªassbôm≠
[
UIP_REASS_BUFSIZE
 / (8 * 8)];

657 c⁄° 
uöt8_t
 
	gbôm≠_bôs
[8] = {0xff, 0x7f, 0x3f, 0x1f,

659 
uöt16_t
 
	guù_ªas¶í
;

660 
uöt8_t
 
	guù_ªassÊags
;

662 
	#UIP_REASS_FLAG_LASTFRAG
 0x01

	)

663 
	#UIP_REASS_FLAG_FIRSTFRAG
 0x02

	)

664 
	#UIP_REASS_FLAG_ERROR_MSG
 0x04

	)

677 
ëimî
 
	guù_ªass_timî
;

678 
uöt8_t
 
	guù_ªass_⁄
;

680 
uöt32_t
 
	guù_id
;

683 
	#IP_MF
 0x0001

	)

685 
uöt16_t


686 
	$uù_ªass
()

688 
uöt16_t
 
off£t
=0;

689 
uöt16_t
 
Àn
;

690 
uöt16_t
 
i
;

695 if(
uù_ªass_⁄
 == 0) {

696 
	`PRINTF
("StartingÑeassembly\n");

697 
	`mem˝y
(
FBUF
, 
UIP_IP_BUF
, 
uù_ext_Àn
 + 
UIP_IPH_LEN
);

699 
	`ëimî_£t
(&
uù_ªass_timî
, 
UIP_REASS_MAXAGE
*
CLOCK_SECOND
);

700 
uù_ªass_⁄
 = 1;

701 
uù_ªassÊags
 = 0;

702 
uù_id
 = 
UIP_FRAG_BUF
->
id
;

704 
	`mem£t
(
uù_ªassbôm≠
, 0, (uip_reassbitmap));

711 if(
	`uù_ùaddr_cmp
(&
FBUF
->
§cùaddr
, &
UIP_IP_BUF
->srcipaddr) &&

712 
	`uù_ùaddr_cmp
(&
FBUF
->
de°ùaddr
, &
UIP_IP_BUF
->destipaddr) &&

713 
UIP_FRAG_BUF
->
id
 =
uù_id
) {

714 
Àn
 = 
uù_Àn
 - 
uù_ext_Àn
 - 
UIP_IPH_LEN
 - 
UIP_FRAGH_LEN
;

715 
off£t
 = (
	`uù_¡ohs
(
UIP_FRAG_BUF
->
off£åesm‹e
) & 0xfff8);

717 
	`PRINTF
("À¿%d\n", 
Àn
);

718 
	`PRINTF
("off£à%d\n", 
off£t
);

719 if(
off£t
 == 0){

720 
uù_ªassÊags
 |
UIP_REASS_FLAG_FIRSTFRAG
;

726 *
uù_√xt_hdr
 = 
UIP_FRAG_BUF
->
√xt
;

727 
	`mem˝y
(
FBUF
, 
UIP_IP_BUF
, 
uù_ext_Àn
 + 
UIP_IPH_LEN
);

728 
	`PRINTF
("src ");

729 
	`PRINT6ADDR
(&
FBUF
->
§cùaddr
);

730 
	`PRINTF
("dest ");

731 
	`PRINT6ADDR
(&
FBUF
->
de°ùaddr
);

732 
	`PRINTF
("√xà%d\n", 
UIP_IP_BUF
->
¥Ÿo
);

738 if(
off£t
 > 
UIP_REASS_BUFSIZE
 ||

739 
off£t
 + 
Àn
 > 
UIP_REASS_BUFSIZE
) {

740 
uù_ªass_⁄
 = 0;

741 
	`ëimî_°›
(&
uù_ªass_timî
);

747 if((
	`uù_¡ohs
(
UIP_FRAG_BUF
->
off£åesm‹e
Ë& 
IP_MF
) == 0) {

748 
uù_ªassÊags
 |
UIP_REASS_FLAG_LASTFRAG
;

750 
uù_ªas¶í
 = 
off£t
 + 
Àn
;

751 
	`PRINTF
("LAST FRAGMENTÑós¶í %d\n", 
uù_ªas¶í
);

757 if(
Àn
 % 8 != 0){

758 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_PARAM_PROB
, 
ICMP6_PARAMPROB_HEADER
, 4);

759 
uù_ªassÊags
 |
UIP_REASS_FLAG_ERROR_MSG
;

762 
uù_ªass_⁄
 = 0;

763 
	`ëimî_°›
(&
uù_ªass_timî
);

764  
uù_Àn
;

770 
	`mem˝y
((
uöt8_t
 *)
FBUF
 + 
UIP_IPH_LEN
 + 
uù_ext_Àn
 + 
off£t
,

771 (
uöt8_t
 *)
UIP_FRAG_BUF
 + 
UIP_FRAGH_LEN
, 
Àn
);

774 if(
off£t
 >> 6 =(off£à+ 
Àn
) >> 6) {

775 
uù_ªassbôm≠
[
off£t
 >> 6] |=

776 
bôm≠_bôs
[(
off£t
 >> 3) & 7] &

777 ~
bôm≠_bôs
[((
off£t
 + 
Àn
) >> 3) & 7];

782 
uù_ªassbôm≠
[
off£t
 >> 6] |
bôm≠_bôs
[(offset >> 3) & 7];

784 
i
 = (1 + (
off£t
 >> 6)); i < ((off£à+ 
Àn
) >> 6); ++i) {

785 
uù_ªassbôm≠
[
i
] = 0xff;

787 
uù_ªassbôm≠
[(
off£t
 + 
Àn
) >> 6] |=

788 ~
bôm≠_bôs
[((
off£t
 + 
Àn
) >> 3) & 7];

795 if(
uù_ªassÊags
 & 
UIP_REASS_FLAG_LASTFRAG
) {

798 
i
 = 0; i < (
uù_ªas¶í
 >> 6); ++i) {

799 if(
uù_ªassbôm≠
[
i
] != 0xff) {

805 if(
uù_ªassbôm≠
[
uù_ªas¶í
 >> 6] !=

806 (
uöt8_t
)~
bôm≠_bôs
[(
uù_ªas¶í
 >> 3) & 7]) {

812 
uù_ªass_⁄
 = 0;

813 
	`ëimî_°›
(&
uù_ªass_timî
);

815 
uù_ªas¶í
 +
UIP_IPH_LEN
 + 
uù_ext_Àn
;

816 
	`mem˝y
(
UIP_IP_BUF
, 
FBUF
, 
uù_ªas¶í
);

817 
UIP_IP_BUF
->
Àn
[0] = ((
uù_ªas¶í
 - 
UIP_IPH_LEN
) >> 8);

818 
UIP_IP_BUF
->
Àn
[1] = ((
uù_ªas¶í
 - 
UIP_IPH_LEN
) & 0xff);

819 
	`PRINTF
("REASSEMBLED PAQUET %d (%d)\n", 
uù_ªas¶í
,

820 (
UIP_IP_BUF
->
Àn
[0] << 8) | UIP_IP_BUF->len[1]);

822  
uù_ªas¶í
;

826 
	`PRINTF
("AlreadyÑeassemblingánotherÖaquet\n");

829 
	}
}

832 
	$uù_ªass_ovî
()

836 
uù_ªass_⁄
 = 0;

837 
	`ëimî_°›
(&
uù_ªass_timî
);

839 if(
uù_ªassÊags
 & 
UIP_REASS_FLAG_FIRSTFRAG
){

840 
	`PRINTF
("FRAG INTERRUPTED TOO LATE\n");

850 
	`uù_˛ór_buf
();

851 
	`mem˝y
(
UIP_IP_BUF
, 
FBUF
, 
UIP_IPH_LEN
);

853 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_TIME_EXCEEDED
, 
ICMP6_TIME_EXCEED_REASSEMBLY
, 0);

855 
	`UIP_STAT
(++
uù_°©
.
ù
.
£¡
);

856 
uù_Êags
 = 0;

858 
	}
}

863 #i‡
UIP_TCP


865 
	$uù_add_rcv_nxt
(
uöt16_t
 
n
)

867 
	`uù_add32
(
uù_c⁄n
->
rcv_nxt
, 
n
);

868 
uù_c⁄n
->
rcv_nxt
[0] = 
uù_acc32
[0];

869 
uù_c⁄n
->
rcv_nxt
[1] = 
uù_acc32
[1];

870 
uù_c⁄n
->
rcv_nxt
[2] = 
uù_acc32
[2];

871 
uù_c⁄n
->
rcv_nxt
[3] = 
uù_acc32
[3];

872 
	}
}

879 
uöt8_t


880 
	$ext_hdr_›ti⁄s_¥o˚ss
()

887 
uù_ext_›t_off£t
 = 2;

888 
uù_ext_›t_off£t
 < ((
UIP_EXT_BUF
->
Àn
 << 3) + 8)) {

889 
UIP_EXT_HDR_OPT_BUF
->
ty≥
) {

895 
UIP_EXT_HDR_OPT_PAD1
:

896 
	`PRINTF
("Processing PAD1 option\n");

897 
uù_ext_›t_off£t
 += 1;

899 
UIP_EXT_HDR_OPT_PADN
:

900 
	`PRINTF
("Processing PADN option\n");

901 
uù_ext_›t_off£t
 +
UIP_EXT_HDR_OPT_PADN_BUF
->
›t_Àn
 + 2;

903 
UIP_EXT_HDR_OPT_RPL
:

912 #i‡
UIP_CONF_IPV6_RPL


913 
	`PRINTF
("Processing RPL option\n");

914 if(
	`Ωl_vîify_hódî
(
uù_ext_›t_off£t
)) {

915 
	`PRINTF
("RPL Option Error: Dropping Packet\n");

919 
uù_ext_›t_off£t
 +(
UIP_EXT_HDR_OPT_BUF
->
Àn
) + 2;

935 
	`PRINTF
("MSB %x\n", 
UIP_EXT_HDR_OPT_BUF
->
ty≥
);

936 
UIP_EXT_HDR_OPT_BUF
->
ty≥
 & 0xC0) {

942 if(
	`uù_is_addr_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
)) {

946 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_PARAM_PROB
, 
ICMP6_PARAMPROB_OPTION
,

947 (
uöt32_t
)
UIP_IPH_LEN
 + 
uù_ext_Àn
 + 
uù_ext_›t_off£t
);

951 
uù_ext_›t_off£t
 +
UIP_EXT_HDR_OPT_BUF
->
Àn
 + 2;

956 
	}
}

961 
	$uù_¥o˚ss
(
uöt8_t
 
Êag
)

963 
uù_ùaddr_t
 
udp_£nd_addr
;

964 
uù_ùaddr_t
 
t˝_£nd_addr
;

965 
uù_ùaddr_t
 
udp_öput_addr
;

966 
uù_ùaddr_t
 
t˝_öput_addr
;

968 #i‡
UIP_TCP


969 
uù_c⁄n
 *
uù_c⁄ƒ
 = uip_conn;

971 #i‡
UIP_UDP


972 if(
Êag
 =
UIP_UDP_SEND_CONN
) {

973 
udp_£nd
;

976 
uù_ßµd©a
 = 
uù_≠pd©a
 = &
uù_buf
[
UIP_IPTCPH_LEN
 + 
UIP_LLH_LEN
];

980 if(
Êag
 =
UIP_POLL_REQUEST
) {

981 #i‡
UIP_TCP


982 if((
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
Ë=
UIP_ESTABLISHED
 &&

983 !
	`uù_out°™dög
(
uù_c⁄ƒ
)) {

984 
uù_Êags
 = 
UIP_POLL
;

985 
	`UIP_APPCALL
();

986 
≠p£nd
;

987 #i‡
UIP_ACTIVE_OPEN


988 } if((
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
Ë=
UIP_SYN_SENT
) {

990 
UIP_TCP_BUF
->
Êags
 = 0;

991 
t˝_£nd_syn
;

994 
dr›
;

997 } if(
Êag
 =
UIP_TIMER
) {

999 #i‡
UIP_TCP


1000 
	`uù_˛ór_buf
();

1001 
uù_¶í
 = 0;

1004 if(++
iss
[3] == 0) {

1005 if(++
iss
[2] == 0) {

1006 if(++
iss
[1] == 0) {

1007 ++
iss
[0];

1018 if(
uù_c⁄ƒ
->
t˝°©eÊags
 =
UIP_TIME_WAIT
 ||

1019 
uù_c⁄ƒ
->
t˝°©eÊags
 =
UIP_FIN_WAIT_2
) {

1020 ++(
uù_c⁄ƒ
->
timî
);

1021 if(
uù_c⁄ƒ
->
timî
 =
UIP_TIME_WAIT_TIMEOUT
) {

1022 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_CLOSED
;

1024 } if(
uù_c⁄ƒ
->
t˝°©eÊags
 !
UIP_CLOSED
) {

1030 if(
	`uù_out°™dög
(
uù_c⁄ƒ
)) {

1031 if(
uù_c⁄ƒ
->
timî
-- == 0) {

1032 if(
uù_c⁄ƒ
->
ƒtx
 =
UIP_MAXRTX
 ||

1033 ((
uù_c⁄ƒ
->
t˝°©eÊags
 =
UIP_SYN_SENT
 ||

1034 
uù_c⁄ƒ
->
t˝°©eÊags
 =
UIP_SYN_RCVD
) &&

1035 
uù_c⁄ƒ
->
ƒtx
 =
UIP_MAXSYNRTX
)) {

1036 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_CLOSED
;

1043 
uù_Êags
 = 
UIP_TIMEDOUT
;

1044 
	`UIP_APPCALL
();

1047 
UIP_TCP_BUF
->
Êags
 = 
TCP_RST
 | 
TCP_ACK
;

1048 
t˝_£nd_nod©a
;

1052 
uù_c⁄ƒ
->
timî
 = 
UIP_RTO
 << (uù_c⁄ƒ->
ƒtx
 > 4?

1054 
uù_c⁄ƒ
->
ƒtx
);

1055 ++(
uù_c⁄ƒ
->
ƒtx
);

1065 
	`UIP_STAT
(++
uù_°©
.
t˝
.
ªxmô
);

1066 
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
) {

1067 
UIP_SYN_RCVD
:

1069 
t˝_£nd_sy«ck
;

1071 #i‡
UIP_ACTIVE_OPEN


1072 
UIP_SYN_SENT
:

1074 
UIP_TCP_BUF
->
Êags
 = 0;

1075 
t˝_£nd_syn
;

1078 
UIP_ESTABLISHED
:

1085 
uù_Êags
 = 
UIP_REXMIT
;

1086 
	`UIP_APPCALL
();

1087 
≠¥exmô
;

1089 
UIP_FIN_WAIT_1
:

1090 
UIP_CLOSING
:

1091 
UIP_LAST_ACK
:

1093 
t˝_£nd_föack
;

1096 } if((
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
Ë=
UIP_ESTABLISHED
) {

1101 
uù_Êags
 = 
UIP_POLL
;

1102 
	`UIP_APPCALL
();

1103 
≠p£nd
;

1106 
dr›
;

1109 #i‡
UIP_UDP


1110 if(
Êag
 =
UIP_UDP_TIMER
) {

1111 if(
uù_udp_c⁄n
->
Õ‹t
 != 0) {

1112 
uù_c⁄n
 = 
NULL
;

1113 
uù_ßµd©a
 = 
uù_≠pd©a
 = &
uù_buf
[
UIP_IPUDPH_LEN
 + 
UIP_LLH_LEN
];

1114 
uù_Àn
 = 
uù_¶í
 = 0;

1115 
uù_Êags
 = 
UIP_POLL
;

1116 
	`UIP_UDP_APPCALL
();

1117 
udp_£nd
;

1119 
dr›
;

1126 
	`UIP_STAT
(++
uù_°©
.
ù
.
ªcv
);

1131 if((
UIP_IP_BUF
->
vtc
 & 0xf0) != 0x60) {

1132 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1133 
	`UIP_STAT
(++
uù_°©
.
ù
.
vhÀº
);

1134 
	`UIP_LOG
("ipv6: invalid version.");

1135 
dr›
;

1146 if((
UIP_IP_BUF
->
Àn
[0] << 8Ë+ UIP_IP_BUF->Àn[1] <
uù_Àn
) {

1147 
uù_Àn
 = (
UIP_IP_BUF
->
Àn
[0] << 8Ë+ UIP_IP_BUF->Àn[1] + 
UIP_IPH_LEN
;

1160 
	`UIP_LOG
("ip:Öacket shorterÅhanÑeported in IP header.");

1161 
dr›
;

1164 
	`PRINTF
("IPv6ÖacketÑeceived from ");

1165 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

1166 
	`PRINTF
("Åo ");

1167 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

1168 
	`PRINTF
("\n");

1170 if(
	`uù_is_addr_mˇ°
(&
UIP_IP_BUF
->
§cùaddr
)){

1171 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1172 
	`PRINTF
("DroppingÖacket, src is mcast\n");

1173 
dr›
;

1176 #i‡
UIP_CONF_ROUTER


1182 
uù_√xt_hdr
 = &
UIP_IP_BUF
->
¥Ÿo
;

1183 
uù_ext_Àn
 = 0;

1184 
uù_ext_bôm≠
 = 0;

1185 if(*
uù_√xt_hdr
 =
UIP_PROTO_HBHO
) {

1186 #i‡
UIP_CONF_IPV6_CHECKS


1187 
uù_ext_bôm≠
 |
UIP_EXT_HDR_BITMAP_HBHO
;

1189 
	`ext_hdr_›ti⁄s_¥o˚ss
()) {

1192 
uù_√xt_hdr
 = &
UIP_EXT_BUF
->
√xt
;

1193 
uù_ext_Àn
 +(
UIP_EXT_BUF
->
Àn
 << 3) + 8;

1196 
	`PRINTF
("DroppingÖacketáfterÉxtension headerÖrocessing\n");

1198 
dr›
;

1200 
	`PRINTF
("SendingÉrror messageáfterÉxtension headerÖrocessing\n");

1203 
£nd
;

1218 #i‡
UIP_CONF_IPV6_MULTICAST


1219 if(
	`uù_is_addr_mˇ°_rouèbÀ
(&
UIP_IP_BUF
->
de°ùaddr
)) {

1220 if(
UIP_MCAST6
.
	`ö
(Ë=
UIP_MCAST6_ACCEPT
) {

1222 
¥o˚ss
;

1225 
dr›
;

1231 #i‡
DUAL_RADIO


1233 if(!
	`uù_ds6_is_my_addr
(&
UIP_IP_BUF
->
de°ùaddr
) &&

1234 !
	`uù_ds6_is_my_maddr
(&
UIP_IP_BUF
->
de°ùaddr
)&&

1235 !
	`uù_ds6_l⁄g_is_my_addr
(&
UIP_IP_BUF
->
de°ùaddr
)&&

1236 !
	`uù_ds6_l⁄g_is_my_maddr
(&
UIP_IP_BUF
->
de°ùaddr
)) {

1239 if(!
	`uù_ds6_is_my_addr
(&
UIP_IP_BUF
->
de°ùaddr
) &&

1240 !
	`uù_ds6_is_my_maddr
(&
UIP_IP_BUF
->
de°ùaddr
)) {

1242 if(!
	`uù_is_addr_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
) &&

1243 !
	`uù_is_addr_lökloˇl
(&
UIP_IP_BUF
->
de°ùaddr
) &&

1244 !
	`uù_is_addr_lökloˇl
(&
UIP_IP_BUF
->
§cùaddr
) &&

1245 !
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
) &&

1246 !
	`uù_is_addr_lo›back
(&
UIP_IP_BUF
->
de°ùaddr
)) {

1250 if(
uù_Àn
 > 
UIP_LINK_MTU
) {

1251 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_PACKET_TOO_BIG
, 0, 
UIP_LINK_MTU
);

1252 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1253 
£nd
;

1256 if(
UIP_IP_BUF
->
âl
 <= 1) {

1257 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_TIME_EXCEEDED
,

1258 
ICMP6_TIME_EXCEED_TRANSIT
, 0);

1259 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1260 
£nd
;

1263 #i‡
UIP_CONF_IPV6_RPL


1264 if(
	`Ωl_upd©e_hódî_em±y
()) {

1266 
	`PRINTF
("RPL Forward Option Error\n");

1267 
dr›
;

1271 
UIP_IP_BUF
->
âl
 = UIP_IP_BUF->ttl - 1;

1272 
	`PRINTF
("ForwardingÖacketÅo ");

1273 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

1274 
	`PRINTF
("\n");

1275 
	`UIP_STAT
(++
uù_°©
.
ù
.
f‹w¨ded
);

1276 
£nd
;

1278 if((
	`uù_is_addr_lökloˇl
(&
UIP_IP_BUF
->
§cùaddr
)) &&

1279 (!
	`uù_is_addr_un•ecifõd
(&
UIP_IP_BUF
->
§cùaddr
)) &&

1280 (!
	`uù_is_addr_lo›back
(&
UIP_IP_BUF
->
de°ùaddr
)) &&

1281 (!
	`uù_is_addr_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
)) &&

1282 (!
	`uù_ds6_is_addr_⁄lök
((&
UIP_IP_BUF
->
de°ùaddr
)))) {

1283 
	`PRINTF
("LL sourceáddress with offÜink destination, dropping\n");

1284 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_DST_UNREACH
,

1285 
ICMP6_DST_UNREACH_NOTNEIGHBOR
, 0);

1286 
£nd
;

1288 
	`PRINTF
("DroppingÖacket,Çot for meándÜinkÜocal or multicast\n");

1289 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1290 
dr›
;

1294 if(!
	`uù_ds6_is_my_addr
(&
UIP_IP_BUF
->
de°ùaddr
) &&

1295 !
	`uù_ds6_is_my_maddr
(&
UIP_IP_BUF
->
de°ùaddr
) &&

1296 !
	`uù_is_addr_mˇ°
(&
UIP_IP_BUF
->
de°ùaddr
)) {

1297 
	`PRINTF
("DroppingÖacket,Çot for me\n");

1298 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1299 
dr›
;

1306 
uù_√xt_hdr
 = &
UIP_IP_BUF
->
¥Ÿo
;

1307 
uù_ext_Àn
 = 0;

1308 
uù_ext_bôm≠
 = 0;

1311 #i‡
UIP_CONF_IPV6_MULTICAST


1312 
¥o˚ss
:

1316 *
uù_√xt_hdr
){

1317 #i‡
UIP_TCP


1318 
UIP_PROTO_TCP
:

1320 
t˝_öput
;

1322 #i‡
UIP_UDP


1323 
UIP_PROTO_UDP
:

1325 
udp_öput
;

1327 
UIP_PROTO_ICMP6
:

1329 
icmp6_öput
;

1330 
UIP_PROTO_HBHO
:

1331 
	`PRINTF
("Processing hbh header\n");

1333 #i‡
UIP_CONF_IPV6_CHECKS


1335 if(
uù_ext_bôm≠
 & 
UIP_EXT_HDR_BITMAP_HBHO
) {

1336 
bad_hdr
;

1338 
uù_ext_bôm≠
 |
UIP_EXT_HDR_BITMAP_HBHO
;

1341 
	`ext_hdr_›ti⁄s_¥o˚ss
()) {

1344 
uù_√xt_hdr
 = &
UIP_EXT_BUF
->
√xt
;

1345 
uù_ext_Àn
 +(
UIP_EXT_BUF
->
Àn
 << 3) + 8;

1349 
dr›
;

1353 
£nd
;

1356 
UIP_PROTO_DESTO
:

1357 #i‡
UIP_CONF_IPV6_CHECKS


1359 
	`PRINTF
("Processing desto header\n");

1360 if(
uù_ext_bôm≠
 & 
UIP_EXT_HDR_BITMAP_DESTO1
) {

1361 if(
uù_ext_bôm≠
 & 
UIP_EXT_HDR_BITMAP_DESTO2
) {

1362 
bad_hdr
;

1364 
uù_ext_bôm≠
 |
UIP_EXT_HDR_BITMAP_DESTO2
;

1367 
uù_ext_bôm≠
 |
UIP_EXT_HDR_BITMAP_DESTO1
;

1370 
	`ext_hdr_›ti⁄s_¥o˚ss
()) {

1373 
uù_√xt_hdr
 = &
UIP_EXT_BUF
->
√xt
;

1374 
uù_ext_Àn
 +(
UIP_EXT_BUF
->
Àn
 << 3) + 8;

1378 
dr›
;

1382 
£nd
;

1385 
UIP_PROTO_ROUTING
:

1386 #i‡
UIP_CONF_IPV6_CHECKS


1388 if(
uù_ext_bôm≠
 & 
UIP_EXT_HDR_BITMAP_ROUTING
) {

1389 
bad_hdr
;

1391 
uù_ext_bôm≠
 |
UIP_EXT_HDR_BITMAP_ROUTING
;

1402 
	`PRINTF
("Processing Routing header\n");

1403 if(
UIP_ROUTING_BUF
->
£g_À·
 > 0) {

1404 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_PARAM_PROB
, 
ICMP6_PARAMPROB_HEADER
, 
UIP_IPH_LEN
 + 
uù_ext_Àn
 + 2);

1405 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1406 
	`UIP_LOG
("ip6: unrecognizedÑoutingÅype");

1407 
£nd
;

1409 
uù_√xt_hdr
 = &
UIP_EXT_BUF
->
√xt
;

1410 
uù_ext_Àn
 +(
UIP_EXT_BUF
->
Àn
 << 3) + 8;

1412 
UIP_PROTO_FRAG
:

1414 #i‡
UIP_CONF_IPV6_REASSEMBLY


1415 
	`PRINTF
("Processing frag header\n");

1416 
uù_Àn
 = 
	`uù_ªass
();

1417 if(
uù_Àn
 == 0) {

1418 
dr›
;

1420 if(
uù_ªassÊags
 & 
UIP_REASS_FLAG_ERROR_MSG
){

1422 
£nd
;

1426 
	`PRINTF
("ProcessingÑeassembledÖacket\n");

1427 
uù_ext_Àn
 = 0;

1428 
uù_ext_bôm≠
 = 0;

1429 
uù_√xt_hdr
 = &
UIP_IP_BUF
->
¥Ÿo
;

1432 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1433 
	`UIP_STAT
(++
uù_°©
.
ù
.
‰agîr
);

1434 
	`UIP_LOG
("ip: fragment dropped.");

1435 
dr›
;

1437 
UIP_PROTO_NONE
:

1438 
dr›
;

1440 
bad_hdr
;

1443 
bad_hdr
:

1448 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_PARAM_PROB
, 
ICMP6_PARAMPROB_NEXTHEADER
, (
uöt32_t
)(
uù_√xt_hdr
 - (
uöt8_t
 *)
UIP_IP_BUF
));

1449 
	`UIP_STAT
(++
uù_°©
.
ù
.
dr›
);

1450 
	`UIP_STAT
(++
uù_°©
.
ù
.
¥Ÿ€º
);

1451 
	`UIP_LOG
("ip6: unrecognized header");

1452 
£nd
;

1455 
icmp6_öput
:

1457 
	`PRINTF
("icmp6_öput:Üígth %dÅy≥: %d \n", 
uù_Àn
, 
UIP_ICMP_BUF
->
ty≥
);

1459 #i‡
UIP_CONF_IPV6_CHECKS


1461 if(
	`uù_icmp6chksum
() != 0xffff) {

1462 
	`UIP_STAT
(++
uù_°©
.
icmp
.
dr›
);

1463 
	`UIP_STAT
(++
uù_°©
.
icmp
.
chkîr
);

1464 
	`UIP_LOG
("icmpv6: bad checksum.");

1465 
	`PRINTF
("icmpv6: bad checksum.\n");

1466 
dr›
;

1470 
	`UIP_STAT
(++
uù_°©
.
icmp
.
ªcv
);

1480 #i‡
UIP_CONF_ICMP6


1481 
	`UIP_ICMP6_APPCALL
(
UIP_ICMP_BUF
->
ty≥
);

1488 if(
	`uù_icmp6_öput
(
UIP_ICMP_BUF
->
ty≥
,

1489 
UIP_ICMP_BUF
->
icode
Ë=
UIP_ICMP6_INPUT_ERROR
) {

1490 
	`PRINTF
("Unknow¿ICMPv6 mesßgêty≥/codê%d\n", 
UIP_ICMP_BUF
->
ty≥
);

1491 
	`UIP_STAT
(++
uù_°©
.
icmp
.
dr›
);

1492 
	`UIP_STAT
(++
uù_°©
.
icmp
.
ty≥îr
);

1493 
	`UIP_LOG
("icmp6: unknown ICMPv6 message.");

1494 
	`uù_˛ór_buf
();

1497 if(
uù_Àn
 > 0) {

1498 
£nd
;

1500 
dr›
;

1505 #i‡
UIP_UDP


1507 
udp_öput
:

1509 
	`ªmove_ext_hdr
();

1510 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_UDP
;

1512 
	`PRINTF
("Receiving UDPÖacket\n");

1518 #i‡
UIP_UDP_CHECKSUMS


1524 if(
UIP_UDP_BUF
->
udpchksum
 !0 && 
	`uù_udpchksum
() != 0xffff) {

1525 
	`UIP_STAT
(++
uù_°©
.
udp
.
dr›
);

1526 
	`UIP_STAT
(++
uù_°©
.
udp
.
chkîr
);

1527 
	`PRINTF
("udp: bad checksum 0x%04x 0x%04x\n", 
UIP_UDP_BUF
->
udpchksum
,

1528 
	`uù_udpchksum
());

1529 
dr›
;

1534 if(
UIP_UDP_BUF
->
de°p‹t
 == 0) {

1535 
	`PRINTF
("udp: zeroÖort.\n");

1536 
dr›
;

1540 
uù_udp_c⁄n
 = &
uù_udp_c⁄ns
[0];

1541 
uù_udp_c⁄n
 < &
uù_udp_c⁄ns
[
UIP_UDP_CONNS
];

1542 ++
uù_udp_c⁄n
) {

1552 
	`uù_ùaddr_c›y
(&
udp_öput_addr
,&
uù_udp_c⁄n
->
rùaddr
);

1554 if(
uù_udp_c⁄n
->
Õ‹t
 != 0 &&

1555 
UIP_UDP_BUF
->
de°p‹t
 =
uù_udp_c⁄n
->
Õ‹t
 &&

1556 (
uù_udp_c⁄n
->
Ω‹t
 == 0 ||

1557 
UIP_UDP_BUF
->
§˝‹t
 =
uù_udp_c⁄n
->
Ω‹t
) &&

1558 (
	`uù_is_addr_un•ecifõd
(&
udp_öput_addr
) ||

1559 
	`uù_ùaddr_cmp
(&
UIP_IP_BUF
->
§cùaddr
, &
udp_öput_addr
))) {

1562 
udp_found
;

1565 
	`PRINTF
("udp:Ço matching connection found\n");

1566 
	`UIP_STAT
(++
uù_°©
.
udp
.
dr›
);

1568 
	`uù_icmp6_îr‹_ouçut
(
ICMP6_DST_UNREACH
, 
ICMP6_DST_UNREACH_NOPORT
, 0);

1569 
£nd
;

1571 
udp_found
:

1572 
	`PRINTF
("In udp_found\n");

1573 
	`UIP_STAT
(++
uù_°©
.
udp
.
ªcv
);

1575 
uù_Àn
 = uù_À¿- 
UIP_IPUDPH_LEN
;

1576 
uù_≠pd©a
 = &
uù_buf
[
UIP_IPUDPH_LEN
 + 
UIP_LLH_LEN
];

1577 
uù_c⁄n
 = 
NULL
;

1578 
uù_Êags
 = 
UIP_NEWDATA
;

1579 
uù_ßµd©a
 = 
uù_≠pd©a
 = &
uù_buf
[
UIP_IPUDPH_LEN
 + 
UIP_LLH_LEN
];

1580 
uù_¶í
 = 0;

1581 
	`UIP_UDP_APPCALL
();

1583 
udp_£nd
:

1584 
	`PRINTF
("In udp_send\n");

1586 if(
uù_¶í
 == 0) {

1587 
dr›
;

1589 
uù_Àn
 = 
uù_¶í
 + 
UIP_IPUDPH_LEN
;

1593 
UIP_IP_BUF
->
Àn
[0] = ((
uù_Àn
 - 
UIP_IPH_LEN
) >> 8);

1594 
UIP_IP_BUF
->
Àn
[1] = ((
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff);

1596 
UIP_IP_BUF
->
âl
 = 
uù_udp_c⁄n
->ttl;

1597 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_UDP
;

1599 
UIP_UDP_BUF
->
ud∂í
 = 
	`UIP_HTONS
(
uù_¶í
 + 
UIP_UDPH_LEN
);

1600 
UIP_UDP_BUF
->
udpchksum
 = 0;

1602 
UIP_UDP_BUF
->
§˝‹t
 = 
uù_udp_c⁄n
->
Õ‹t
;

1603 
UIP_UDP_BUF
->
de°p‹t
 = 
uù_udp_c⁄n
->
Ω‹t
;

1606 
	`uù_ùaddr_c›y
(&
udp_£nd_addr
, &
uù_udp_c⁄n
->
rùaddr
);

1609 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, &
udp_£nd_addr
);

1610 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

1612 
uù_≠pd©a
 = &
uù_buf
[
UIP_LLH_LEN
 + 
UIP_IPTCPH_LEN
];

1614 #i‡
UIP_UDP_CHECKSUMS


1616 
UIP_UDP_BUF
->
udpchksum
 = ~(
	`uù_udpchksum
());

1617 if(
UIP_UDP_BUF
->
udpchksum
 == 0) {

1618 
UIP_UDP_BUF
->
udpchksum
 = 0xffff;

1622 #i‡
UIP_CONF_IPV6_RPL


1623 
	`Ωl_ö£π_hódî
();

1626 
	`UIP_STAT
(++
uù_°©
.
udp
.
£¡
);

1627 
ù_£nd_nﬁí
;

1630 #i‡
UIP_TCP


1632 
t˝_öput
:

1634 
	`ªmove_ext_hdr
();

1635 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_TCP
;

1637 
	`UIP_STAT
(++
uù_°©
.
t˝
.
ªcv
);

1638 
	`PRINTF
("Receiving TCPÖacket\n");

1641 if(
	`uù_t˝chksum
() != 0xffff) {

1643 
	`UIP_STAT
(++
uù_°©
.
t˝
.
dr›
);

1644 
	`UIP_STAT
(++
uù_°©
.
t˝
.
chkîr
);

1645 
	`PRINTF
("t˝: bad checksum 0x%04x 0x%04x\n", 
UIP_TCP_BUF
->
t˝chksum
,

1646 
	`uù_t˝chksum
());

1647 
dr›
;

1651 if(
UIP_TCP_BUF
->
de°p‹t
 =0 || UIP_TCP_BUF->
§˝‹t
 == 0) {

1652 
	`PRINTF
("tcp: zeroÖort.");

1653 
dr›
;

1658 
	`uù_ùaddr_c›y
(&
t˝_öput_addr
,&
uù_udp_c⁄n
->
rùaddr
);

1663 
uù_c⁄ƒ
 = &
uù_c⁄ns
[0]; uù_c⁄ƒ <&uù_c⁄ns[
UIP_CONNS
 - 1];

1664 ++
uù_c⁄ƒ
) {

1665 if(
uù_c⁄ƒ
->
t˝°©eÊags
 !
UIP_CLOSED
 &&

1666 
UIP_TCP_BUF
->
de°p‹t
 =
uù_c⁄ƒ
->
Õ‹t
 &&

1667 
UIP_TCP_BUF
->
§˝‹t
 =
uù_c⁄ƒ
->
Ω‹t
 &&

1669 
	`uù_ùaddr_cmp
(&
UIP_IP_BUF
->
§cùaddr
, &
t˝_öput_addr
)) {

1670 
found
;

1678 if((
UIP_TCP_BUF
->
Êags
 & 
TCP_CTL
Ë!
TCP_SYN
) {

1679 
ª£t
;

1682 
tmp16
 = 
UIP_TCP_BUF
->
de°p‹t
;

1684 
c
 = 0; c < 
UIP_LISTENPORTS
; ++c) {

1685 if(
tmp16
 =
uù_li°íp‹ts
[
c
]) {

1686 
found_li°í
;

1691 
	`UIP_STAT
(++
uù_°©
.
t˝
.
syƒ°
);

1693 
ª£t
:

1694 
	`PRINTF
("InÑeset\n");

1696 if(
UIP_TCP_BUF
->
Êags
 & 
TCP_RST
) {

1697 
dr›
;

1700 
	`UIP_STAT
(++
uù_°©
.
t˝
.
r°
);

1702 
UIP_TCP_BUF
->
Êags
 = 
TCP_RST
 | 
TCP_ACK
;

1703 
uù_Àn
 = 
UIP_IPTCPH_LEN
;

1704 
UIP_TCP_BUF
->
t˝off£t
 = 5 << 4;

1707 
c
 = 
UIP_TCP_BUF
->
£qno
[3];

1708 
UIP_TCP_BUF
->
£qno
[3] = UIP_TCP_BUF->
ackno
[3];

1709 
UIP_TCP_BUF
->
ackno
[3] = 
c
;

1711 
c
 = 
UIP_TCP_BUF
->
£qno
[2];

1712 
UIP_TCP_BUF
->
£qno
[2] = UIP_TCP_BUF->
ackno
[2];

1713 
UIP_TCP_BUF
->
ackno
[2] = 
c
;

1715 
c
 = 
UIP_TCP_BUF
->
£qno
[1];

1716 
UIP_TCP_BUF
->
£qno
[1] = UIP_TCP_BUF->
ackno
[1];

1717 
UIP_TCP_BUF
->
ackno
[1] = 
c
;

1719 
c
 = 
UIP_TCP_BUF
->
£qno
[0];

1720 
UIP_TCP_BUF
->
£qno
[0] = UIP_TCP_BUF->
ackno
[0];

1721 
UIP_TCP_BUF
->
ackno
[0] = 
c
;

1726 if(++
UIP_TCP_BUF
->
ackno
[3] == 0) {

1727 if(++
UIP_TCP_BUF
->
ackno
[2] == 0) {

1728 if(++
UIP_TCP_BUF
->
ackno
[1] == 0) {

1729 ++
UIP_TCP_BUF
->
ackno
[0];

1735 
tmp16
 = 
UIP_TCP_BUF
->
§˝‹t
;

1736 
UIP_TCP_BUF
->
§˝‹t
 = UIP_TCP_BUF->
de°p‹t
;

1737 
UIP_TCP_BUF
->
de°p‹t
 = 
tmp16
;

1740 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, &UIP_IP_BUF->
§cùaddr
);

1741 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

1743 
t˝_£nd_noc⁄n
;

1748 
found_li°í
:

1749 
	`PRINTF
("In foundÜisten\n");

1756 
uù_c⁄ƒ
 = 0;

1757 
c
 = 0; c < 
UIP_CONNS
; ++c) {

1758 if(
uù_c⁄ns
[
c
].
t˝°©eÊags
 =
UIP_CLOSED
) {

1759 
uù_c⁄ƒ
 = &
uù_c⁄ns
[
c
];

1762 if(
uù_c⁄ns
[
c
].
t˝°©eÊags
 =
UIP_TIME_WAIT
) {

1763 if(
uù_c⁄ƒ
 == 0 ||

1764 
uù_c⁄ns
[
c
].
timî
 > 
uù_c⁄ƒ
->timer) {

1765 
uù_c⁄ƒ
 = &
uù_c⁄ns
[
c
];

1770 if(
uù_c⁄ƒ
 == 0) {

1774 
	`UIP_STAT
(++
uù_°©
.
t˝
.
syndr›
);

1775 
	`UIP_LOG
("tcp: foundÇo unused connections.");

1776 
dr›
;

1778 
uù_c⁄n
 = 
uù_c⁄ƒ
;

1781 
uù_c⁄ƒ
->
πo
 = uù_c⁄ƒ->
timî
 = 
UIP_RTO
;

1782 
uù_c⁄ƒ
->
ß
 = 0;

1783 
uù_c⁄ƒ
->
sv
 = 4;

1784 
uù_c⁄ƒ
->
ƒtx
 = 0;

1785 
uù_c⁄ƒ
->
Õ‹t
 = 
UIP_TCP_BUF
->
de°p‹t
;

1786 
uù_c⁄ƒ
->
Ω‹t
 = 
UIP_TCP_BUF
->
§˝‹t
;

1787 
	`uù_ùaddr_c›y
(&
uù_c⁄ƒ
->
rùaddr
, &
UIP_IP_BUF
->
§cùaddr
);

1788 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_SYN_RCVD
;

1790 
uù_c⁄ƒ
->
¢d_nxt
[0] = 
iss
[0];

1791 
uù_c⁄ƒ
->
¢d_nxt
[1] = 
iss
[1];

1792 
uù_c⁄ƒ
->
¢d_nxt
[2] = 
iss
[2];

1793 
uù_c⁄ƒ
->
¢d_nxt
[3] = 
iss
[3];

1794 
uù_c⁄ƒ
->
Àn
 = 1;

1797 
uù_c⁄ƒ
->
rcv_nxt
[0] = 
UIP_TCP_BUF
->
£qno
[0];

1798 
uù_c⁄ƒ
->
rcv_nxt
[1] = 
UIP_TCP_BUF
->
£qno
[1];

1799 
uù_c⁄ƒ
->
rcv_nxt
[2] = 
UIP_TCP_BUF
->
£qno
[2];

1800 
uù_c⁄ƒ
->
rcv_nxt
[3] = 
UIP_TCP_BUF
->
£qno
[3];

1801 
	`uù_add_rcv_nxt
(1);

1804 if((
UIP_TCP_BUF
->
t˝off£t
 & 0xf0) > 0x50) {

1805 
c
 = 0; c < ((
UIP_TCP_BUF
->
t˝off£t
 >> 4) - 5) << 2 ;) {

1806 
›t
 = 
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 
c
];

1807 if(
›t
 =
TCP_OPT_END
) {

1810 } if(
›t
 =
TCP_OPT_NOOP
) {

1811 ++
c
;

1813 } if(
›t
 =
TCP_OPT_MSS
 &&

1814 
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 1 + 
c
] =
TCP_OPT_MSS_LEN
) {

1816 
tmp16
 = ((
uöt16_t
)
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 2 + 
c
] << 8) |

1817 (
uöt16_t
)
uù_buf
[
UIP_IPTCPH_LEN
 + 
UIP_LLH_LEN
 + 3 + 
c
];

1818 
uù_c⁄ƒ
->
öôülmss
 = uù_c⁄ƒ->
mss
 =

1819 
tmp16
 > 
UIP_TCP_MSS
? UIP_TCP_MSS:Åmp16;

1826 if(
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 1 + 
c
] == 0) {

1831 
c
 +
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 1 + c];

1837 #i‡
UIP_ACTIVE_OPEN


1838 
t˝_£nd_sy«ck
:

1839 
UIP_TCP_BUF
->
Êags
 = 
TCP_ACK
;

1841 
t˝_£nd_syn
:

1842 
UIP_TCP_BUF
->
Êags
 |
TCP_SYN
;

1844 
t˝_£nd_sy«ck
:

1845 
UIP_TCP_BUF
->
Êags
 = 
TCP_SYN
 | 
TCP_ACK
;

1850 
UIP_TCP_BUF
->
›td©a
[0] = 
TCP_OPT_MSS
;

1851 
UIP_TCP_BUF
->
›td©a
[1] = 
TCP_OPT_MSS_LEN
;

1852 
UIP_TCP_BUF
->
›td©a
[2] = (
UIP_TCP_MSS
) / 256;

1853 
UIP_TCP_BUF
->
›td©a
[3] = (
UIP_TCP_MSS
) & 255;

1854 
uù_Àn
 = 
UIP_IPTCPH_LEN
 + 
TCP_OPT_MSS_LEN
;

1855 
UIP_TCP_BUF
->
t˝off£t
 = ((
UIP_TCPH_LEN
 + 
TCP_OPT_MSS_LEN
) / 4) << 4;

1856 
t˝_£nd
;

1859 
found
:

1860 
	`PRINTF
("In found\n");

1861 
uù_c⁄n
 = 
uù_c⁄ƒ
;

1862 
uù_Êags
 = 0;

1867 if(
UIP_TCP_BUF
->
Êags
 & 
TCP_RST
) {

1868 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_CLOSED
;

1869 
	`UIP_LOG
("tcp: gotÑeset,áborting connection.");

1870 
uù_Êags
 = 
UIP_ABORT
;

1871 
	`UIP_APPCALL
();

1872 
dr›
;

1876 
c
 = (
UIP_TCP_BUF
->
t˝off£t
 >> 4) << 2;

1880 
uù_Àn
 = uù_À¿- 
c
 - 
UIP_IPH_LEN
;

1887 if(!((((
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
Ë=
UIP_SYN_SENT
) &&

1888 ((
UIP_TCP_BUF
->
Êags
 & 
TCP_CTL
Ë=(
TCP_SYN
 | 
TCP_ACK
))) ||

1889 (((
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
Ë=
UIP_SYN_RCVD
) &&

1890 ((
UIP_TCP_BUF
->
Êags
 & 
TCP_CTL
Ë=
TCP_SYN
)))) {

1891 if((
uù_Àn
 > 0 || ((
UIP_TCP_BUF
->
Êags
 & (
TCP_SYN
 | 
TCP_FIN
)) != 0)) &&

1892 (
UIP_TCP_BUF
->
£qno
[0] !
uù_c⁄ƒ
->
rcv_nxt
[0] ||

1893 
UIP_TCP_BUF
->
£qno
[1] !
uù_c⁄ƒ
->
rcv_nxt
[1] ||

1894 
UIP_TCP_BUF
->
£qno
[2] !
uù_c⁄ƒ
->
rcv_nxt
[2] ||

1895 
UIP_TCP_BUF
->
£qno
[3] !
uù_c⁄ƒ
->
rcv_nxt
[3])) {

1897 if((
UIP_TCP_BUF
->
Êags
 & 
TCP_SYN
)) {

1898 if((
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
Ë=
UIP_SYN_RCVD
) {

1899 
t˝_£nd_sy«ck
;

1900 } if((
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
Ë=
UIP_SYN_SENT
) {

1901 
t˝_£nd_syn
;

1904 
t˝_£nd_ack
;

1912 if((
UIP_TCP_BUF
->
Êags
 & 
TCP_ACK
Ë&& 
	`uù_out°™dög
(
uù_c⁄ƒ
)) {

1913 
	`uù_add32
(
uù_c⁄ƒ
->
¢d_nxt
, uù_c⁄ƒ->
Àn
);

1915 if(
UIP_TCP_BUF
->
ackno
[0] =
uù_acc32
[0] &&

1916 
UIP_TCP_BUF
->
ackno
[1] =
uù_acc32
[1] &&

1917 
UIP_TCP_BUF
->
ackno
[2] =
uù_acc32
[2] &&

1918 
UIP_TCP_BUF
->
ackno
[3] =
uù_acc32
[3]) {

1920 
uù_c⁄ƒ
->
¢d_nxt
[0] = 
uù_acc32
[0];

1921 
uù_c⁄ƒ
->
¢d_nxt
[1] = 
uù_acc32
[1];

1922 
uù_c⁄ƒ
->
¢d_nxt
[2] = 
uù_acc32
[2];

1923 
uù_c⁄ƒ
->
¢d_nxt
[3] = 
uù_acc32
[3];

1926 if(
uù_c⁄ƒ
->
ƒtx
 == 0) {

1927 sig√d 
m
;

1928 
m
 = 
uù_c⁄ƒ
->
πo
 - uù_c⁄ƒ->
timî
;

1930 
m
 = m - (
uù_c⁄ƒ
->
ß
 >> 3);

1931 
uù_c⁄ƒ
->
ß
 +
m
;

1932 if(
m
 < 0) {

1933 
m
 = -m;

1935 
m
 = m - (
uù_c⁄ƒ
->
sv
 >> 2);

1936 
uù_c⁄ƒ
->
sv
 +
m
;

1937 
uù_c⁄ƒ
->
πo
 = (uù_c⁄ƒ->
ß
 >> 3Ë+ uù_c⁄ƒ->
sv
;

1941 
uù_Êags
 = 
UIP_ACKDATA
;

1943 
uù_c⁄ƒ
->
timî
 = uù_c⁄ƒ->
πo
;

1946 
uù_c⁄ƒ
->
Àn
 = 0;

1952 
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_TS_MASK
) {

1957 
UIP_SYN_RCVD
:

1962 if(
uù_Êags
 & 
UIP_ACKDATA
) {

1963 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_ESTABLISHED
;

1964 
uù_Êags
 = 
UIP_CONNECTED
;

1965 
uù_c⁄ƒ
->
Àn
 = 0;

1966 if(
uù_Àn
 > 0) {

1967 
uù_Êags
 |
UIP_NEWDATA
;

1968 
	`uù_add_rcv_nxt
(
uù_Àn
);

1970 
uù_¶í
 = 0;

1971 
	`UIP_APPCALL
();

1972 
≠p£nd
;

1975 if((
UIP_TCP_BUF
->
Êags
 & 
TCP_CTL
Ë=
TCP_SYN
) {

1976 
t˝_£nd_sy«ck
;

1978 
dr›
;

1979 #i‡
UIP_ACTIVE_OPEN


1980 
UIP_SYN_SENT
:

1985 if((
uù_Êags
 & 
UIP_ACKDATA
) &&

1986 (
UIP_TCP_BUF
->
Êags
 & 
TCP_CTL
Ë=(
TCP_SYN
 | 
TCP_ACK
)) {

1989 if((
UIP_TCP_BUF
->
t˝off£t
 & 0xf0) > 0x50) {

1990 
c
 = 0; c < ((
UIP_TCP_BUF
->
t˝off£t
 >> 4) - 5) << 2 ;) {

1991 
›t
 = 
uù_buf
[
UIP_IPTCPH_LEN
 + 
UIP_LLH_LEN
 + 
c
];

1992 if(
›t
 =
TCP_OPT_END
) {

1995 } if(
›t
 =
TCP_OPT_NOOP
) {

1996 ++
c
;

1998 } if(
›t
 =
TCP_OPT_MSS
 &&

1999 
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 1 + 
c
] =
TCP_OPT_MSS_LEN
) {

2001 
tmp16
 = (
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 2 + 
c
] << 8) |

2002 
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 3 + 
c
];

2003 
uù_c⁄ƒ
->
öôülmss
 =

2004 
uù_c⁄ƒ
->
mss
 = 
tmp16
 > 
UIP_TCP_MSS
? UIP_TCP_MSS:Åmp16;

2011 if(
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 1 + 
c
] == 0) {

2016 
c
 +
uù_buf
[
UIP_TCPIP_HLEN
 + 
UIP_LLH_LEN
 + 1 + c];

2020 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_ESTABLISHED
;

2021 
uù_c⁄ƒ
->
rcv_nxt
[0] = 
UIP_TCP_BUF
->
£qno
[0];

2022 
uù_c⁄ƒ
->
rcv_nxt
[1] = 
UIP_TCP_BUF
->
£qno
[1];

2023 
uù_c⁄ƒ
->
rcv_nxt
[2] = 
UIP_TCP_BUF
->
£qno
[2];

2024 
uù_c⁄ƒ
->
rcv_nxt
[3] = 
UIP_TCP_BUF
->
£qno
[3];

2025 
	`uù_add_rcv_nxt
(1);

2026 
uù_Êags
 = 
UIP_CONNECTED
 | 
UIP_NEWDATA
;

2027 
uù_c⁄ƒ
->
Àn
 = 0;

2028 
	`uù_˛ór_buf
();

2029 
uù_¶í
 = 0;

2030 
	`UIP_APPCALL
();

2031 
≠p£nd
;

2034 
uù_Êags
 = 
UIP_ABORT
;

2035 
	`UIP_APPCALL
();

2037 
uù_c⁄n
->
t˝°©eÊags
 = 
UIP_CLOSED
;

2038 
ª£t
;

2041 
UIP_ESTABLISHED
:

2053 if(
UIP_TCP_BUF
->
Êags
 & 
TCP_FIN
 && !(
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_STOPPED
)) {

2054 if(
	`uù_out°™dög
(
uù_c⁄ƒ
)) {

2055 
dr›
;

2057 
	`uù_add_rcv_nxt
(1 + 
uù_Àn
);

2058 
uù_Êags
 |
UIP_CLOSE
;

2059 if(
uù_Àn
 > 0) {

2060 
uù_Êags
 |
UIP_NEWDATA
;

2062 
	`UIP_APPCALL
();

2063 
uù_c⁄ƒ
->
Àn
 = 1;

2064 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_LAST_ACK
;

2065 
uù_c⁄ƒ
->
ƒtx
 = 0;

2066 
t˝_£nd_föack
:

2067 
UIP_TCP_BUF
->
Êags
 = 
TCP_FIN
 | 
TCP_ACK
;

2068 
t˝_£nd_nod©a
;

2073 if((
UIP_TCP_BUF
->
Êags
 & 
TCP_URG
) != 0) {

2074 #i‡
UIP_URGDATA
 > 0

2075 
uù_urgÀn
 = (
UIP_TCP_BUF
->
urgp
[0] << 8) | UIP_TCP_BUF->urgp[1];

2076 if(
uù_urgÀn
 > 
uù_Àn
) {

2078 
uù_urgÀn
 = 
uù_Àn
;

2080 
	`uù_add_rcv_nxt
(
uù_urgÀn
);

2081 
uù_Àn
 -
uù_urgÀn
;

2082 
uù_urgd©a
 = 
uù_≠pd©a
;

2083 
uù_≠pd©a
 +
uù_urgÀn
;

2085 
uù_urgÀn
 = 0;

2087 
uù_≠pd©a
 = ((*)uù_≠pd©aË+ ((
UIP_TCP_BUF
->
urgp
[0] << 8) | UIP_TCP_BUF->urgp[1]);

2088 
uù_Àn
 -(
UIP_TCP_BUF
->
urgp
[0] << 8) | UIP_TCP_BUF->urgp[1];

2097 if(
uù_Àn
 > 0 && !(
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_STOPPED
)) {

2098 
uù_Êags
 |
UIP_NEWDATA
;

2099 
	`uù_add_rcv_nxt
(
uù_Àn
);

2114 
tmp16
 = ((
uöt16_t
)
UIP_TCP_BUF
->
wnd
[0] << 8) + (uint16_t)UIP_TCP_BUF->wnd[1];

2115 if(
tmp16
 > 
uù_c⁄ƒ
->
öôülmss
 ||

2116 
tmp16
 == 0) {

2117 
tmp16
 = 
uù_c⁄ƒ
->
öôülmss
;

2119 
uù_c⁄ƒ
->
mss
 = 
tmp16
;

2137 if(
uù_Êags
 & (
UIP_NEWDATA
 | 
UIP_ACKDATA
)) {

2138 
uù_¶í
 = 0;

2139 
	`UIP_APPCALL
();

2141 
≠p£nd
:

2143 if(
uù_Êags
 & 
UIP_ABORT
) {

2144 
uù_¶í
 = 0;

2145 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_CLOSED
;

2146 
UIP_TCP_BUF
->
Êags
 = 
TCP_RST
 | 
TCP_ACK
;

2147 
t˝_£nd_nod©a
;

2150 if(
uù_Êags
 & 
UIP_CLOSE
) {

2151 
uù_¶í
 = 0;

2152 
uù_c⁄ƒ
->
Àn
 = 1;

2153 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_FIN_WAIT_1
;

2154 
uù_c⁄ƒ
->
ƒtx
 = 0;

2155 
UIP_TCP_BUF
->
Êags
 = 
TCP_FIN
 | 
TCP_ACK
;

2156 
t˝_£nd_nod©a
;

2160 if(
uù_¶í
 > 0) {

2164 if((
uù_Êags
 & 
UIP_ACKDATA
) != 0) {

2165 
uù_c⁄ƒ
->
Àn
 = 0;

2171 if(
uù_c⁄ƒ
->
Àn
 == 0) {

2176 if(
uù_¶í
 > 
uù_c⁄ƒ
->
mss
) {

2177 
uù_¶í
 = 
uù_c⁄ƒ
->
mss
;

2182 
uù_c⁄ƒ
->
Àn
 = 
uù_¶í
;

2188 
uù_¶í
 = 
uù_c⁄ƒ
->
Àn
;

2191 
uù_c⁄ƒ
->
ƒtx
 = 0;

2192 
≠¥exmô
:

2193 
uù_≠pd©a
 = 
uù_ßµd©a
;

2197 if(
uù_¶í
 > 0 && 
uù_c⁄ƒ
->
Àn
 > 0) {

2199 
uù_Àn
 = 
uù_c⁄ƒ
->
Àn
 + 
UIP_TCPIP_HLEN
;

2201 
UIP_TCP_BUF
->
Êags
 = 
TCP_ACK
 | 
TCP_PSH
;

2203 
t˝_£nd_no›ts
;

2207 if(
uù_Êags
 & 
UIP_NEWDATA
) {

2208 
uù_Àn
 = 
UIP_TCPIP_HLEN
;

2209 
UIP_TCP_BUF
->
Êags
 = 
TCP_ACK
;

2210 
t˝_£nd_no›ts
;

2213 
dr›
;

2214 
UIP_LAST_ACK
:

2217 if(
uù_Êags
 & 
UIP_ACKDATA
) {

2218 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_CLOSED
;

2219 
uù_Êags
 = 
UIP_CLOSE
;

2220 
	`UIP_APPCALL
();

2224 
UIP_FIN_WAIT_1
:

2228 if(
uù_Àn
 > 0) {

2229 
	`uù_add_rcv_nxt
(
uù_Àn
);

2231 if(
UIP_TCP_BUF
->
Êags
 & 
TCP_FIN
) {

2232 if(
uù_Êags
 & 
UIP_ACKDATA
) {

2233 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_TIME_WAIT
;

2234 
uù_c⁄ƒ
->
timî
 = 0;

2235 
uù_c⁄ƒ
->
Àn
 = 0;

2237 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_CLOSING
;

2239 
	`uù_add_rcv_nxt
(1);

2240 
uù_Êags
 = 
UIP_CLOSE
;

2241 
	`UIP_APPCALL
();

2242 
t˝_£nd_ack
;

2243 } if(
uù_Êags
 & 
UIP_ACKDATA
) {

2244 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_FIN_WAIT_2
;

2245 
uù_c⁄ƒ
->
Àn
 = 0;

2246 
dr›
;

2248 if(
uù_Àn
 > 0) {

2249 
t˝_£nd_ack
;

2251 
dr›
;

2253 
UIP_FIN_WAIT_2
:

2254 if(
uù_Àn
 > 0) {

2255 
	`uù_add_rcv_nxt
(
uù_Àn
);

2257 if(
UIP_TCP_BUF
->
Êags
 & 
TCP_FIN
) {

2258 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_TIME_WAIT
;

2259 
uù_c⁄ƒ
->
timî
 = 0;

2260 
	`uù_add_rcv_nxt
(1);

2261 
uù_Êags
 = 
UIP_CLOSE
;

2262 
	`UIP_APPCALL
();

2263 
t˝_£nd_ack
;

2265 if(
uù_Àn
 > 0) {

2266 
t˝_£nd_ack
;

2268 
dr›
;

2270 
UIP_TIME_WAIT
:

2271 
t˝_£nd_ack
;

2273 
UIP_CLOSING
:

2274 if(
uù_Êags
 & 
UIP_ACKDATA
) {

2275 
uù_c⁄ƒ
->
t˝°©eÊags
 = 
UIP_TIME_WAIT
;

2276 
uù_c⁄ƒ
->
timî
 = 0;

2279 
dr›
;

2283 
t˝_£nd_ack
:

2284 
UIP_TCP_BUF
->
Êags
 = 
TCP_ACK
;

2286 
t˝_£nd_nod©a
:

2287 
uù_Àn
 = 
UIP_IPTCPH_LEN
;

2289 
t˝_£nd_no›ts
:

2290 
UIP_TCP_BUF
->
t˝off£t
 = (
UIP_TCPH_LEN
 / 4) << 4;

2296 
t˝_£nd
:

2297 
	`PRINTF
("InÅcp_send\n");

2299 
UIP_TCP_BUF
->
ackno
[0] = 
uù_c⁄ƒ
->
rcv_nxt
[0];

2300 
UIP_TCP_BUF
->
ackno
[1] = 
uù_c⁄ƒ
->
rcv_nxt
[1];

2301 
UIP_TCP_BUF
->
ackno
[2] = 
uù_c⁄ƒ
->
rcv_nxt
[2];

2302 
UIP_TCP_BUF
->
ackno
[3] = 
uù_c⁄ƒ
->
rcv_nxt
[3];

2304 
UIP_TCP_BUF
->
£qno
[0] = 
uù_c⁄ƒ
->
¢d_nxt
[0];

2305 
UIP_TCP_BUF
->
£qno
[1] = 
uù_c⁄ƒ
->
¢d_nxt
[1];

2306 
UIP_TCP_BUF
->
£qno
[2] = 
uù_c⁄ƒ
->
¢d_nxt
[2];

2307 
UIP_TCP_BUF
->
£qno
[3] = 
uù_c⁄ƒ
->
¢d_nxt
[3];

2309 
UIP_TCP_BUF
->
§˝‹t
 = 
uù_c⁄ƒ
->
Õ‹t
;

2310 
UIP_TCP_BUF
->
de°p‹t
 = 
uù_c⁄ƒ
->
Ω‹t
;

2315 
	`uù_ùaddr_c›y
(&
t˝_£nd_addr
, &
uù_udp_c⁄n
->
rùaddr
);

2318 
	`uù_ùaddr_c›y
(&
UIP_IP_BUF
->
de°ùaddr
, &
t˝_£nd_addr
);

2319 
	`uù_ds6_£À˘_§c
(&
UIP_IP_BUF
->
§cùaddr
, &UIP_IP_BUF->
de°ùaddr
);

2320 
	`PRINTF
("Sending TCPÖacketÅo ");

2321 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
de°ùaddr
);

2322 
	`PRINTF
(" from ");

2323 
	`PRINT6ADDR
(&
UIP_IP_BUF
->
§cùaddr
);

2324 
	`PRINTF
("\n");

2326 if(
uù_c⁄ƒ
->
t˝°©eÊags
 & 
UIP_STOPPED
) {

2329 
UIP_TCP_BUF
->
wnd
[0] = UIP_TCP_BUF->wnd[1] = 0;

2331 
UIP_TCP_BUF
->
wnd
[0] = ((
UIP_RECEIVE_WINDOW
) >> 8);

2332 
UIP_TCP_BUF
->
wnd
[1] = ((
UIP_RECEIVE_WINDOW
) & 0xff);

2335 
t˝_£nd_noc⁄n
:

2336 
UIP_IP_BUF
->
¥Ÿo
 = 
UIP_PROTO_TCP
;

2338 
UIP_IP_BUF
->
âl
 = 
uù_ds6_if
.
cur_h›_limô
;

2339 
UIP_IP_BUF
->
Àn
[0] = ((
uù_Àn
 - 
UIP_IPH_LEN
) >> 8);

2340 
UIP_IP_BUF
->
Àn
[1] = ((
uù_Àn
 - 
UIP_IPH_LEN
) & 0xff);

2342 
UIP_TCP_BUF
->
urgp
[0] = UIP_TCP_BUF->urgp[1] = 0;

2345 
UIP_TCP_BUF
->
t˝chksum
 = 0;

2346 
UIP_TCP_BUF
->
t˝chksum
 = ~(
	`uù_t˝chksum
());

2347 
	`UIP_STAT
(++
uù_°©
.
t˝
.
£¡
);

2350 #i‡
UIP_UDP


2351 
ù_£nd_nﬁí
:

2353 
UIP_IP_BUF
->
vtc
 = 0x60;

2354 
UIP_IP_BUF
->
tcÊow
 = 0x00;

2355 
UIP_IP_BUF
->
Êow
 = 0x00;

2356 
£nd
:

2357 
	`PRINTF
("SídögÖackë wôhÜígth %d (%d)\n", 
uù_Àn
,

2358 (
UIP_IP_BUF
->
Àn
[0] << 8) | UIP_IP_BUF->len[1]);

2360 
	`UIP_STAT
(++
uù_°©
.
ù
.
£¡
);

2362 
uù_Êags
 = 0;

2365 
dr›
:

2366 
	`uù_˛ór_buf
();

2367 
uù_ext_bôm≠
 = 0;

2368 
uù_Êags
 = 0;

2370 
	}
}

2372 
uöt16_t


2373 
	$uù_ht⁄s
(
uöt16_t
 
vÆ
)

2375  
	`UIP_HTONS
(
vÆ
);

2376 
	}
}

2378 
uöt32_t


2379 
	$uù_ht⁄l
(
uöt32_t
 
vÆ
)

2381  
	`UIP_HTONL
(
vÆ
);

2382 
	}
}

2385 
	$uù_£nd
(c⁄° *
d©a
, 
Àn
)

2387 
c›yÀn
;

2389 if(
uù_ßµd©a
 !
NULL
) {

2390 
c›yÀn
 = 
	`MIN
(
Àn
, 
UIP_BUFSIZE
 - 
UIP_LLH_LEN
 - 
UIP_TCPIP_HLEN
 -

2391 ()((*)
uù_ßµd©a
 -

2392 (*)&
uù_buf
[
UIP_LLH_LEN
 + 
UIP_TCPIP_HLEN
]));

2394 
c›yÀn
 = 
	`MIN
(
Àn
, 
UIP_BUFSIZE
 - 
UIP_LLH_LEN
 - 
UIP_TCPIP_HLEN
);

2396 if(
c›yÀn
 > 0) {

2397 
uù_¶í
 = 
c›yÀn
;

2398 if(
d©a
 !
uù_ßµd©a
) {

2399 if(
uù_ßµd©a
 =
NULL
) {

2400 
	`mem˝y
((*)&
uù_buf
[
UIP_LLH_LEN
 + 
UIP_TCPIP_HLEN
],

2401 (
d©a
), 
uù_¶í
);

2403 
	`mem˝y
(
uù_ßµd©a
, (
d©a
), 
uù_¶í
);

2407 
	}
}

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
29
506
ipv6_debug.h
sicslowpan.c
sicslowpan.h
uip-ds6-nbr.c
uip-ds6-nbr.h
uip-ds6-route.c
uip-ds6-route.h
uip-ds6.c
uip-ds6.h
uip-icmp6.c
uip-icmp6.h
uip-nd6.c
uip-nd6.h
uip6.c
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/stdc-predef.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
